# Copyright 2023 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# Keys are of the format: "model.scenario.key = value" where value is should be
# an integer or double. Use 0 and 1 for false and true, respectively for boolean
# values. "*" can be used to match all models and/or scenarios. If repeated
# values are provided, the last one takes priority.
#
# All times are in milliseconds. For custom strings, don't use quotes.
#
# Comment out lines to use the default values in loadgen instead. Note, you
# can't have comments on the same line as a key-value due to limitations in
# loadgen's config file parsing logic.
################################################################################

# Test mode is based on the TestMode enum in test_settings.h in loadgen
#   - 0: SubmissionRun
#   - 1: AccuracyOnly
#   - 2: PerformanceOnly
#   - 3: FindPeakPerformance
*.*.mode = 2

# random number generation
*.*.qsl_rng_seed = 0
*.*.sample_index_rng_seed = 0
*.*.schedule_rng_seed = 0
# *.*.accuracy_log_rng_seed = 0
# *.*.accuracy_log_probability = 0.0
# *.*.accuracy_log_sampling_target = 0

# performance sample modifiers
# *.*.print_timestamps = 0
# *.*.performance_issue_unique = 0
# *.*.performance_issue_same = 0
# *.*.performance_issue_same_index = 0
# *.*.sample_concatenate_permutation = 0
# 3D-UNet uses equal issue mode
3d-unet.*.sample_concatenate_permutation = 1
# set the QSL size per the benchmark rules
resnet50.*.performance_sample_count_override = 1024
retinanet.*.performance_sample_count_override = 64
3d-unet.*.performance_sample_count_override = 16
rnnt.*.performance_sample_count_override = 2513
bert.*.performance_sample_count_override = 10833
dlrm.*.performance_sample_count_override = 204800

# SingleStream options
*.SingleStream.target_latency_percentile = 90
*.SingleStream.min_duration = 600000
*.SingleStream.min_query_count = 1024
# must be set by the user
*.SingleStream.target_latency = 1

# MultiStream options
*.MultiStream.target_latency_percentile = 99
*.MultiStream.samples_per_query = 8
*.MultiStream.min_duration = 600000
*.MultiStream.min_query_count = 270336
retinanet.MultiStream.target_latency = 528
# must be set by the user
*.MultiStream.target_latency = 1

# Server options
*.Server.target_latency_percentile = 99
*.Server.target_latency = 10
*.Server.coalesce_queries = 0
*.Server.max_async_queries = 0
*.Server.target_duration = 0
*.Server.min_duration = 600000
*.Server.min_query_count = 270336
resnet50.Server.target_latency = 15
retinanet.Server.target_latency = 100
bert.Server.target_latency = 130
dlrm.Server.target_latency = 30
rnnt.Server.target_latency = 1000
# must be set by the user
*.Server.target_qps = 1
# these values cannot be set from the config file due to loadgen limitations:
#  - server_find_peak_qps_decimals_of_precision
#  - server_num_issue_query_threads

# Offline options
*.Offline.target_latency_percentile = 90
*.Offline.min_duration = 600000
# In Offline scenario, we always have one query. But LoadGen maps this to
# min_sample_count internally in Offline scenario, so set this to 24576 since
# the rule requires that Offline scenario run for at least 24576 samples.
*.Offline.min_query_count = 24576
# must be set by the user
*.Offline.target_qps = 1

################################################################################
# Custom arguments specific to the mlperf app in the AMD Inference Server

# these arguments override the defaults in the mlperf app source. They
# may be globally overridden by command-line arguments to the executable

# name of the worker to use
amdinfer.*.*.worker.string = <name>
# number of samples guaranteed to fit in memory
amdinfer.*.*.performance_samples.int = 1000
# path to the directory containing input data
amdinfer.*.*.input_directory.string = <path>
# number of workers to load if using local server
amdinfer.*.*.workers.int = 3
# type of client to make: must be one of native, HTTP, or gRPC
amdinfer.*.*.client_id.string = native
# address of the server if using non-native client
amdinfer.*.*.address.string = <address>
# set to true to use a remote server
amdinfer.*.*.remote_server.bool = 1

# these custom arguments must be defined here

# endpoint of the worker to use for inference if using a remote server
amdinfer.*.*.endpoint.string = <endpoint>

# path to the model file
amdinfer.*.*.parameters.model.string = <path>
