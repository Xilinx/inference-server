# Copyright 2023 Advanced Micro Devices, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff --git a/trantor/net/inner/AresResolver.cc b/trantor/net/inner/AresResolver.cc
index ec844614..4e3767b9 100644
--- a/trantor/net/inner/AresResolver.cc
+++ b/trantor/net/inner/AresResolver.cc
@@ -202,9 +202,6 @@ void AresResolver::onSockCreate(int sockfd, int type)
 void AresResolver::onSockStateChange(int sockfd, bool read, bool write)
 {
     (void)write;
-    loop_->assertInLoopThread();
-    ChannelList::iterator it = channels_.find(sockfd);
-    assert(it != channels_.end());
     if (read)
     {
         // update
@@ -212,6 +209,9 @@ void AresResolver::onSockStateChange(int sockfd, bool read, bool write)
     }
     else if (*loopValid_)
     {
+        loop_->assertInLoopThread();
+        ChannelList::iterator it = channels_.find(sockfd);
+        assert(it != channels_.end());
         // remove
         it->second->disableAll();
         it->second->remove();
