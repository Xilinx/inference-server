selector_to_html = {"a[href=\"#inheritance-relationships\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#base-type\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4NK8amdinfer23InferenceResponseOutput7getDataEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer23InferenceResponseOutput7getDataEv\">\n<span id=\"_CPPv3NK8amdinfer23InferenceResponseOutput7getDataEv\"></span><span id=\"_CPPv2NK8amdinfer23InferenceResponseOutput7getDataEv\"></span><span id=\"amdinfer::InferenceResponseOutput::getDataC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a74cf9d0dadedfec35dadfb06e3da9205\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getData</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get a pointer to the request\u2019s data. </p></dd>", "a[href=\"#_CPPv4N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv\">\n<span id=\"_CPPv3N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv\"></span><span id=\"_CPPv2N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv\"></span><span id=\"amdinfer::InferenceResponseOutput::InferenceResponseOutput\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a9f75d53892a49e11ef64db4337e537fe\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceResponseOutput</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructs a new <a class=\"reference internal\" href=\"#classamdinfer_1_1InferenceResponseOutput\"><span class=\"std std-ref\">InferenceResponseOutput</span></a> object. </p></dd>", "a[href=\"#_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput\">\n<span id=\"_CPPv3N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput\"></span><span id=\"_CPPv2N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput\"></span><span id=\"amdinfer::InferenceResponseOutput::lshift-operator__osR.InferenceResponseOutputCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a2af8ea1fe407ffd8795865f15ecf8e47\"></span><span class=\"k\"><span class=\"pre\">friend</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span>, <a class=\"reference internal\" href=\"#_CPPv4N8amdinfer23InferenceResponseOutputE\" title=\"amdinfer::InferenceResponseOutput\"><span class=\"n\"><span class=\"pre\">InferenceResponseOutput</span></span></a><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">my_class</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provides an implementation to print the class with std::cout to an ostream. </p></dd>", "a[href=\"#_CPPv4N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE\">\n<span id=\"_CPPv3N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE\"></span><span id=\"_CPPv2N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE\"></span><span id=\"amdinfer::InferenceResponseOutput::setData__std::vector:std::byte:RR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1ad80d8cd96ddd5e09cf8e64589addc4a9\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setData</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">buffer</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the request\u2019s data. </p></dd>", "a[href=\"#class-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#_CPPv4N8amdinfer23InferenceResponseOutputE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer23InferenceResponseOutputE\">\n<span id=\"_CPPv3N8amdinfer23InferenceResponseOutputE\"></span><span id=\"_CPPv2N8amdinfer23InferenceResponseOutputE\"></span><span id=\"amdinfer::InferenceResponseOutput\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceResponseOutput</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceTensor.html#_CPPv4N8amdinfer15InferenceTensorE\" title=\"amdinfer::InferenceTensor\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></a><br/></dt><dd><p>Holds an inference request\u2019s input data. </p></dd>", "a[href=\"../cpp_user_api.html#_CPPv48amdinfer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48amdinfer\">\n<span id=\"_CPPv38amdinfer\"></span><span id=\"_CPPv28amdinfer\"></span><span id=\"amdinfer\"></span><span class=\"target\" id=\"namespaceamdinfer\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE\">\n<span id=\"_CPPv3N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE\"></span><span id=\"_CPPv2N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE\"></span><span id=\"amdinfer::InferenceResponseOutput::deserialize__std::byteCP\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a3e05c480460dc8374299aa3baed1bab4\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">deserialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Deserializes the data at the provided memory address to initialize this object. If the memory cannot be deserialized, an exception is thrown. </p></dd>", "a[href=\"file__workspace_amdinfer_include_amdinfer_core_inference_response.hpp.html#file-workspace-amdinfer-include-amdinfer-core-inference-response-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File inference_response.hpp<a class=\"headerlink\" href=\"#file-inference-response-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_include_amdinfer_core.html#dir-workspace-amdinfer-include-amdinfer-core\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/include/amdinfer/core</span></code>)</p><p>Defines the objects used to hold inference responses.</p>", "a[href=\"classamdinfer_1_1InferenceTensor.html#_CPPv4N8amdinfer15InferenceTensorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensorE\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensorE\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensorE\"></span><span id=\"amdinfer::InferenceTensor\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\" title=\"amdinfer::Tensor\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></a><br/></dt><dd><p>Subclassed by <a class=\"reference internal\" href=\"../cpp_user_api.html#classamdinfer_1_1InferenceRequestInput\"><span class=\"std std-ref\">amdinfer::InferenceRequestInput</span></a>, <a class=\"reference internal\" href=\"classamdinfer_1_1InferenceResponseOutput.html#classamdinfer_1_1InferenceResponseOutput\"><span class=\"std std-ref\">amdinfer::InferenceResponseOutput</span></a></p></dd>", "a[href=\"classamdinfer_1_1InferenceTensor.html#exhale-class-classamdinfer-1-1inferencetensor\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceTensor<a class=\"headerlink\" href=\"#class-inferencetensor\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE\">\n<span id=\"_CPPv3NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE\"></span><span id=\"_CPPv2NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE\"></span><span id=\"amdinfer::InferenceResponseOutput::serialize__std::bytePC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a8d4306ebdbb1565f6fc0ad98f85e8a02\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_out</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Serializes the object to the provided memory address. There should be sufficient space to store the serialized object. </p></dd>", "a[href=\"#class-inferenceresponseoutput\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceResponseOutput<a class=\"headerlink\" href=\"#class-inferenceresponseoutput\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4NK8amdinfer23InferenceResponseOutput13serializeSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer23InferenceResponseOutput13serializeSizeEv\">\n<span id=\"_CPPv3NK8amdinfer23InferenceResponseOutput13serializeSizeEv\"></span><span id=\"_CPPv2NK8amdinfer23InferenceResponseOutput13serializeSizeEv\"></span><span id=\"amdinfer::InferenceResponseOutput::serializeSizeC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponseOutput_1a14578418aeb5797b5e4ed735ae709618\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serializeSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Returns the size of the serialized data. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
