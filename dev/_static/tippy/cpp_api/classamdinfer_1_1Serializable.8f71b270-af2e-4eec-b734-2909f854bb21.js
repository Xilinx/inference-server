selector_to_html = {"a[href=\"file__workspace_amdinfer_include_amdinfer_core_mixins.hpp.html#file-workspace-amdinfer-include-amdinfer-core-mixins-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File mixins.hpp<a class=\"headerlink\" href=\"#file-mixins-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_include_amdinfer_core.html#dir-workspace-amdinfer-include-amdinfer-core\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/include/amdinfer/core</span></code>)</p>", "a[href=\"#inheritance-relationships\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Derived Types<a class=\"headerlink\" href=\"#derived-types\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"classamdinfer_1_1Tensor.html#exhale-class-classamdinfer-1-1tensor\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class Tensor<a class=\"headerlink\" href=\"#class-tensor\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#derived-types\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Derived Types<a class=\"headerlink\" href=\"#derived-types\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4NK8amdinfer12Serializable13serializeSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer12Serializable13serializeSizeEv\">\n<span id=\"_CPPv3NK8amdinfer12Serializable13serializeSizeEv\"></span><span id=\"_CPPv2NK8amdinfer12Serializable13serializeSizeEv\"></span><span id=\"amdinfer::Serializable::serializeSizeC\"></span><span class=\"target\" id=\"classamdinfer_1_1Serializable_1adf002be7e990ae3269aeb8bfc8da2b10\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serializeSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Returns the size of the serialized data. </p></dd>", "a[href=\"#_CPPv4NK8amdinfer12Serializable9serializeEPNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer12Serializable9serializeEPNSt4byteE\">\n<span id=\"_CPPv3NK8amdinfer12Serializable9serializeEPNSt4byteE\"></span><span id=\"_CPPv2NK8amdinfer12Serializable9serializeEPNSt4byteE\"></span><span id=\"amdinfer::Serializable::serialize__std::bytePC\"></span><span class=\"target\" id=\"classamdinfer_1_1Serializable_1aa704d53573afdd01f626ee5d709edc40\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_out</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Serializes the object to the provided memory address. There should be sufficient space to store the serialized object. </p></dd>", "a[href=\"#_CPPv4N8amdinfer12Serializable11deserializeEPKNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer12Serializable11deserializeEPKNSt4byteE\">\n<span id=\"_CPPv3N8amdinfer12Serializable11deserializeEPKNSt4byteE\"></span><span id=\"_CPPv2N8amdinfer12Serializable11deserializeEPKNSt4byteE\"></span><span id=\"amdinfer::Serializable::deserialize__std::byteCP\"></span><span class=\"target\" id=\"classamdinfer_1_1Serializable_1a8f742799015e72450942fdb3f318e71c\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">deserialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Deserializes the data at the provided memory address to initialize this object. If the memory cannot be deserialized, an exception is thrown. </p></dd>", "a[href=\"#class-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#_CPPv4N8amdinfer12SerializableE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer12SerializableE\">\n<span id=\"_CPPv3N8amdinfer12SerializableE\"></span><span id=\"_CPPv2N8amdinfer12SerializableE\"></span><span id=\"amdinfer::Serializable\"></span><span class=\"target\" id=\"classamdinfer_1_1Serializable\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Serializable</span></span></span><br/></dt><dd><p>This class can be inherited from to implement serialization and deserialization in a class. </p><p>Subclassed by <a class=\"reference internal\" href=\"../cpp_user_api.html#classamdinfer_1_1ParameterMap\"><span class=\"std std-ref\">amdinfer::ParameterMap</span></a>, <a class=\"reference internal\" href=\"classamdinfer_1_1Tensor.html#classamdinfer_1_1Tensor\"><span class=\"std std-ref\">amdinfer::Tensor</span></a></p></dd>", "a[href=\"#class-serializable\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class Serializable<a class=\"headerlink\" href=\"#class-serializable\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Derived Types<a class=\"headerlink\" href=\"#derived-types\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4N8amdinfer12SerializableD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer12SerializableD0Ev\">\n<span id=\"_CPPv3N8amdinfer12SerializableD0Ev\"></span><span id=\"_CPPv2N8amdinfer12SerializableD0Ev\"></span><span id=\"amdinfer::Serializable::~Serializable\"></span><span class=\"target\" id=\"classamdinfer_1_1Serializable_1a45a7c4a45e2aeab3464e09275d3e6483\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~Serializable</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"classamdinfer_1_1ParameterMap.html#exhale-class-classamdinfer-1-1parametermap\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class ParameterMap<a class=\"headerlink\" href=\"#class-parametermap\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
