selector_to_html = {"a[href=\"#_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest13setParametersE12ParameterMap\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest13setParametersE12ParameterMap\"></span><span id=\"amdinfer::InferenceRequest::setParameters__ParameterMap\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a542a16130e1ff0afab1de3818dbf5d4c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setParameters</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">parameters</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sets the parameters for the request. </p></dd>", "a[href=\"#class-inferencerequest\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceRequest<a class=\"headerlink\" href=\"#class-inferencerequest\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest9propagateEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest9propagateEv\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest9propagateEv\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest9propagateEv\"></span><span id=\"amdinfer::InferenceRequest::propagate\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a0ada895b3d9f2948fec5c31fe45394a9\"></span><a class=\"reference internal\" href=\"typedef_declarations_8hpp_1a12cdaf478119a089d1dbe6deecc13dfe.html#_CPPv4N8amdinfer19InferenceRequestPtrE\" title=\"amdinfer::InferenceRequestPtr\"><span class=\"n\"><span class=\"pre\">InferenceRequestPtr</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">propagate</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse\"></span><span id=\"amdinfer::InferenceRequest::runCallback__InferenceResponseCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a95b1a76e89469a40f74c848c81848ef6\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">runCallback</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceResponse.html#_CPPv4N8amdinfer17InferenceResponseE\" title=\"amdinfer::InferenceResponse\"><span class=\"n\"><span class=\"pre\">InferenceResponse</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">response</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Runs the request\u2019s callback function. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse\"></span><span id=\"amdinfer::InferenceRequest::runCallbackOnce__InferenceResponseCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a946239cf313524780bdde0b69e0ba61e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">runCallbackOnce</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceResponse.html#_CPPv4N8amdinfer17InferenceResponseE\" title=\"amdinfer::InferenceResponse\"><span class=\"n\"><span class=\"pre\">InferenceResponse</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">response</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Runs the request\u2019s callback function and clear it after. This prevents calling the callback multiple times. If this function is called again, it\u2019s a no-op. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest11setCallbackERR8Callback\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest11setCallbackERR8Callback\"></span><span id=\"amdinfer::InferenceRequest::setCallback__CallbackRR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a77c7883fab4ebb179192f9dd764753f3\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setCallback</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"typedef_declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5.html#_CPPv4N8amdinfer8CallbackE\" title=\"amdinfer::Callback\"><span class=\"n\"><span class=\"pre\">Callback</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">callback</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sets the request\u2019s callback function used by the last worker to respond back to the client. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequestE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequestE\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequestE\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequestE\"></span><span id=\"amdinfer::InferenceRequest\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceRequest</span></span></span><br/></dt><dd><p>Creates an inference request object based on KServe\u2019s V2 spec that is used to communicate between workers. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput\"></span><span id=\"amdinfer::InferenceRequest::addOutputTensor__InferenceRequestOutputCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1aa8f657a5ac618f3496115be7718e818e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">addOutputTensor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceRequestOutput.html#_CPPv4N8amdinfer22InferenceRequestOutputE\" title=\"amdinfer::InferenceRequestOutput\"><span class=\"n\"><span class=\"pre\">InferenceRequestOutput</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">output</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adds a new output tensor to this request. </p></dd>", "a[href=\"classamdinfer_1_1InferenceRequestOutput.html#_CPPv4N8amdinfer22InferenceRequestOutputE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer22InferenceRequestOutputE\">\n<span id=\"_CPPv3N8amdinfer22InferenceRequestOutputE\"></span><span id=\"_CPPv2N8amdinfer22InferenceRequestOutputE\"></span><span id=\"amdinfer::InferenceRequestOutput\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequestOutput\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceRequestOutput</span></span></span><br/></dt><dd><p>Holds an inference request\u2019s output data. </p></dd>", "a[href=\"classamdinfer_1_1InferenceResponse.html#_CPPv4N8amdinfer17InferenceResponseE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer17InferenceResponseE\">\n<span id=\"_CPPv3N8amdinfer17InferenceResponseE\"></span><span id=\"_CPPv2N8amdinfer17InferenceResponseE\"></span><span id=\"amdinfer::InferenceResponse\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceResponse\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceResponse</span></span></span><br/></dt><dd><p>Creates an inference response object based on KServe\u2019s V2 spec that is used to respond back to clients. </p></dd>", "a[href=\"typedef_declarations_8hpp_1a12cdaf478119a089d1dbe6deecc13dfe.html#_CPPv4N8amdinfer19InferenceRequestPtrE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer19InferenceRequestPtrE\">\n<span id=\"_CPPv3N8amdinfer19InferenceRequestPtrE\"></span><span id=\"_CPPv2N8amdinfer19InferenceRequestPtrE\"></span><span class=\"target\" id=\"declarations_8hpp_1a12cdaf478119a089d1dbe6deecc13dfe\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceRequestPtr</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">shared_ptr</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceRequest.html#_CPPv4N8amdinfer16InferenceRequestE\" title=\"amdinfer::InferenceRequest\"><span class=\"n\"><span class=\"pre\">InferenceRequest</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"classamdinfer_1_1DataType.html#_CPPv4N8amdinfer8DataTypeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer8DataTypeE\">\n<span id=\"_CPPv3N8amdinfer8DataTypeE\"></span><span id=\"_CPPv2N8amdinfer8DataTypeE\"></span><span id=\"amdinfer::DataType\"></span><span class=\"target\" id=\"classamdinfer_1_1DataType\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataType</span></span></span><br/></dt><dd><p>Supported data types. The ALL_CAPS aliases are deprecated and will be removed. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE\"></span><span id=\"amdinfer::InferenceRequest::addInputTensor__voidP.std::vector:uint64_t:CR.DataType.ssCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a0110c478bed2f2895f55c7826b303405\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">addInputTensor</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">shape</span></span>, <a class=\"reference internal\" href=\"classamdinfer_1_1DataType.html#_CPPv4N8amdinfer8DataTypeE\" title=\"amdinfer::DataType\"><span class=\"n\"><span class=\"pre\">DataType</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">data_type</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructs and adds a new input tensor to this request. </p></dd>", "a[href=\"#_CPPv4NK8amdinfer16InferenceRequest5getIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer16InferenceRequest5getIDEv\">\n<span id=\"_CPPv3NK8amdinfer16InferenceRequest5getIDEv\"></span><span id=\"_CPPv2NK8amdinfer16InferenceRequest5getIDEv\"></span><span id=\"amdinfer::InferenceRequest::getIDC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a013765ea3c819532bcc943c326bcafee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Gets the ID associated with this request. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest5setIDENSt11string_viewE\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest5setIDENSt11string_viewE\"></span><span id=\"amdinfer::InferenceRequest::setID__std::string_view\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a6aefe55e7a314df6d1e85b225e1da455\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sets the ID associated with this request. </p></dd>", "a[href=\"#class-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#_CPPv4NO8amdinfer16InferenceRequest13getParametersEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NO8amdinfer16InferenceRequest13getParametersEv\">\n<span id=\"_CPPv3NO8amdinfer16InferenceRequest13getParametersEv\"></span><span id=\"_CPPv2NO8amdinfer16InferenceRequest13getParametersEv\"></span><span id=\"amdinfer::InferenceRequest::getParametersO\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1ae15f77270524a73db26a29ef620179dd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getParameters</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;&amp;</span></span><br/></dt><dd><p>Get the request\u2019s parameters. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest16InferenceRequestEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest16InferenceRequestEv\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest16InferenceRequestEv\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest16InferenceRequestEv\"></span><span id=\"amdinfer::InferenceRequest::InferenceRequest\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1aba4e78b5d29ad40d345c19c252910985\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceRequest</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput\"></span><span id=\"amdinfer::InferenceRequest::addInputTensor__InferenceRequestInput\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1ad649042b4dca6bd6d6beaff7ed3fd5c5\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">addInputTensor</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceRequestInput.html#_CPPv4N8amdinfer21InferenceRequestInputE\" title=\"amdinfer::InferenceRequestInput\"><span class=\"n\"><span class=\"pre\">InferenceRequestInput</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">input</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adds a new input tensor to this request. </p></dd>", "a[href=\"#_CPPv4NK8amdinfer16InferenceRequest9getInputsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer16InferenceRequest9getInputsEv\">\n<span id=\"_CPPv3NK8amdinfer16InferenceRequest9getInputsEv\"></span><span id=\"_CPPv2NK8amdinfer16InferenceRequest9getInputsEv\"></span><span id=\"amdinfer::InferenceRequest::getInputsC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a4a24289d197880c0c8bb6d8266c23768\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceRequestInput.html#_CPPv4N8amdinfer21InferenceRequestInputE\" title=\"amdinfer::InferenceRequestInput\"><span class=\"n\"><span class=\"pre\">InferenceRequestInput</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getInputs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Gets a vector of all the input request objects. </p></dd>", "a[href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer12ParameterMapE\">\n<span id=\"_CPPv3N8amdinfer12ParameterMapE\"></span><span id=\"_CPPv2N8amdinfer12ParameterMapE\"></span><span id=\"amdinfer::ParameterMap\"></span><span class=\"target\" id=\"classamdinfer_1_1ParameterMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Serializable.html#_CPPv4N8amdinfer12SerializableE\" title=\"amdinfer::Serializable\"><span class=\"n\"><span class=\"pre\">Serializable</span></span></a><br/></dt><dd><p>Holds any parameters from JSON (defined by KServe spec as one of bool, number or string). We further restrict numbers to be doubles or int32. </p></dd>", "a[href=\"classamdinfer_1_1InferenceRequestInput.html#_CPPv4N8amdinfer21InferenceRequestInputE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer21InferenceRequestInputE\">\n<span id=\"_CPPv3N8amdinfer21InferenceRequestInputE\"></span><span id=\"_CPPv2N8amdinfer21InferenceRequestInputE\"></span><span id=\"amdinfer::InferenceRequestInput\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequestInput\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceRequestInput</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceTensor.html#_CPPv4N8amdinfer15InferenceTensorE\" title=\"amdinfer::InferenceTensor\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></a><br/></dt><dd><p>Holds an inference request\u2019s input data. </p></dd>", "a[href=\"#_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv\">\n<span id=\"_CPPv3NKR8amdinfer16InferenceRequest13getParametersEv\"></span><span id=\"_CPPv2NKR8amdinfer16InferenceRequest13getParametersEv\"></span><span id=\"amdinfer::InferenceRequest::getParametersCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a918f29f0f4c51cbe7f4aac7aaa288888\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getParameters</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd><p>Get the request\u2019s parameters. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest11getCallbackEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest11getCallbackEv\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest11getCallbackEv\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest11getCallbackEv\"></span><span id=\"amdinfer::InferenceRequest::getCallback\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a292dc6a849cca351f41ddd53210999b9\"></span><a class=\"reference internal\" href=\"typedef_declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5.html#_CPPv4N8amdinfer8CallbackE\" title=\"amdinfer::Callback\"><span class=\"n\"><span class=\"pre\">Callback</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getCallback</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the request\u2019s callback function used by the last worker to respond back to the client. </p></dd>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv\"></span><span id=\"amdinfer::InferenceRequest::setInputTensorData__s.voidP\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a4df2a31d378e98c2bf49090a72aee523\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setInputTensorData</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index</span></span>, <span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the data pointer for an input tensor, if it exists. </p></dd>", "a[href=\"typedef_declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5.html#_CPPv4N8amdinfer8CallbackE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer8CallbackE\">\n<span id=\"_CPPv3N8amdinfer8CallbackE\"></span><span id=\"_CPPv2N8amdinfer8CallbackE\"></span><span class=\"target\" id=\"declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Callback</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceResponse.html#_CPPv4N8amdinfer17InferenceResponseE\" title=\"amdinfer::InferenceResponse\"><span class=\"n\"><span class=\"pre\">InferenceResponse</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv\">\n<span id=\"_CPPv3NK8amdinfer16InferenceRequest10getOutputsEv\"></span><span id=\"_CPPv2NK8amdinfer16InferenceRequest10getOutputsEv\"></span><span id=\"amdinfer::InferenceRequest::getOutputsC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1ac1a7419253ea2e9078b6f36155c59183\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1InferenceRequestOutput.html#_CPPv4N8amdinfer22InferenceRequestOutputE\" title=\"amdinfer::InferenceRequestOutput\"><span class=\"n\"><span class=\"pre\">InferenceRequestOutput</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getOutputs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Gets a vector of the requested output information. </p></dd>", "a[href=\"#_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv\">\n<span id=\"_CPPv3NK8amdinfer16InferenceRequest12getInputSizeEv\"></span><span id=\"_CPPv2NK8amdinfer16InferenceRequest12getInputSizeEv\"></span><span id=\"amdinfer::InferenceRequest::getInputSizeC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1a353d106e04d0d81b0e6d31948d082d05\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getInputSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the number of input request objects. </p></dd>", "a[href=\"file__workspace_amdinfer_include_amdinfer_core_inference_request.hpp.html#file-workspace-amdinfer-include-amdinfer-core-inference-request-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File inference_request.hpp<a class=\"headerlink\" href=\"#file-inference-request-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_include_amdinfer_core.html#dir-workspace-amdinfer-include-amdinfer-core\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/include/amdinfer/core</span></code>)</p>", "a[href=\"#_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE\">\n<span id=\"_CPPv3N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE\"></span><span id=\"_CPPv2N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE\"></span><span id=\"amdinfer::InferenceRequest::runCallbackError__std::string_view\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceRequest_1af108ea4470589a26b45794e55e8cb21c\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">runCallbackError</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">error_msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Runs the request\u2019s callback function with an error response. The callback function is not cleared. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
