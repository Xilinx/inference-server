selector_to_html = {"a[href=\"#_CPPv4N8amdinfer15MemoryAllocatorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15MemoryAllocatorE\">\n<span id=\"_CPPv3N8amdinfer15MemoryAllocatorE\"></span><span id=\"_CPPv2N8amdinfer15MemoryAllocatorE\"></span><span id=\"amdinfer::MemoryAllocator\"></span><span class=\"target\" id=\"classamdinfer_1_1MemoryAllocator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MemoryAllocator</span></span></span><br/></dt><dd><p>Subclassed by <a class=\"reference internal\" href=\"classamdinfer_1_1CpuAllocator.html#classamdinfer_1_1CpuAllocator\"><span class=\"std std-ref\">amdinfer::CpuAllocator</span></a></p></dd>", "a[href=\"file__workspace_amdinfer_src_amdinfer_core_memory_pool_memory_allocator.hpp.html#file-workspace-amdinfer-src-amdinfer-core-memory-pool-memory-allocator-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File memory_allocator.hpp<a class=\"headerlink\" href=\"#file-memory-allocator-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_src_amdinfer_core_memory_pool.html#dir-workspace-amdinfer-src-amdinfer-core-memory-pool\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/core/memory_pool</span></code>)</p>", "a[href=\"#inheritance-relationships\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Derived Type<a class=\"headerlink\" href=\"#derived-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer6TensorE\">\n<span id=\"_CPPv3N8amdinfer6TensorE\"></span><span id=\"_CPPv2N8amdinfer6TensorE\"></span><span id=\"amdinfer::Tensor\"></span><span class=\"target\" id=\"classamdinfer_1_1Tensor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Serializable.html#_CPPv4N8amdinfer12SerializableE\" title=\"amdinfer::Serializable\"><span class=\"n\"><span class=\"pre\">Serializable</span></span></a><br/></dt><dd><p>Describe a tensor with a name, shape and datatype. </p><p>Subclassed by <a class=\"reference internal\" href=\"classamdinfer_1_1InferenceTensor.html#classamdinfer_1_1InferenceTensor\"><span class=\"std std-ref\">amdinfer::InferenceTensor</span></a>, <a class=\"reference internal\" href=\"classamdinfer_1_1ModelConfigTensor.html#classamdinfer_1_1ModelConfigTensor\"><span class=\"std std-ref\">amdinfer::ModelConfigTensor</span></a></p></dd>", "a[href=\"#_CPPv4N8amdinfer15MemoryAllocator3putEPKv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15MemoryAllocator3putEPKv\">\n<span id=\"_CPPv3N8amdinfer15MemoryAllocator3putEPKv\"></span><span id=\"_CPPv2N8amdinfer15MemoryAllocator3putEPKv\"></span><span id=\"amdinfer::MemoryAllocator::put__voidCP\"></span><span class=\"target\" id=\"classamdinfer_1_1MemoryAllocator_1aca39efd69ffbeb2b47a034d4c2ae4982\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">put</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">address</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t\">\n<span id=\"_CPPv3N8amdinfer15MemoryAllocator3getERK6Tensor6size_t\"></span><span id=\"_CPPv2N8amdinfer15MemoryAllocator3getERK6Tensor6size_t\"></span><span id=\"amdinfer::MemoryAllocator::get__TensorCR.s\"></span><span class=\"target\" id=\"classamdinfer_1_1MemoryAllocator_1a0a15f977953a27234ecb2918c8ae5d2d\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"typedef_declarations_8hpp_1aa722db0b3b3c1bb8e56367ff9b0390ab.html#_CPPv4N8amdinfer9BufferPtrE\" title=\"amdinfer::BufferPtr\"><span class=\"n\"><span class=\"pre\">BufferPtr</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\" title=\"amdinfer::Tensor\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tensor</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">batch_size</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"classamdinfer_1_1CpuAllocator.html#exhale-class-classamdinfer-1-1cpuallocator\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class CpuAllocator<a class=\"headerlink\" href=\"#class-cpuallocator\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#class-memoryallocator\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class MemoryAllocator<a class=\"headerlink\" href=\"#class-memoryallocator\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Derived Type<a class=\"headerlink\" href=\"#derived-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#class-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"typedef_declarations_8hpp_1aa722db0b3b3c1bb8e56367ff9b0390ab.html#_CPPv4N8amdinfer9BufferPtrE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer9BufferPtrE\">\n<span id=\"_CPPv3N8amdinfer9BufferPtrE\"></span><span id=\"_CPPv2N8amdinfer9BufferPtrE\"></span><span class=\"target\" id=\"declarations_8hpp_1aa722db0b3b3c1bb8e56367ff9b0390ab\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-prename descclassname\"><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BufferPtr</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unique_ptr</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Buffer.html#_CPPv4N8amdinfer6BufferE\" title=\"amdinfer::Buffer\"><span class=\"n\"><span class=\"pre\">Buffer</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer15MemoryAllocatorD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15MemoryAllocatorD0Ev\">\n<span id=\"_CPPv3N8amdinfer15MemoryAllocatorD0Ev\"></span><span id=\"_CPPv2N8amdinfer15MemoryAllocatorD0Ev\"></span><span id=\"amdinfer::MemoryAllocator::~MemoryAllocator\"></span><span class=\"target\" id=\"classamdinfer_1_1MemoryAllocator_1ad0f4637cecc931200f37cc7c451dbe07\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~MemoryAllocator</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#derived-type\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Derived Type<a class=\"headerlink\" href=\"#derived-type\" title=\"Permalink to this heading\">\u00b6</a></h3>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
