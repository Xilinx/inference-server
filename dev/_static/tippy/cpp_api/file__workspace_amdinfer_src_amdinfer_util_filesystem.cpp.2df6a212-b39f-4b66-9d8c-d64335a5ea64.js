selector_to_html = {"a[href=\"program_listing_file__workspace_amdinfer_src_amdinfer_util_filesystem.cpp.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Program Listing for File filesystem.cpp<a class=\"headerlink\" href=\"#program-listing-for-file-filesystem-cpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"file__workspace_amdinfer_src_amdinfer_util_filesystem.cpp.html#file-workspace-amdinfer-src-amdinfer-util-filesystem-cpp\"><span class=\"std std-ref\">Return to documentation for file</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/util/filesystem.cpp</span></code>)</p>", "a[href=\"namespace_amdinfer__util.html#namespace-amdinfer-util\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Namespace amdinfer::util<a class=\"headerlink\" href=\"#namespace-amdinfer-util\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Classes<a class=\"headerlink\" href=\"#classes\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#namespaces\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Namespaces<a class=\"headerlink\" href=\"#namespaces\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#file-filesystem-cpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File filesystem.cpp<a class=\"headerlink\" href=\"#file-filesystem-cpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_src_amdinfer_util.html#dir-workspace-amdinfer-src-amdinfer-util\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/util</span></code>)</p>", "a[href=\"function_filesystem_8cpp_1a9c139c7eb99db1b4be48805a5452548a.html#exhale-function-filesystem-8cpp-1a9c139c7eb99db1b4be48805a5452548a\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Function amdinfer::util::findFile(const fs::path&amp;, const std::string&amp;)<a class=\"headerlink\" href=\"#function-amdinfer-util-findfile-const-fs-path-const-std-string\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Function Documentation<a class=\"headerlink\" href=\"#function-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#functions\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Functions<a class=\"headerlink\" href=\"#functions\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"namespace_amdinfer.html#namespace-amdinfer\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Namespace amdinfer<a class=\"headerlink\" href=\"#namespace-amdinfer\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Namespaces<a class=\"headerlink\" href=\"#namespaces\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"file__workspace_amdinfer_src_amdinfer_util_filesystem.hpp.html#file-workspace-amdinfer-src-amdinfer-util-filesystem-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File filesystem.hpp<a class=\"headerlink\" href=\"#file-filesystem-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_src_amdinfer_util.html#dir-workspace-amdinfer-src-amdinfer-util\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/util</span></code>)</p>", "a[href=\"function_filesystem_8cpp_1a376d9403c48cc8e17b3db68c8193e6ee.html#exhale-function-filesystem-8cpp-1a376d9403c48cc8e17b3db68c8193e6ee\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Function amdinfer::util::readFile<a class=\"headerlink\" href=\"#function-amdinfer-util-readfile\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Function Documentation<a class=\"headerlink\" href=\"#function-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"dir__workspace_amdinfer_src_amdinfer_util.html#dir-workspace-amdinfer-src-amdinfer-util\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Directory util<a class=\"headerlink\" href=\"#directory-util\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_src_amdinfer.html#dir-workspace-amdinfer-src-amdinfer\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer</span></code>)</p><p><em>Directory path:</em> <code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/util</span></code></p>", "a[href=\"file__workspace_amdinfer_include_amdinfer_core_exceptions.hpp.html#file-workspace-amdinfer-include-amdinfer-core-exceptions-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File exceptions.hpp<a class=\"headerlink\" href=\"#file-exceptions-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_include_amdinfer_core.html#dir-workspace-amdinfer-include-amdinfer-core\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/include/amdinfer/core</span></code>)</p><p>Defines the exception classes. Exception classes follow lower-case snake case name syntax of the standard exceptions in std.</p>", "a[href=\"#definition-workspace-amdinfer-src-amdinfer-util-filesystem-cpp\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Definition (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/src/amdinfer/util/filesystem.cpp</span></code>)<a class=\"headerlink\" href=\"#definition-workspace-amdinfer-src-amdinfer-util-filesystem-cpp\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#includes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Includes<a class=\"headerlink\" href=\"#includes\" title=\"Permalink to this heading\">\u00b6</a></h2>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
