selector_to_html = {"a[href=\"classamdinfer_1_1Tensor.html#exhale-class-classamdinfer-1-1tensor\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class Tensor<a class=\"headerlink\" href=\"#class-tensor\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer6TensorE\">\n<span id=\"_CPPv3N8amdinfer6TensorE\"></span><span id=\"_CPPv2N8amdinfer6TensorE\"></span><span id=\"amdinfer::Tensor\"></span><span class=\"target\" id=\"classamdinfer_1_1Tensor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Serializable.html#_CPPv4N8amdinfer12SerializableE\" title=\"amdinfer::Serializable\"><span class=\"n\"><span class=\"pre\">Serializable</span></span></a><br/></dt><dd><p>Describe a tensor with a name, shape and datatype. </p><p>Subclassed by <a class=\"reference internal\" href=\"classamdinfer_1_1InferenceTensor.html#classamdinfer_1_1InferenceTensor\"><span class=\"std std-ref\">amdinfer::InferenceTensor</span></a>, <a class=\"reference internal\" href=\"classamdinfer_1_1ModelConfigTensor.html#classamdinfer_1_1ModelConfigTensor\"><span class=\"std std-ref\">amdinfer::ModelConfigTensor</span></a></p></dd>", "a[href=\"#_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType\"></span><span id=\"amdinfer::InferenceTensor::InferenceTensor__ss.std::vector:uint64_t:.DataType\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1abc76d51489ab8070d9586ba9455ba16f\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">shape</span></span>, <a class=\"reference internal\" href=\"classamdinfer_1_1DataType.html#_CPPv4N8amdinfer8DataTypeE\" title=\"amdinfer::DataType\"><span class=\"n\"><span class=\"pre\">DataType</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">data_type</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a new <a class=\"reference internal\" href=\"#classamdinfer_1_1InferenceTensor\"><span class=\"std std-ref\">InferenceTensor</span></a> object. </p></dd>", "a[href=\"#derived-types\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Derived Types<a class=\"headerlink\" href=\"#derived-types\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#class-inferencetensor\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceTensor<a class=\"headerlink\" href=\"#class-inferencetensor\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#base-type\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"file__workspace_amdinfer_include_amdinfer_core_inference_tensor.hpp.html#file-workspace-amdinfer-include-amdinfer-core-inference-tensor-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File inference_tensor.hpp<a class=\"headerlink\" href=\"#file-inference-tensor-hpp\" title=\"Permalink to this heading\">\u00b6</a></h1><p>\u21b0 <a class=\"reference internal\" href=\"dir__workspace_amdinfer_include_amdinfer_core.html#dir-workspace-amdinfer-include-amdinfer-core\"><span class=\"std std-ref\">Parent directory</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">/workspace/amdinfer/include/amdinfer/core</span></code>)</p>", "a[href=\"#_CPPv4N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE\"></span><span id=\"amdinfer::InferenceTensor::deserialize__std::byteCP\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a5b06186e7f780ef88481e77d8b5354c0\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">deserialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Deserializes the data at the provided memory address to initialize this object. If the memory cannot be deserialized, an exception is thrown. </p></dd>", "a[href=\"classamdinfer_1_1DataType.html#_CPPv4N8amdinfer8DataTypeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer8DataTypeE\">\n<span id=\"_CPPv3N8amdinfer8DataTypeE\"></span><span id=\"_CPPv2N8amdinfer8DataTypeE\"></span><span id=\"amdinfer::DataType\"></span><span class=\"target\" id=\"classamdinfer_1_1DataType\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataType</span></span></span><br/></dt><dd><p>Supported data types. The ALL_CAPS aliases are deprecated and will be removed. </p></dd>", "a[href=\"classamdinfer_1_1InferenceRequestInput.html#exhale-class-classamdinfer-1-1inferencerequestinput\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceRequestInput<a class=\"headerlink\" href=\"#class-inferencerequestinput\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"classamdinfer_1_1InferenceResponseOutput.html#exhale-class-classamdinfer-1-1inferenceresponseoutput\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Class InferenceResponseOutput<a class=\"headerlink\" href=\"#class-inferenceresponseoutput\" title=\"Permalink to this heading\">\u00b6</a></h1><h2>Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#inheritance-relationships\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Inheritance Relationships<a class=\"headerlink\" href=\"#inheritance-relationships\" title=\"Permalink to this heading\">\u00b6</a></h2><h3>Base Type<a class=\"headerlink\" href=\"#base-type\" title=\"Permalink to this heading\">\u00b6</a></h3>", "a[href=\"#_CPPv4NKR8amdinfer15InferenceTensor13getParametersEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NKR8amdinfer15InferenceTensor13getParametersEv\">\n<span id=\"_CPPv3NKR8amdinfer15InferenceTensor13getParametersEv\"></span><span id=\"_CPPv2NKR8amdinfer15InferenceTensor13getParametersEv\"></span><span id=\"amdinfer::InferenceTensor::getParametersCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a2de5e06c9417f62c98cd240edfd2ab56\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getParameters</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd><p>Get the tensor\u2019s parameters. </p></dd>", "a[href=\"#class-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Class Documentation<a class=\"headerlink\" href=\"#class-documentation\" title=\"Permalink to this heading\">\u00b6</a></h2>", "a[href=\"#_CPPv4NK8amdinfer15InferenceTensor13serializeSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer15InferenceTensor13serializeSizeEv\">\n<span id=\"_CPPv3NK8amdinfer15InferenceTensor13serializeSizeEv\"></span><span id=\"_CPPv2NK8amdinfer15InferenceTensor13serializeSizeEv\"></span><span id=\"amdinfer::InferenceTensor::serializeSizeC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a456ff736e9ebbdbba91acf070bad425e\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serializeSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Returns the size of the serialized data. </p></dd>", "a[href=\"#_CPPv4N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor\"></span><span id=\"amdinfer::InferenceTensor::InferenceTensor__TensorCR\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a4f1f387e722526a2e95a22bd7ac4803b\"></span><span class=\"k\"><span class=\"pre\">explicit</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\" title=\"amdinfer::Tensor\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tensor</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a new <a class=\"reference internal\" href=\"#classamdinfer_1_1InferenceTensor\"><span class=\"std std-ref\">InferenceTensor</span></a> object. </p></dd>", "a[href=\"#_CPPv4NO8amdinfer15InferenceTensor13getParametersEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NO8amdinfer15InferenceTensor13getParametersEv\">\n<span id=\"_CPPv3NO8amdinfer15InferenceTensor13getParametersEv\"></span><span id=\"_CPPv2NO8amdinfer15InferenceTensor13getParametersEv\"></span><span id=\"amdinfer::InferenceTensor::getParametersO\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a09b1ee7140ef45ee64c05b54bda6ea05\"></span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getParameters</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;&amp;</span></span><br/></dt><dd></dd>", "a[href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer12ParameterMapE\">\n<span id=\"_CPPv3N8amdinfer12ParameterMapE\"></span><span id=\"_CPPv2N8amdinfer12ParameterMapE\"></span><span id=\"amdinfer::ParameterMap\"></span><span class=\"target\" id=\"classamdinfer_1_1ParameterMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Serializable.html#_CPPv4N8amdinfer12SerializableE\" title=\"amdinfer::Serializable\"><span class=\"n\"><span class=\"pre\">Serializable</span></span></a><br/></dt><dd><p>Holds any parameters from JSON (defined by KServe spec as one of bool, number or string). We further restrict numbers to be doubles or int32. </p></dd>", "a[href=\"#_CPPv4NK8amdinfer15InferenceTensor9serializeEPNSt4byteE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8amdinfer15InferenceTensor9serializeEPNSt4byteE\">\n<span id=\"_CPPv3NK8amdinfer15InferenceTensor9serializeEPNSt4byteE\"></span><span id=\"_CPPv2NK8amdinfer15InferenceTensor9serializeEPNSt4byteE\"></span><span id=\"amdinfer::InferenceTensor::serialize__std::bytePC\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1a05b62600516c02df33c93a5b808d5026\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serialize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">std</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data_out</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Serializes the object to the provided memory address. There should be sufficient space to store the serialized object. </p></dd>", "a[href=\"../cpp_user_api.html#_CPPv48amdinfer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48amdinfer\">\n<span id=\"_CPPv38amdinfer\"></span><span id=\"_CPPv28amdinfer\"></span><span id=\"amdinfer\"></span><span class=\"target\" id=\"namespaceamdinfer\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8amdinfer15InferenceTensor13setParametersE12ParameterMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensor13setParametersE12ParameterMap\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensor13setParametersE12ParameterMap\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensor13setParametersE12ParameterMap\"></span><span id=\"amdinfer::InferenceTensor::setParameters__ParameterMap\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor_1abb0717c8fee402cfebd666b80a17d2f4\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">setParameters</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"classamdinfer_1_1ParameterMap.html#_CPPv4N8amdinfer12ParameterMapE\" title=\"amdinfer::ParameterMap\"><span class=\"n\"><span class=\"pre\">ParameterMap</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">parameters</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the tensor\u2019s parameters. </p></dd>", "a[href=\"#_CPPv4N8amdinfer15InferenceTensorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8amdinfer15InferenceTensorE\">\n<span id=\"_CPPv3N8amdinfer15InferenceTensorE\"></span><span id=\"_CPPv2N8amdinfer15InferenceTensorE\"></span><span id=\"amdinfer::InferenceTensor\"></span><span class=\"target\" id=\"classamdinfer_1_1InferenceTensor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InferenceTensor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../cpp_user_api.html#_CPPv48amdinfer\" title=\"amdinfer\"><span class=\"n\"><span class=\"pre\">amdinfer</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"classamdinfer_1_1Tensor.html#_CPPv4N8amdinfer6TensorE\" title=\"amdinfer::Tensor\"><span class=\"n\"><span class=\"pre\">Tensor</span></span></a><br/></dt><dd><p>Subclassed by <a class=\"reference internal\" href=\"../cpp_user_api.html#classamdinfer_1_1InferenceRequestInput\"><span class=\"std std-ref\">amdinfer::InferenceRequestInput</span></a>, <a class=\"reference internal\" href=\"classamdinfer_1_1InferenceResponseOutput.html#classamdinfer_1_1InferenceResponseOutput\"><span class=\"std std-ref\">amdinfer::InferenceResponseOutput</span></a></p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
