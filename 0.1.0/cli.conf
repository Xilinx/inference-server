<p>The <code>proteus</code> script provides an easy way to launch containers and build the Server. The documentation for the options available in this Python script can be seen here or on the terminal using the <code>--help</code> flag.</p>
<p><p>Proteus helper script</p>
</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[usage: proteus [--dry-run] [-h] [-v] command ...]]></ac:plain-text-body>
</ac:structured-macro>
<h2>Commands</h2>
<table>
<tbody>
<tr>
<td style="border: none"><code>command</code></td>
<td style="border: none"><p>Possible choices: attach, benchmark, build, clangformat, clangtidy, clean, dockerize, get, install, list, make, run, start, test, up</p>
</td>
</tr>
</tbody>
</table>
<h2>Options</h2>
<table>
<tbody>
<tr>
<td style="border: none"><code>--dry-run</code></td>
<td style="border: none"><p>print the actual commands that would be run without running them</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-v, --version</code></td>
<td style="border: none"><p>show program’s version number and exit</p>
</td>
</tr>
</tbody>
</table>
<h2>Sub-commands:</h2>
<h3>attach</h3>
<p>Attach to a running Proteus container</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus attach [-n NAME] [-h]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>-n, --name</code></td>
<td style="border: none"><p>name of the container to attach to. Defaults to latest running container</p>
</td>
</tr>
</tbody>
</table>
<h3>benchmark</h3>
<p>Benchmark Proteus</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus benchmark]]></ac:plain-text-body>
</ac:structured-macro>
<h3>build</h3>
<p>Build the proteus project</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus build [--coverage | --debug | --release] [-a] [-d DIR] [-c] [-r] [-t THREADS] [-h]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Named Arguments</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--coverage</code></td>
<td style="border: none"><p>build the coverage configuration</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--debug</code></td>
<td style="border: none"><p>build the debug configuration</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--release</code></td>
<td style="border: none"><p>build the release configuration</p>
</td>
</tr>
</tbody>
</table>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>-a, --all</code></td>
<td style="border: none"><p>Build additional optional targets</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-d, --dir</code></td>
<td style="border: none"><p>root path to place the build tree. Defaults to ./build</p>
<p>Default: “/workspace/proteus/build/Debug/docs/build”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-c, --clean</code></td>
<td style="border: none"><p>clean prior to building</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-r, --regen</code></td>
<td style="border: none"><p>Delete the CMakeCache and regenerate</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-t, --threads</code></td>
<td style="border: none"><p>number of threads for Make (defaults to number of processors)</p>
<p>Default: 12</p>
</td>
</tr>
</tbody>
</table>
<h3>clangformat</h3>
<p>This is a wrapper around clangformat to format a particular file in place based on the existing clangformat rules. Any unmatched arguments are passed to clang-format. Use clang-format –help to see options</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus clangformat [-h] path]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Positional Arguments</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>path</code></td>
<td style="border: none"><p>Path to a C++ file to analyze</p>
</td>
</tr>
</tbody>
</table>
<h3>clangtidy</h3>
<p>Run clang-tidy on all source files</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus clangtidy [-d DIR] [-h]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>-d, --dir</code></td>
<td style="border: none"><p>root path to the build tree. Defaults to ./build</p>
<p>Default: “/workspace/proteus/build/Debug/docs/build”</p>
</td>
</tr>
</tbody>
</table>
<h3>clean</h3>
<p>Delete all generated files, restoring the repo to clean state</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus clean [--artifacts] [-h] [--no-gui]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--artifacts</code></td>
<td style="border: none"><p>Delete downloaded XModel artifacts</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--no-gui</code></td>
<td style="border: none"><p>Don’t clean web GUI/nodeJS related files</p>
<p>Default: True</p>
</td>
</tr>
</tbody>
</table>
<h3>dockerize</h3>
<p>Build a docker image</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus dockerize [--build-meta BUILD_META] [-h] [--nightly] [--production] [--push] [--registry REGISTRY]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--build-meta</code></td>
<td style="border: none"><p>Add a build string to the version.</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--nightly</code></td>
<td style="border: none"><p>Build a nightly tagged image. Defaults to false</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--production</code></td>
<td style="border: none"><p>Build the production image. Defaults to false to build the dev image.</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--push</code></td>
<td style="border: none"><p>Push the image(s) to the registry after building.</p>
<p>Default: False</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--registry</code></td>
<td style="border: none"><p>Docker image registry. Defaults to proteus-user</p>
<p>Default: “proteus-user”</p>
</td>
</tr>
</tbody>
</table>
<h3>get</h3>
<p>Get artifacts such as XModels</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus get [-h] [-q]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>-q, --quiet</code></td>
<td style="border: none"><p>suppress prints</p>
<p>Default: False</p>
</td>
</tr>
</tbody>
</table>
<h3>install</h3>
<p>Install Proteus. Any unknown arguments are passed to the build command. Use – –help to see options.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus install [-d DIR] [--get-manifest] [-h]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>-d, --dir</code></td>
<td style="border: none"><p>root path to the build tree. Defaults to /tmp/proteus/build</p>
<p>Default: “/tmp/proteus/build”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--get-manifest</code></td>
<td style="border: none"><p>Print the list of files last installed.</p>
<p>Default: False</p>
</td>
</tr>
</tbody>
</table>
<h3>list</h3>
<p>List Proteus containers and images on the host.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus list [-h] [images]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Positional Arguments</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>images</code></td>
<td style="border: none"><p>Default: False</p>
</td>
</tr>
</tbody>
</table>
<h3>make</h3>
<p>This is a wrapper around make for the current build configuration.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus make [--dir DIR] [-h] [-j [JOBS]]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--dir</code></td>
<td style="border: none"><p>root path to the build tree. Defaults to ./build</p>
<p>Default: “/workspace/proteus/build/Debug/docs/build”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-j</code></td>
<td style="border: none"><p>Allow N jobs at once; infinite jobs with no arg. Defaults to number of cores.</p>
<p>Default: 12</p>
</td>
</tr>
</tbody>
</table>
<h3>run</h3>
<p>This is a wrapper around ‘docker run’ with preset options. Any unparsed arguments are directly passed to ‘docker run’. Use ‘docker run –help’ to see the options.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus run [--dev | --autotest-dev] [--command COMMAND] [--devices] [-h] [--image IMAGE] [--interactive] [--net-host] [--rm] [--user-config] [--working-dir] [--xclbins]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Presets</h4>
<p>Presets define a set of options together for convenience. If additional options are provided, they override those set in the preset.</p>
<table>
<tbody>
<tr>
<td style="border: none"><code>--dev</code></td>
<td style="border: none"><p>Starts the dev container in interactive mode with the working directory mounted.</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--autotest-dev</code></td>
<td style="border: none"><p>Starts the dev container with the working directory mounted and runs Proteus’s coverage test.</p>
</td>
</tr>
</tbody>
</table>
<h4>Options</h4>
<p>These options may default to a value if a preset is selected.</p>
<table>
<tbody>
<tr>
<td style="border: none"><code>--command</code></td>
<td style="border: none"><p>Override the default CMD of the image. Defaults to None.</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--devices, --no-devices</code></td>
<td style="border: none"><p>Pass devices from host to container, if they exist</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--image</code></td>
<td style="border: none"><p>Image to run. Defaults to a value if a preset is used.</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--interactive, --no-interactive</code></td>
<td style="border: none"><p>Keep STDIN open even if not attached and allocate a pseudo-TTY</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--net-host, --no-net-host</code></td>
<td style="border: none"><p>Use host networking mode</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--rm, --no-rm</code></td>
<td style="border: none"><p>Remove container after exiting</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--user-config, --no-user-config</code></td>
<td style="border: none"><p>Pass the user’s git config and SSH keys to the container, if they exist</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--working-dir, --no-working-dir</code></td>
<td style="border: none"><p>Mount the current working directory from host to /workspace/proteus on the container</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--xclbins, --no-xclbins</code></td>
<td style="border: none"><p>Pass /opt/xilinx/overlaybins from host to container, if it exists</p>
</td>
</tr>
</tbody>
</table>
<h3>start</h3>
<p>Start proteus-server with the current build configuration. Unknown arguments are passed to proteus-server.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus start [--dir DIR] [-h] [--gdb]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--dir</code></td>
<td style="border: none"><p>root path to the build tree. Defaults to ./build</p>
<p>Default: “/workspace/proteus/build/Debug/docs/build”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--gdb</code></td>
<td style="border: none"><p>Run server with GDB.</p>
<p>Default: False</p>
</td>
</tr>
</tbody>
</table>
<h3>test</h3>
<p>Run Proteus’s test suite. All arguments are passed to the test script.</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus test]]></ac:plain-text-body>
</ac:structured-macro>
<h3>up</h3>
<p>Start docker-compose services</p>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">false</ac:parameter>
<ac:plain-text-body><![CDATA[proteus up [--devices] [-h] [-p PROFILE] [--registry REGISTRY] [-v VERSION] [--write-only]]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Options</h4>
<table>
<tbody>
<tr>
<td style="border: none"><code>--devices, --no-devices</code></td>
<td style="border: none"><p>Pass devices from host to container, if they exist. Defaults to true</p>
<p>Default: True</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-p, --profile</code></td>
<td style="border: none"><p>profile to run (dev|prod|test|autotest-dev|autotest). Defaults to autotest-dev</p>
<p>Default: “autotest-dev”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--registry</code></td>
<td style="border: none"><p>Registry to use for the Docker images. Defaults to proteus-user</p>
<p>Default: “proteus-user”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>-v, --version</code></td>
<td style="border: none"><p>Version of the Docker images to run. Defaults to latest</p>
<p>Default: “latest”</p>
</td>
</tr>
<tr>
<td style="border: none"><code>--write-only</code></td>
<td style="border: none"><p>Only generate docker-compose.yml without running it</p>
<p>Default: False</p>
</td>
</tr>
</tbody>
</table>
