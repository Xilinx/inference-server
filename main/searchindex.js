Search.setIndex({"docnames": ["aks", "architecture", "benchmarking", "changelog", "cli", "contributing", "cpp_api/class_view_hierarchy", "cpp_api/classamdinfer_1_1Batch", "cpp_api/classamdinfer_1_1Batcher", "cpp_api/classamdinfer_1_1Buffer", "cpp_api/classamdinfer_1_1CallData", "cpp_api/classamdinfer_1_1CallDataBase", "cpp_api/classamdinfer_1_1CallDataHasHardware", "cpp_api/classamdinfer_1_1CallDataModelInfer", "cpp_api/classamdinfer_1_1CallDataModelList", "cpp_api/classamdinfer_1_1CallDataModelLoad", "cpp_api/classamdinfer_1_1CallDataModelMetadata", "cpp_api/classamdinfer_1_1CallDataModelReady", "cpp_api/classamdinfer_1_1CallDataModelUnload", "cpp_api/classamdinfer_1_1CallDataServerLive", "cpp_api/classamdinfer_1_1CallDataServerMetadata", "cpp_api/classamdinfer_1_1CallDataServerReady", "cpp_api/classamdinfer_1_1CallDataServerStream", "cpp_api/classamdinfer_1_1CallDataUnary", "cpp_api/classamdinfer_1_1CallDataWorkerLoad", "cpp_api/classamdinfer_1_1CallDataWorkerUnload", "cpp_api/classamdinfer_1_1Client", "cpp_api/classamdinfer_1_1CppNativeApi", "cpp_api/classamdinfer_1_1CpuAllocator", "cpp_api/classamdinfer_1_1CpuBuffer", "cpp_api/classamdinfer_1_1DataType", "cpp_api/classamdinfer_1_1DrogonHttp", "cpp_api/classamdinfer_1_1Endpoints", "cpp_api/classamdinfer_1_1GrpcApiUnary", "cpp_api/classamdinfer_1_1GrpcClient", "cpp_api/classamdinfer_1_1GrpcClient_1_1GrpcClientImpl", "cpp_api/classamdinfer_1_1GrpcServer", "cpp_api/classamdinfer_1_1HardBatcher", "cpp_api/classamdinfer_1_1HttpClient", "cpp_api/classamdinfer_1_1HttpClient_1_1HttpClientImpl", "cpp_api/classamdinfer_1_1InferenceRequest", "cpp_api/classamdinfer_1_1InferenceRequestBuilder", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01CallDataModelInfer_01_5_01_4", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01InferenceRequest_01_4", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4", "cpp_api/classamdinfer_1_1InferenceRequestInput", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01InferenceRequestInput_01_4", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01inference_1_1ModelInferRequest__InferInputTensor_01_4", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4", "cpp_api/classamdinfer_1_1InferenceRequestOutput", "cpp_api/classamdinfer_1_1InferenceRequestOutputBuilder", "cpp_api/classamdinfer_1_1InferenceRequestOutputBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4", "cpp_api/classamdinfer_1_1InferenceResponse", "cpp_api/classamdinfer_1_1InferenceResponseOutput", "cpp_api/classamdinfer_1_1InferenceTensor", "cpp_api/classamdinfer_1_1Interface", "cpp_api/classamdinfer_1_1Logger", "cpp_api/classamdinfer_1_1Manager", "cpp_api/classamdinfer_1_1Manager_1_1Endpoints", "cpp_api/classamdinfer_1_1MemoryAllocator", "cpp_api/classamdinfer_1_1MemoryPool", "cpp_api/classamdinfer_1_1ModelMetadata", "cpp_api/classamdinfer_1_1ModelMetadataTensor", "cpp_api/classamdinfer_1_1ModelRepository", "cpp_api/classamdinfer_1_1ModelRepository_1_1ModelRepositoryImpl", "cpp_api/classamdinfer_1_1NativeClient", "cpp_api/classamdinfer_1_1ParameterMap", "cpp_api/classamdinfer_1_1RequestParameters", "cpp_api/classamdinfer_1_1Serializable", "cpp_api/classamdinfer_1_1Server", "cpp_api/classamdinfer_1_1SharedState", "cpp_api/classamdinfer_1_1SoftBatcher", "cpp_api/classamdinfer_1_1Tensor", "cpp_api/classamdinfer_1_1UpdateListener", "cpp_api/classamdinfer_1_1VartTensorBuffer", "cpp_api/classamdinfer_1_1VectorBuffer", "cpp_api/classamdinfer_1_1WebSocketClient", "cpp_api/classamdinfer_1_1WebSocketClient_1_1WebSocketClientImpl", "cpp_api/classamdinfer_1_1WorkerInfo", "cpp_api/classamdinfer_1_1bad__status", "cpp_api/classamdinfer_1_1connection__error", "cpp_api/classamdinfer_1_1environment__not__set__error", "cpp_api/classamdinfer_1_1external__error", "cpp_api/classamdinfer_1_1file__not__found__error", "cpp_api/classamdinfer_1_1file__read__error", "cpp_api/classamdinfer_1_1http_1_1DrogonWs", "cpp_api/classamdinfer_1_1http_1_1WebsocketServer", "cpp_api/classamdinfer_1_1invalid__argument", "cpp_api/classamdinfer_1_1runtime__error", "cpp_api/classamdinfer_1_1util_1_1ThreadPool", "cpp_api/classamdinfer_1_1util_1_1Timer", "cpp_api/classamdinfer_1_1workers_1_1Aks", "cpp_api/classamdinfer_1_1workers_1_1AksDetect", "cpp_api/classamdinfer_1_1workers_1_1AksDetectStream", "cpp_api/classamdinfer_1_1workers_1_1CPlusPlus", "cpp_api/classamdinfer_1_1workers_1_1Echo", "cpp_api/classamdinfer_1_1workers_1_1EchoMulti", "cpp_api/classamdinfer_1_1workers_1_1InvertImage", "cpp_api/classamdinfer_1_1workers_1_1InvertVideo", "cpp_api/classamdinfer_1_1workers_1_1MIGraphXWorker", "cpp_api/classamdinfer_1_1workers_1_1PtZendnn", "cpp_api/classamdinfer_1_1workers_1_1ResNet50", "cpp_api/classamdinfer_1_1workers_1_1ResNet50Stream", "cpp_api/classamdinfer_1_1workers_1_1TfZendnn", "cpp_api/classamdinfer_1_1workers_1_1Worker", "cpp_api/classamdinfer_1_1workers_1_1XModel", "cpp_api/classgoogle_1_1protobuf_1_1Map", "cpp_api/cpp_root", "cpp_api/define_base64_8cpp_1ac3146f1e9227301bb4aa518f4d336cee", "cpp_api/define_build__options_8hpp_1a09f1b0969760f1246ed1119f0dd21b07", "cpp_api/define_build__options_8hpp_1a1484c3c44013e93fc359073380f8e553", "cpp_api/define_build__options_8hpp_1a1cb70e7b50dde20c79c992b551337b16", "cpp_api/define_build__options_8hpp_1a1d18cfe00c47ea32eee897db8c259810", "cpp_api/define_build__options_8hpp_1a38bb3a11b32b47c7085751e7ad658fc1", "cpp_api/define_build__options_8hpp_1a5f100257574974f2ab3c02fdee919c1b", "cpp_api/define_build__options_8hpp_1a91fd304b96357ddd7156566a8bcf0121", "cpp_api/define_build__options_8hpp_1ab49ae259d264ae7e7d23bc0b77d39b22", "cpp_api/define_build__options_8hpp_1ac3e7216973ef4daa1c5b39274aa06451", "cpp_api/define_build__options_8hpp_1ace1a0cbb9332b2372676164bbb1dcf44", "cpp_api/define_build__options_8hpp_1adef0f0719db03d778f708c7a408e5122", "cpp_api/define_build__options_8hpp_1ae2d322a6adf460982c1581a05df756f5", "cpp_api/define_grpc__server_8cpp_1a5d3e066a99cdd4f1f413e6e44dc0dcd3", "cpp_api/define_grpc__server_8cpp_1aa8804898829de032ded6a07028b0af36", "cpp_api/define_logging_8hpp_1a4efec5253d1317f18d57455a7f0f4c9d", "cpp_api/define_logging_8hpp_1a5465abe98bc6673e563a64fb17acd8de", "cpp_api/define_logging_8hpp_1a93baa2614a5bf97d13ae1ce3d9b90c87", "cpp_api/define_logging_8hpp_1aa0607a02582d3aef0021738df1b73c93", "cpp_api/define_logging_8hpp_1ab634321b716a4c9ef274de1d61af0631", "cpp_api/define_logging_8hpp_1ae84d7184cf490593444dac190212096d", "cpp_api/define_parameters_8hpp_1a64574f13f79faf4cd17924e2b0687116", "cpp_api/dir__workspace_amdinfer_include", "cpp_api/dir__workspace_amdinfer_include_amdinfer", "cpp_api/dir__workspace_amdinfer_include_amdinfer_clients", "cpp_api/dir__workspace_amdinfer_include_amdinfer_core", "cpp_api/dir__workspace_amdinfer_include_amdinfer_servers", "cpp_api/dir__workspace_amdinfer_src", "cpp_api/dir__workspace_amdinfer_src_amdinfer", "cpp_api/dir__workspace_amdinfer_src_amdinfer_batching", "cpp_api/dir__workspace_amdinfer_src_amdinfer_buffers", "cpp_api/dir__workspace_amdinfer_src_amdinfer_clients", "cpp_api/dir__workspace_amdinfer_src_amdinfer_core", "cpp_api/dir__workspace_amdinfer_src_amdinfer_core_memory_pool", "cpp_api/dir__workspace_amdinfer_src_amdinfer_models", "cpp_api/dir__workspace_amdinfer_src_amdinfer_observation", "cpp_api/dir__workspace_amdinfer_src_amdinfer_pre_post", "cpp_api/dir__workspace_amdinfer_src_amdinfer_servers", "cpp_api/dir__workspace_amdinfer_src_amdinfer_util", "cpp_api/dir__workspace_amdinfer_src_amdinfer_workers", "cpp_api/enum_batcher_8hpp_1a5277d7d1a11facb999262c1ffa1cf5a8", "cpp_api/enum_endpoints_8hpp_1ad90f89e55716c00f4cc911e76a9a3fe3", "cpp_api/enum_image__preprocess_8hpp_1a004b461de156262bc78b132c472c322a", "cpp_api/enum_image__preprocess_8hpp_1adfe0be75a84efed14a2b0142cda01473", "cpp_api/enum_interface_8hpp_1a2f1c337cd175cabc3a786e0f5712e123", "cpp_api/enum_logging_8hpp_1a5f2178ac8de54222377d5c4a64f986ad", "cpp_api/enum_logging_8hpp_1a7546a5fe8db550cd7a7f925cca061e27", "cpp_api/enum_manager_8hpp_1ad90f89e55716c00f4cc911e76a9a3fe3", "cpp_api/enum_memory__allocator_8hpp_1a7c5b9c96a6c33be879d5f8b8eb3cd8d9", "cpp_api/enum_status_8hpp_1a913436294d314192e3d1ef856c142de3", "cpp_api/enum_worker_8hpp_1acca0b4f2273421d4b08225b868692370", "cpp_api/file__workspace_amdinfer_include_amdinfer_amdinfer.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_build_options.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_client.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_grpc.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_http.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_native.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_websocket.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_data_types.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_exceptions.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_request.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_response.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_tensor.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_mixins.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_model_metadata.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_parameters.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_predict_api.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_server_metadata.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_tensor.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_declarations.hpp", "cpp_api/file__workspace_amdinfer_include_amdinfer_servers_server.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batch.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batch.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batcher.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batcher.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_hard.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_hard.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_soft.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_soft.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_buffer.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_buffer.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_cpu.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_cpu.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_client.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http_internal.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native_internal.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_websocket.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_api.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_api.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types_internal.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_endpoints.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_endpoints.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_request.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_response.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_tensor.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_interface.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_interface.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_manager.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_manager.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_memory_allocator.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_metadata.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_repository.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_repository.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_parameters.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_predict_api.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_predict_api_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_request_container.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_shared_state.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_shared_state.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_tensor.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_worker_info.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_worker_info.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_main.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_models_echo.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_models_echo_multi.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_logging.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_logging.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_metrics.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_metrics.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_observer.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_status.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_tracing.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_tracing.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_center_crop.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_get_top_k.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_image_preprocess.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_resnet50_postprocess.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_softmax.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_grpc_server.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_grpc_server.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_http_server.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_http_server.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_server.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_server_internal.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_websocket_server.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_websocket_server.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_base64.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_base64.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_compression.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_compression.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_containers.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_ctpl.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_ctpl.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_exec.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_exec.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_memory.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_parse_env.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_parse_env.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_queue.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_read_nth_line.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_read_nth_line.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_string.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_thread.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_timer.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_timer.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_traits.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_version.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect_stream.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_c_plus_plus.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_echo.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_echo_multi.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_invert_image.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_invert_video.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_migraphx.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_pt_zendnn.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_resnet50.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_resnet50_stream.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_tf_zendnn.cpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_worker.hpp", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_xmodel.cpp", "cpp_api/file_view_hierarchy", "cpp_api/function_aks_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_aks__detect_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_aks__detect__stream_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_aks__detect__stream_8cpp_1ab13e3cee19b709c1dc339ff1ecae8d66", "cpp_api/function_api_8cpp_1a2f1ebf8b459a22a7de3ce2906aac4f33", "cpp_api/function_api_8cpp_1a39eb9fa1198e60153ddaf2136833e96c", "cpp_api/function_api_8cpp_1a451d6aeeb8de699b4cfc8f632f8e78b6", "cpp_api/function_api_8cpp_1a59d78af1e09556ee7389be7bc48098db", "cpp_api/function_api_8cpp_1a61f95cf4710f15355fc00da05c888668", "cpp_api/function_api_8cpp_1a769502f968540b2f68287c808a9156e2", "cpp_api/function_api_8cpp_1aab5a33ec7de1e03183aa4075ca858cc3", "cpp_api/function_api_8cpp_1abb0bfc39e167c58a8f83a57e8e3717ec", "cpp_api/function_api_8cpp_1ad1da7e319e89046cb1f6d20fea46ef7d", "cpp_api/function_api_8cpp_1ad9bd380ef495aeb0b4efac1ecef7aef6", "cpp_api/function_api_8cpp_1ae0dbf04d01555d9b6428c642503e02d9", "cpp_api/function_base64_8cpp_1a0b2049369714bfeecd9db0b350eba210", "cpp_api/function_base64_8cpp_1a3fab927a4086e187790fddf5d7356625", "cpp_api/function_base64_8cpp_1a6c38e256b28c2a5348ef810fe4e96067", "cpp_api/function_base64_8cpp_1a726cc9124c561dfd45dfbeceeb78f3be", "cpp_api/function_base64_8cpp_1ac5e3a230a657bc4195e886fc328f4adf", "cpp_api/function_base64_8cpp_1afad08aa8530e43e678dfab1189b345f4", "cpp_api/function_c__plus__plus_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_c__plus__plus_8cpp_1a9e6917e8d658979c637569428360219e", "cpp_api/function_c__plus__plus_8cpp_1ad50576352aa9fe95a1f335068a150f86", "cpp_api/function_c__plus__plus_8cpp_1ae839d3bb421974c63e142c461e969830", "cpp_api/function_center__crop_8hpp_1a38fcd76500e2a2a6f82b483f40898886", "cpp_api/function_client_8cpp_1a4d4441bcf3855f2e944fa25af8295257", "cpp_api/function_client_8cpp_1a6354412b0cacb2c302d12c19ff0037f2", "cpp_api/function_client_8cpp_1a7c8a24453d2c9aeaa2457ee1a5b13f93", "cpp_api/function_client_8cpp_1a7db4f7d3cc3c76913a04f054545e45a1", "cpp_api/function_client_8cpp_1ad8b991d3a2a0e2f19e1937cafa34a724", "cpp_api/function_client_8cpp_1ad928316a941cc1f5371da1e90085bfdd", "cpp_api/function_compression_8cpp_1a927c584d5b765b2f1d3ffab394fbfcac", "cpp_api/function_containers_8hpp_1a1d706def706e8040615295c1696f5355", "cpp_api/function_containers_8hpp_1a95954e812c96e615ffc44e525f706868", "cpp_api/function_containers_8hpp_1a99c908436f0a0b8939e1e31b73d1e8a2", "cpp_api/function_containers_8hpp_1ab77948aa3101edea0ef3a53b3a9bba4f", "cpp_api/function_data__types_8cpp_1a704e42ab497bfe5b6f257eb423d6df49", "cpp_api/function_data__types_8hpp_1a4b401163a3bc8d860d096ab1b00a87eb", "cpp_api/function_data__types_8hpp_1a9f421600e40d463aae440ef86d990f77", "cpp_api/function_echo_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_echo__multi_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_exec_8cpp_1ad2f76a0098c3445320c56f8208b66a8f", "cpp_api/function_get__top__k_8hpp_1ae80f6fce372daf2a6692cedafc970557", "cpp_api/function_grpc_8cpp_1a575422378564fcee9c41fc4ecf1026d4", "cpp_api/function_grpc_8cpp_1abca66df04c11d0bd7baee5bafb8d27ec", "cpp_api/function_grpc__internal_8cpp_1a47a63870c628bbcc0f88a7da1e3c3580", "cpp_api/function_grpc__internal_8cpp_1a54829da37e86837ed95fd9b4775135bf", "cpp_api/function_grpc__internal_8cpp_1a757a8b0dc668948c0d7536e955a2fcd6", "cpp_api/function_grpc__internal_8cpp_1a770ea8ac5d3401297d49e81b28b78c3e", "cpp_api/function_grpc__internal_8cpp_1a810895b7fc432ac1fdda46f6b426644a", "cpp_api/function_grpc__internal_8cpp_1a9529bfb0905d019214381197735cb2bf", "cpp_api/function_grpc__internal_8cpp_1a9571eec4e243504a9649a5d1817db835", "cpp_api/function_grpc__internal_8cpp_1a95af9e6fefbe2dd323562124a33284a9", "cpp_api/function_grpc__internal_8cpp_1a976514706c6b64c1fdd73fc85fa7a917", "cpp_api/function_grpc__internal_8cpp_1ae0fbf34987a03cce20609d5767c07eba", "cpp_api/function_grpc__internal_8cpp_1ae460b92cd5f64db78436cebbe777f27b", "cpp_api/function_grpc__internal_8cpp_1ae7334f09228bbcce89265176a7067843", "cpp_api/function_grpc__internal_8cpp_1aedf702344a580ab5481f76a200fe60e5", "cpp_api/function_grpc__internal_8hpp_1a060fbd208a90079d68fd5a5bb0d21ac6", "cpp_api/function_grpc__internal_8hpp_1a6fd8519162462f9576d293681ebc625d", "cpp_api/function_grpc__server_8cpp_1a15ea0fa3e0ee2783642361b4e46de4b1", "cpp_api/function_grpc__server_8cpp_1a17fb6a89fb9a16380c4f07f999c78fb6", "cpp_api/function_grpc__server_8cpp_1aa8dbb41520acad4bc0f3590a62f516dd", "cpp_api/function_grpc__server_8cpp_1ac8a8307a4bb6284d0c08ecf50abe9013", "cpp_api/function_grpc__server_8cpp_1acd5880aba6baa79251eba9aa507f2dd4", "cpp_api/function_grpc__server_8cpp_1ad7d47b9afef4ed43ad59aa45f592737e", "cpp_api/function_grpc__server_8cpp_1af023a215479a2732eb486a97860222cb", "cpp_api/function_grpc__server_8cpp_1af2f2b9dcdbdb51142654acff7134fe47", "cpp_api/function_http_8cpp_1a32e9fc9ef05556e7d000554f8752678b", "cpp_api/function_http_8cpp_1a7d42e4a864836a32004fefea13cbd07f", "cpp_api/function_http_8cpp_1a91a52b2ef7f7d2a26cbad3cc60dab78d", "cpp_api/function_http_8cpp_1aa8d7b351b03d53ab0f5801ffd061f79d", "cpp_api/function_http_8cpp_1abb11c7992ffb6339af08d1ff6e0353ba", "cpp_api/function_http__internal_8cpp_1a20f514dbb8f33ccf800d6fe95d9dc475", "cpp_api/function_http__internal_8cpp_1a263e4c7efb3c93d6fc48499bc4a46548", "cpp_api/function_http__internal_8cpp_1a35f336b6080d807deb64cb9d082d19b5", "cpp_api/function_http__internal_8cpp_1a427f4954da74353ed225bf6ca403908b", "cpp_api/function_http__internal_8cpp_1a58c5a95db890610b34f3464e91ba15c3", "cpp_api/function_http__internal_8cpp_1a90265777686e06d56b25b0bc843eef9e", "cpp_api/function_http__internal_8cpp_1a96f12abbea879eab96fc3a7677c27c4d", "cpp_api/function_http__internal_8cpp_1a9daff85fd67e50b69f84f3802297ff7d", "cpp_api/function_http__internal_8cpp_1ab552d950b2047e8257bf47b64521a3d1", "cpp_api/function_http__internal_8cpp_1ac5e6afcc5f724e1759b2bfe6db7e7ec0", "cpp_api/function_http__internal_8cpp_1acbfb678bfa4431649f17750ea346f33c", "cpp_api/function_http__internal_8cpp_1acc26de4cacac0bd1e7b5dc5b1b802c3a", "cpp_api/function_http__internal_8cpp_1ae9a219aa864779f813bc00edc3a861c0", "cpp_api/function_http__internal_8cpp_1af7e38eb03ed3321e8e914b4d6e855537", "cpp_api/function_http__internal_8cpp_1afa990983f0c809168a33aae411a99f8b", "cpp_api/function_http__internal_8hpp_1afa990983f0c809168a33aae411a99f8b", "cpp_api/function_http__server_8cpp_1a024aac815aaac4c7a062bd1afa1d5efc", "cpp_api/function_http__server_8cpp_1a51d427f7d55612404bc5ed3f0441efb7", "cpp_api/function_http__server_8cpp_1a90265777686e06d56b25b0bc843eef9e", "cpp_api/function_http__server_8cpp_1a9daff85fd67e50b69f84f3802297ff7d", "cpp_api/function_http__server_8cpp_1ac92ce920719257b547b656e4a2cc57ac", "cpp_api/function_http__server_8cpp_1acbfb678bfa4431649f17750ea346f33c", "cpp_api/function_image__preprocess_8hpp_1a6f99956e2db2c6e15a806fc1a0c02c1f", "cpp_api/function_image__preprocess_8hpp_1a85688ea858ae957a61a92a169608ff0c", "cpp_api/function_image__preprocess_8hpp_1afc409bcd827fd1219cc6844e0e07ed62", "cpp_api/function_inference__request_8cpp_1ac5a218218c06390bff837a4d000785c0", "cpp_api/function_inference__response_8cpp_1a290fdc985518c3879979b4c24a4622dc", "cpp_api/function_inference__response_8cpp_1a91b7e6ea3d7b34694d38e2d596167625", "cpp_api/function_invert__image_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_invert__video_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_invert__video_8cpp_1a9e00ba7bdc00389694a9fedb89adfe0a", "cpp_api/function_logging_8cpp_1a1171fedba9c753ea529e1fc6c164e4f2", "cpp_api/function_logging_8cpp_1ab42e9688a184d4c25b0809fd75c21465", "cpp_api/function_logging_8cpp_1abf296c165ec250f986192b7ec61a0eeb", "cpp_api/function_main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97", "cpp_api/function_main_8cpp_1a7a9794689e7aab6ea77930fe77d7475f", "cpp_api/function_main_8cpp_1ac6ad5461171288abe55dfb76ea2b9118", "cpp_api/function_memory_8hpp_1a297476d933ddb20b1462132df4bf2b7c", "cpp_api/function_memory_8hpp_1a884a4d99e70f8bcffb6037ef76a92535", "cpp_api/function_migraphx_8cpp_1a3a3c5cda084c4108cacf3af5db7d7899", "cpp_api/function_migraphx_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_model__repository_8cpp_1a05cd20aa1908b4475961f21cbdaf1e76", "cpp_api/function_model__repository_8cpp_1a8a80f1f2c5954b017a5bd047957a638f", "cpp_api/function_model__repository_8cpp_1a9635913e10f284c7c36fa430aab3e865", "cpp_api/function_model__repository_8hpp_1a94c9f9dd875588ecd02da3459c46da36", "cpp_api/function_models_2echo_8cpp_1a88e88f0ce7df9ffadac20aec94d1db2c", "cpp_api/function_models_2echo_8cpp_1ad728fc7115f1ac5380a1f5b4cae39526", "cpp_api/function_models_2echo_8cpp_1af012751791b00fabf8dae7f38f076e18", "cpp_api/function_models_2echo__multi_8cpp_1a88e88f0ce7df9ffadac20aec94d1db2c", "cpp_api/function_models_2echo__multi_8cpp_1ad728fc7115f1ac5380a1f5b4cae39526", "cpp_api/function_models_2echo__multi_8cpp_1af012751791b00fabf8dae7f38f076e18", "cpp_api/function_native_8cpp_1a3b9123d1a7ba3f8791dd743f14e97bb8", "cpp_api/function_native_8cpp_1a909af7a914df81895bf0a4dda591f13d", "cpp_api/function_observer_8hpp_1adff966f58637552655053b2a0ad05c96", "cpp_api/function_parameters_8cpp_1a43d2d4f52769bcfbcab2d793d13256a3", "cpp_api/function_parse__env_8cpp_1a4251368d5d2f3507fb4ac4296f71c1d3", "cpp_api/function_predict__api_8cpp_1a43d2d4f52769bcfbcab2d793d13256a3", "cpp_api/function_predict__api_8cpp_1a7bdb82fd7255f2139a893458dbb1aadf", "cpp_api/function_pt__zendnn_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_read__nth__line_8cpp_1ab24290f139bfd0ba4a626bdd7d5412d4", "cpp_api/function_resnet50_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_resnet50__postprocess_8hpp_1a50359236db961994e219d8eff7ae2aec", "cpp_api/function_resnet50__stream_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_server_8cpp_1a73eba955b7057fe278a31fb16c5cae39", "cpp_api/function_server_8cpp_1aaee4d554c86a0f534bbe3ffae4a86382", "cpp_api/function_server_8cpp_1acea43796a83b9ee6de28c969539154a4", "cpp_api/function_softmax_8hpp_1acab8d186d21c38a86ed76bb9246a58da", "cpp_api/function_string_8hpp_1a23ca4a0fca976cf704e73ba9c454edf9", "cpp_api/function_string_8hpp_1a4414f2322f12277f964e4a7cc3ae6733", "cpp_api/function_string_8hpp_1a66dcea22803a394e9d697db2110f57b1", "cpp_api/function_string_8hpp_1a7e3149ce8983fc7bc253dd283c5d1327", "cpp_api/function_string_8hpp_1ab7c84c671182f8c47329d59fbc06fc66", "cpp_api/function_string_8hpp_1ae4e85f841d4470eb0040ff4bef5adb52", "cpp_api/function_string_8hpp_1af7be5da4787523697f32822ac12bfaef", "cpp_api/function_tf__zendnn_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_tf__zendnn_8cpp_1adf504d05611a1a3b28113b6eb6e2eb59", "cpp_api/function_thread_8hpp_1a1f755ec0f69754bbf457b2c7f68a16c7", "cpp_api/function_thread_8hpp_1a9f542ca1a9ee9128a5871d146acf8b1b", "cpp_api/function_timer_8cpp_1a8a0c21722d4843898884016ab59ba783", "cpp_api/function_websocket__server_8cpp_1a59635d29a247f707bb9a44d0fb6aea2d", "cpp_api/function_worker__info_8cpp_1a0b90dba241fba26f6e1bc8bea0e55a9e", "cpp_api/function_worker__info_8cpp_1a19798ed33ad0cecb53ca678f47d8fb95", "cpp_api/function_workers_2echo_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_workers_2echo__multi_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/function_xmodel_8cpp_1a601552e385edb19c4596c0c81cabb7fe", "cpp_api/namespace_@100", "cpp_api/namespace_@85", "cpp_api/namespace_@88", "cpp_api/namespace_AKS", "cpp_api/namespace_Json", "cpp_api/namespace_amdinfer", "cpp_api/namespace_amdinfer__detail", "cpp_api/namespace_amdinfer__grpc", "cpp_api/namespace_amdinfer__http", "cpp_api/namespace_amdinfer__pre_post", "cpp_api/namespace_amdinfer__pre_post__detail", "cpp_api/namespace_amdinfer__util", "cpp_api/namespace_amdinfer__workers", "cpp_api/namespace_google", "cpp_api/namespace_google__protobuf", "cpp_api/namespace_grpc", "cpp_api/namespace_inference", "cpp_api/namespace_std", "cpp_api/namespace_vart", "cpp_api/page_view_hierarchy", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_amdinfer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_build_options.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_client.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_grpc.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_http.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_native.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_websocket.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_data_types.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_exceptions.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_request.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_response.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_tensor.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_mixins.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_model_metadata.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_parameters.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_predict_api.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_server_metadata.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_tensor.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_declarations.hpp", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_servers_server.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batch.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batch.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batcher.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batcher.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_hard.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_hard.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_soft.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_soft.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_buffer.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_buffer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_cpu.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_cpu.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_client.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http_internal.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native_internal.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_websocket.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_api.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_api.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types_internal.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_endpoints.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_endpoints.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_request.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_response.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_tensor.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_interface.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_interface.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_manager.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_manager.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_memory_allocator.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_metadata.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_repository.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_repository.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_parameters.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_predict_api.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_predict_api_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_request_container.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_shared_state.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_shared_state.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_tensor.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_worker_info.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_worker_info.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_main.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_models_echo.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_models_echo_multi.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_logging.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_logging.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_metrics.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_metrics.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_observer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_status.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_tracing.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_tracing.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_center_crop.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_get_top_k.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_image_preprocess.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_resnet50_postprocess.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_softmax.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_grpc_server.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_grpc_server.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_http_server.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_http_server.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_server.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_server_internal.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_websocket_server.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_websocket_server.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_base64.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_base64.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_compression.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_compression.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_containers.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_ctpl.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_ctpl.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_exec.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_exec.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_memory.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_parse_env.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_parse_env.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_queue.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_read_nth_line.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_read_nth_line.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_string.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_thread.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_timer.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_timer.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_traits.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_version.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect_stream.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_c_plus_plus.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_echo.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_echo_multi.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_invert_image.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_invert_video.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_migraphx.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_pt_zendnn.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_resnet50.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_resnet50_stream.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_tf_zendnn.cpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_worker.hpp", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_xmodel.cpp", "cpp_api/structamdinfer_1_1AddDataToTensor", "cpp_api/structamdinfer_1_1InferenceRequestInputSizes", "cpp_api/structamdinfer_1_1InferenceResponseOutputSizes", "cpp_api/structamdinfer_1_1LogOptions", "cpp_api/structamdinfer_1_1MemoryHeader", "cpp_api/structamdinfer_1_1NativeClient_1_1NativeClientImpl", "cpp_api/structamdinfer_1_1Observer", "cpp_api/structamdinfer_1_1Overloaded", "cpp_api/structamdinfer_1_1RequestContainer", "cpp_api/structamdinfer_1_1ServerMetadata", "cpp_api/structamdinfer_1_1Server_1_1ServerImpl", "cpp_api/structamdinfer_1_1SetInputData", "cpp_api/structamdinfer_1_1SetOutputData", "cpp_api/structamdinfer_1_1TensorSizes", "cpp_api/structamdinfer_1_1UpdateCommand", "cpp_api/structamdinfer_1_1WriteData", "cpp_api/structamdinfer_1_1pre__post_1_1ImagePreprocessOptions", "cpp_api/structamdinfer_1_1util_1_1is__any", "cpp_api/structamdinfer_1_1workers_1_1DetectResponse", "cpp_api/structstd_1_1less_3_01amdinfer_1_1ParameterMap_01_4", "cpp_api/structstd_1_1less_3_01amdinfer_1_1RequestParameters_01_4", "cpp_api/typedef_batch_8hpp_1a85d63a3c6b580841f91e53b2a83e20ae", "cpp_api/typedef_batcher_8hpp_1a85d63a3c6b580841f91e53b2a83e20ae", "cpp_api/typedef_batcher_8hpp_1adde4237ff9c6ea5f847a1d49faadad89", "cpp_api/typedef_data__types_8hpp_1ae6aa5769eb83832379c792c300d4566c", "cpp_api/typedef_declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5", "cpp_api/typedef_declarations_8hpp_1a0b08557614072d06cab7624a903fd723", "cpp_api/typedef_declarations_8hpp_1a12cdaf478119a089d1dbe6deecc13dfe", "cpp_api/typedef_declarations_8hpp_1a252a94fc1c3d1443ba63ec66f9fdbe48", "cpp_api/typedef_declarations_8hpp_1a352d9cb1ac3039b2f272613d5d2e2c09", "cpp_api/typedef_declarations_8hpp_1a364c78e9355139ec245113811681b4a0", "cpp_api/typedef_declarations_8hpp_1a405b5e55988b1398107e8bdff0fefc3d", "cpp_api/typedef_declarations_8hpp_1a40bb0f0fa8a04fc6952014b045c3418d", "cpp_api/typedef_declarations_8hpp_1a416c17e218dbbbba993f2f383a003ecf", "cpp_api/typedef_declarations_8hpp_1a68c2a90f38823c9713e56fd203b2b88d", "cpp_api/typedef_declarations_8hpp_1a69968e7d35b8ae122d52452c7e00ed9d", "cpp_api/typedef_declarations_8hpp_1a6fa0f5650685437baf576ebe74a760c8", "cpp_api/typedef_declarations_8hpp_1aa4fc4532a6cc2a392046e1a720d80ad4", "cpp_api/typedef_declarations_8hpp_1aa722db0b3b3c1bb8e56367ff9b0390ab", "cpp_api/typedef_declarations_8hpp_1ae43152e77216115d2665d62c4c8020ca", "cpp_api/typedef_endpoints_8hpp_1ac2632fc3fff3bb1b92a1a446a586399c", "cpp_api/typedef_grpc__server_8cpp_1a0795844bf8bd399665e38979b3bbe186", "cpp_api/typedef_grpc__server_8cpp_1a2571f3485e82379ee4c555e64c58dc32", "cpp_api/typedef_grpc__server_8cpp_1a3b67a1f4b15f6f8988d8e5172649fb00", "cpp_api/typedef_grpc__server_8cpp_1a522cc0269bb90723a0841f2d0a2be7fb", "cpp_api/typedef_grpc__server_8cpp_1a91acc2ad2e6156eccc10d01384ef8506", "cpp_api/typedef_grpc__server_8cpp_1aa3ba85be01ef9f3abcaf7b476cf8d588", "cpp_api/typedef_grpc__server_8cpp_1aa51ad0e9f1a23127a07cdfc18412904d", "cpp_api/typedef_http__internal_8cpp_1a78092124400e8e02cce73782a3ed0832", "cpp_api/typedef_http__internal_8cpp_1a9a8b533ecefc7f30d6f3377cf897f1c8", "cpp_api/typedef_http__internal_8cpp_1ac0c25a8d874c058c0256360834443885", "cpp_api/typedef_http__internal_8hpp_1a7137f2088c425db6fdd74b1be1fe0663", "cpp_api/typedef_http__server_8cpp_1a7137f2088c425db6fdd74b1be1fe0663", "cpp_api/typedef_manager_8hpp_1ac2632fc3fff3bb1b92a1a446a586399c", "cpp_api/typedef_model__metadata_8hpp_1a3c11f1db8b5cac2c685eea18138065cb", "cpp_api/typedef_parameters_8hpp_1a26002ca91b4305088f6e975fb162cc81", "cpp_api/typedef_parameters_8hpp_1af874429ad00786b2a05f30c311422e4c", "cpp_api/typedef_predict__api_8hpp_1a08788239a50c8739700f08f0a6ede4e5", "cpp_api/typedef_predict__api_8hpp_1a68c2a90f38823c9713e56fd203b2b88d", "cpp_api/typedef_predict__api_8hpp_1aecb5618c912edd1c1537ec7da1befebc", "cpp_api/typedef_predict__api_8hpp_1af874429ad00786b2a05f30c311422e4c", "cpp_api/typedef_queue_8hpp_1a11e139757fcec15a84a47b968f7aa685", "cpp_api/typedef_queue_8hpp_1a3221a88db26ee77b2f820bb75bc2ff24", "cpp_api/typedef_queue_8hpp_1ad6d1b639ebd1fcf68a289f9d3cbd061d", "cpp_api/typedef_queue_8hpp_1afeeb9f145c6244366d3c5fbf59a5f849", "cpp_api/typedef_resnet50__stream_8cpp_1a562f5c0b8f324002221157f834830a22", "cpp_api/typedef_timer_8hpp_1ac892ad2b905321f7e3be6dea415c4794", "cpp_api/unabridged_api", "cpp_api/unabridged_orphan", "cpp_api/variable_aks__detect_8cpp_1a04c17f159348c95b8f43e30dd5870d13", "cpp_api/variable_aks__detect_8cpp_1a0a4e7d7f877317445cdbbbbad363c7f6", "cpp_api/variable_aks__detect_8cpp_1a42d9aa2fce61d9debb309bcea9830853", "cpp_api/variable_aks__detect_8cpp_1aef4b7872e7395e2c7fdf950685bc2c94", "cpp_api/variable_aks__detect_8hpp_1aff4c1089315fd2d1ff79e575fb320332", "cpp_api/variable_build__options_8hpp_1a002b97a750e7bcc073424b03ebb1dcb5", "cpp_api/variable_build__options_8hpp_1a1be3dbd430e5f181a95ba6fbac904899", "cpp_api/variable_build__options_8hpp_1a2cbbae723c01d1e388932882efbf9264", "cpp_api/variable_build__options_8hpp_1a976e70326e2282ae2b88a2117db22687", "cpp_api/variable_build__options_8hpp_1ad2b344ab5401aa8dc82b6421c364fada", "cpp_api/variable_build__options_8hpp_1ae6319372d397b1a8b649e2ebdf45d2bd", "cpp_api/variable_c__plus__plus_8cpp_1a697d63ad64f3f8bfc5a6299ce8bccdc1", "cpp_api/variable_c__plus__plus_8cpp_1a71667fd42c5cef1a3e32e5c03ae40091", "cpp_api/variable_c__plus__plus_8cpp_1a99f0d6272c799cd29afc336c68feb898", "cpp_api/variable_c__plus__plus_8cpp_1af0ec89de1369c878ed2a32a0e0227448", "cpp_api/variable_ctpl_8cpp_1a3d0e67ce722206db215f42681f069659", "cpp_api/variable_echo__multi_8cpp_1a416f1fc1c3bce51d97065301d41db581", "cpp_api/variable_echo__multi_8cpp_1a99f0d6272c799cd29afc336c68feb898", "cpp_api/variable_echo__multi_8cpp_1af0ec89de1369c878ed2a32a0e0227448", "cpp_api/variable_echo__multi_8cpp_1afa0b765105e95ab377c99ba05b254d06", "cpp_api/variable_image__preprocess_8hpp_1a08c9e02a82e9fb21f8aa57bbbd33f77f", "cpp_api/variable_invert__image_8cpp_1a3fe6b60514f224d88012b81a72f206b0", "cpp_api/variable_invert__image_8cpp_1a778cfb0679cd1b44d77c94cc1e64cf74", "cpp_api/variable_invert__image_8cpp_1ab862f12385b964a9f52578ce2b45f91a", "cpp_api/variable_invert__video_8cpp_1ad040ac198e6b944c664091b286f73212", "cpp_api/variable_main_8cpp_1a17ace24a7aa554efe78b7d28fc83e129", "cpp_api/variable_metrics_8cpp_1a214ca5f30222281458498214a0d9300c", "cpp_api/variable_metrics_8cpp_1ab6051d51a6bd12208f6574272fac9117", "cpp_api/variable_metrics_8cpp_1ade316533d688f2811817fa7a1a73f084", "cpp_api/variable_models_2echo__multi_8cpp_1a295e485ab5ea3732dd7360c47e974d44", "cpp_api/variable_models_2echo__multi_8cpp_1a8b03977cd93d9bb002e89d614bbbfdb9", "cpp_api/variable_models_2echo__multi_8cpp_1aef1d8b9952b78ddeb8bb591cbd16eb5d", "cpp_api/variable_models_2echo__multi_8cpp_1afbb86105d54d5a6d56b02d0ffabfebe8", "cpp_api/variable_observer_8hpp_1ad1d17f4a2117c6141e8dfe1727c6cb92", "cpp_api/variable_pool_8cpp_1a5cecd49087cfcb52ba4aa002d391c321", "cpp_api/variable_pt__zendnn_8cpp_1a5544d4acb89db442cba40fdb51c296c3", "cpp_api/variable_pt__zendnn_8cpp_1a6c6cc50416b27fffc4564f6457fef623", "cpp_api/variable_pt__zendnn_8cpp_1a7080de13bbb4da809cfeea4f64cfa3b1", "cpp_api/variable_resnet50__stream_8cpp_1a0a4e7d7f877317445cdbbbbad363c7f6", "cpp_api/variable_resnet50__stream_8cpp_1aa1000a0c48850c27d70bea0534ee229f", "cpp_api/variable_resnet50__stream_8cpp_1ac825e49c82320971e8b0370c6d4c36da", "cpp_api/variable_resnet50__stream_8cpp_1adc9b3a6c8074468b5528a02f79137dab", "cpp_api/variable_resnet50__stream_8cpp_1af570cb232c9a5846340eae70c6c53ec6", "cpp_api/variable_soft_8cpp_1a668387f6df1819f5cb56113bdd3ef62a", "cpp_api/variable_traits_8hpp_1a541edeed71c8938d70cdf47659f9a391", "cpp_api/variable_version_8hpp_1a09dc0ce6af2ec98bf41a1fee3e892918", "cpp_api/variable_version_8hpp_1a0cfff96254bdc960863abdcc6199f7cf", "cpp_api/variable_version_8hpp_1a4707efc5cabb44fbeaf180cc785da651", "cpp_api/variable_version_8hpp_1a7d0f0ec1f70724c293b7d692a857dcf7", "cpp_api/variable_version_8hpp_1ad3c3d0b978d86f9e3cec272acdb15766", "cpp_api/variable_worker_8hpp_1afff06a8b4498d235dc378329775cf03d", "cpp_user_api", "dependencies", "docker", "example_resnet50_cpp", "example_resnet50_python", "glossary", "hello_world_echo", "index", "introduction", "kserve", "links", "logging", "metrics", "migraphx", "performance", "performance_factors", "platforms", "python", "quickstart_deployment", "quickstart_development", "quickstart_inference", "rest", "roadmap", "tracing", "vitis_ai", "zendnn"], "filenames": ["aks.rst", "architecture.rst", "benchmarking.rst", "changelog.rst", "cli.rst", "contributing.rst", "cpp_api/class_view_hierarchy.rst", "cpp_api/classamdinfer_1_1Batch.rst", "cpp_api/classamdinfer_1_1Batcher.rst", "cpp_api/classamdinfer_1_1Buffer.rst", "cpp_api/classamdinfer_1_1CallData.rst", "cpp_api/classamdinfer_1_1CallDataBase.rst", "cpp_api/classamdinfer_1_1CallDataHasHardware.rst", "cpp_api/classamdinfer_1_1CallDataModelInfer.rst", "cpp_api/classamdinfer_1_1CallDataModelList.rst", "cpp_api/classamdinfer_1_1CallDataModelLoad.rst", "cpp_api/classamdinfer_1_1CallDataModelMetadata.rst", "cpp_api/classamdinfer_1_1CallDataModelReady.rst", "cpp_api/classamdinfer_1_1CallDataModelUnload.rst", "cpp_api/classamdinfer_1_1CallDataServerLive.rst", "cpp_api/classamdinfer_1_1CallDataServerMetadata.rst", "cpp_api/classamdinfer_1_1CallDataServerReady.rst", "cpp_api/classamdinfer_1_1CallDataServerStream.rst", "cpp_api/classamdinfer_1_1CallDataUnary.rst", "cpp_api/classamdinfer_1_1CallDataWorkerLoad.rst", "cpp_api/classamdinfer_1_1CallDataWorkerUnload.rst", "cpp_api/classamdinfer_1_1Client.rst", "cpp_api/classamdinfer_1_1CppNativeApi.rst", "cpp_api/classamdinfer_1_1CpuAllocator.rst", "cpp_api/classamdinfer_1_1CpuBuffer.rst", "cpp_api/classamdinfer_1_1DataType.rst", "cpp_api/classamdinfer_1_1DrogonHttp.rst", "cpp_api/classamdinfer_1_1Endpoints.rst", "cpp_api/classamdinfer_1_1GrpcApiUnary.rst", "cpp_api/classamdinfer_1_1GrpcClient.rst", "cpp_api/classamdinfer_1_1GrpcClient_1_1GrpcClientImpl.rst", "cpp_api/classamdinfer_1_1GrpcServer.rst", "cpp_api/classamdinfer_1_1HardBatcher.rst", "cpp_api/classamdinfer_1_1HttpClient.rst", "cpp_api/classamdinfer_1_1HttpClient_1_1HttpClientImpl.rst", "cpp_api/classamdinfer_1_1InferenceRequest.rst", "cpp_api/classamdinfer_1_1InferenceRequestBuilder.rst", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01CallDataModelInfer_01_5_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01InferenceRequest_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestInput.rst", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder.rst", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01InferenceRequestInput_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01inference_1_1ModelInferRequest__InferInputTensor_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestInputBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4.rst", "cpp_api/classamdinfer_1_1InferenceRequestOutput.rst", "cpp_api/classamdinfer_1_1InferenceRequestOutputBuilder.rst", "cpp_api/classamdinfer_1_1InferenceRequestOutputBuilder_3_01std_1_1shared__ptr_3_01Json_1_1Value_01_4_01_4.rst", "cpp_api/classamdinfer_1_1InferenceResponse.rst", "cpp_api/classamdinfer_1_1InferenceResponseOutput.rst", "cpp_api/classamdinfer_1_1InferenceTensor.rst", "cpp_api/classamdinfer_1_1Interface.rst", "cpp_api/classamdinfer_1_1Logger.rst", "cpp_api/classamdinfer_1_1Manager.rst", "cpp_api/classamdinfer_1_1Manager_1_1Endpoints.rst", "cpp_api/classamdinfer_1_1MemoryAllocator.rst", "cpp_api/classamdinfer_1_1MemoryPool.rst", "cpp_api/classamdinfer_1_1ModelMetadata.rst", "cpp_api/classamdinfer_1_1ModelMetadataTensor.rst", "cpp_api/classamdinfer_1_1ModelRepository.rst", "cpp_api/classamdinfer_1_1ModelRepository_1_1ModelRepositoryImpl.rst", "cpp_api/classamdinfer_1_1NativeClient.rst", "cpp_api/classamdinfer_1_1ParameterMap.rst", "cpp_api/classamdinfer_1_1RequestParameters.rst", "cpp_api/classamdinfer_1_1Serializable.rst", "cpp_api/classamdinfer_1_1Server.rst", "cpp_api/classamdinfer_1_1SharedState.rst", "cpp_api/classamdinfer_1_1SoftBatcher.rst", "cpp_api/classamdinfer_1_1Tensor.rst", "cpp_api/classamdinfer_1_1UpdateListener.rst", "cpp_api/classamdinfer_1_1VartTensorBuffer.rst", "cpp_api/classamdinfer_1_1VectorBuffer.rst", "cpp_api/classamdinfer_1_1WebSocketClient.rst", "cpp_api/classamdinfer_1_1WebSocketClient_1_1WebSocketClientImpl.rst", "cpp_api/classamdinfer_1_1WorkerInfo.rst", "cpp_api/classamdinfer_1_1bad__status.rst", "cpp_api/classamdinfer_1_1connection__error.rst", "cpp_api/classamdinfer_1_1environment__not__set__error.rst", "cpp_api/classamdinfer_1_1external__error.rst", "cpp_api/classamdinfer_1_1file__not__found__error.rst", "cpp_api/classamdinfer_1_1file__read__error.rst", "cpp_api/classamdinfer_1_1http_1_1DrogonWs.rst", "cpp_api/classamdinfer_1_1http_1_1WebsocketServer.rst", "cpp_api/classamdinfer_1_1invalid__argument.rst", "cpp_api/classamdinfer_1_1runtime__error.rst", "cpp_api/classamdinfer_1_1util_1_1ThreadPool.rst", "cpp_api/classamdinfer_1_1util_1_1Timer.rst", "cpp_api/classamdinfer_1_1workers_1_1Aks.rst", "cpp_api/classamdinfer_1_1workers_1_1AksDetect.rst", "cpp_api/classamdinfer_1_1workers_1_1AksDetectStream.rst", "cpp_api/classamdinfer_1_1workers_1_1CPlusPlus.rst", "cpp_api/classamdinfer_1_1workers_1_1Echo.rst", "cpp_api/classamdinfer_1_1workers_1_1EchoMulti.rst", "cpp_api/classamdinfer_1_1workers_1_1InvertImage.rst", "cpp_api/classamdinfer_1_1workers_1_1InvertVideo.rst", "cpp_api/classamdinfer_1_1workers_1_1MIGraphXWorker.rst", "cpp_api/classamdinfer_1_1workers_1_1PtZendnn.rst", "cpp_api/classamdinfer_1_1workers_1_1ResNet50.rst", "cpp_api/classamdinfer_1_1workers_1_1ResNet50Stream.rst", "cpp_api/classamdinfer_1_1workers_1_1TfZendnn.rst", "cpp_api/classamdinfer_1_1workers_1_1Worker.rst", "cpp_api/classamdinfer_1_1workers_1_1XModel.rst", "cpp_api/classgoogle_1_1protobuf_1_1Map.rst", "cpp_api/cpp_root.rst", "cpp_api/define_base64_8cpp_1ac3146f1e9227301bb4aa518f4d336cee.rst", "cpp_api/define_build__options_8hpp_1a09f1b0969760f1246ed1119f0dd21b07.rst", "cpp_api/define_build__options_8hpp_1a1484c3c44013e93fc359073380f8e553.rst", "cpp_api/define_build__options_8hpp_1a1cb70e7b50dde20c79c992b551337b16.rst", "cpp_api/define_build__options_8hpp_1a1d18cfe00c47ea32eee897db8c259810.rst", "cpp_api/define_build__options_8hpp_1a38bb3a11b32b47c7085751e7ad658fc1.rst", "cpp_api/define_build__options_8hpp_1a5f100257574974f2ab3c02fdee919c1b.rst", "cpp_api/define_build__options_8hpp_1a91fd304b96357ddd7156566a8bcf0121.rst", "cpp_api/define_build__options_8hpp_1ab49ae259d264ae7e7d23bc0b77d39b22.rst", "cpp_api/define_build__options_8hpp_1ac3e7216973ef4daa1c5b39274aa06451.rst", "cpp_api/define_build__options_8hpp_1ace1a0cbb9332b2372676164bbb1dcf44.rst", "cpp_api/define_build__options_8hpp_1adef0f0719db03d778f708c7a408e5122.rst", "cpp_api/define_build__options_8hpp_1ae2d322a6adf460982c1581a05df756f5.rst", "cpp_api/define_grpc__server_8cpp_1a5d3e066a99cdd4f1f413e6e44dc0dcd3.rst", "cpp_api/define_grpc__server_8cpp_1aa8804898829de032ded6a07028b0af36.rst", "cpp_api/define_logging_8hpp_1a4efec5253d1317f18d57455a7f0f4c9d.rst", "cpp_api/define_logging_8hpp_1a5465abe98bc6673e563a64fb17acd8de.rst", "cpp_api/define_logging_8hpp_1a93baa2614a5bf97d13ae1ce3d9b90c87.rst", "cpp_api/define_logging_8hpp_1aa0607a02582d3aef0021738df1b73c93.rst", "cpp_api/define_logging_8hpp_1ab634321b716a4c9ef274de1d61af0631.rst", "cpp_api/define_logging_8hpp_1ae84d7184cf490593444dac190212096d.rst", "cpp_api/define_parameters_8hpp_1a64574f13f79faf4cd17924e2b0687116.rst", "cpp_api/dir__workspace_amdinfer_include.rst", "cpp_api/dir__workspace_amdinfer_include_amdinfer.rst", "cpp_api/dir__workspace_amdinfer_include_amdinfer_clients.rst", "cpp_api/dir__workspace_amdinfer_include_amdinfer_core.rst", "cpp_api/dir__workspace_amdinfer_include_amdinfer_servers.rst", "cpp_api/dir__workspace_amdinfer_src.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_batching.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_buffers.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_clients.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_core.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_core_memory_pool.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_models.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_observation.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_pre_post.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_servers.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_util.rst", "cpp_api/dir__workspace_amdinfer_src_amdinfer_workers.rst", "cpp_api/enum_batcher_8hpp_1a5277d7d1a11facb999262c1ffa1cf5a8.rst", "cpp_api/enum_endpoints_8hpp_1ad90f89e55716c00f4cc911e76a9a3fe3.rst", "cpp_api/enum_image__preprocess_8hpp_1a004b461de156262bc78b132c472c322a.rst", "cpp_api/enum_image__preprocess_8hpp_1adfe0be75a84efed14a2b0142cda01473.rst", "cpp_api/enum_interface_8hpp_1a2f1c337cd175cabc3a786e0f5712e123.rst", "cpp_api/enum_logging_8hpp_1a5f2178ac8de54222377d5c4a64f986ad.rst", "cpp_api/enum_logging_8hpp_1a7546a5fe8db550cd7a7f925cca061e27.rst", "cpp_api/enum_manager_8hpp_1ad90f89e55716c00f4cc911e76a9a3fe3.rst", "cpp_api/enum_memory__allocator_8hpp_1a7c5b9c96a6c33be879d5f8b8eb3cd8d9.rst", "cpp_api/enum_status_8hpp_1a913436294d314192e3d1ef856c142de3.rst", "cpp_api/enum_worker_8hpp_1acca0b4f2273421d4b08225b868692370.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_amdinfer.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_build_options.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_client.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_grpc.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_http.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_native.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_clients_websocket.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_data_types.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_exceptions.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_request.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_response.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_inference_tensor.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_mixins.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_model_metadata.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_parameters.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_predict_api.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_server_metadata.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_core_tensor.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_declarations.hpp.rst", "cpp_api/file__workspace_amdinfer_include_amdinfer_servers_server.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batch.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batch.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batcher.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_batcher.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_hard.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_hard.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_soft.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_batching_soft.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_buffer.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_buffer.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_cpu.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_cpu.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_client.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http_internal.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_http_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native_internal.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_native_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_clients_websocket.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_api.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_api.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types_internal.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_data_types_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_endpoints.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_endpoints.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_request.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_response.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_inference_tensor.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_interface.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_interface.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_manager.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_manager.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_memory_allocator.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_metadata.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_repository.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_model_repository.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_parameters.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_predict_api.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_predict_api_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_request_container.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_shared_state.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_shared_state.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_tensor.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_worker_info.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_core_worker_info.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_main.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_models_echo.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_models_echo_multi.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_logging.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_logging.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_metrics.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_metrics.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_observer.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_status.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_tracing.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_observation_tracing.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_center_crop.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_get_top_k.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_image_preprocess.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_resnet50_postprocess.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_pre_post_softmax.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_grpc_server.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_grpc_server.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_http_server.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_http_server.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_server.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_server_internal.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_websocket_server.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_servers_websocket_server.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_base64.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_base64.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_compression.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_compression.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_containers.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_ctpl.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_ctpl.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_exec.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_exec.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_memory.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_parse_env.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_parse_env.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_queue.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_read_nth_line.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_read_nth_line.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_string.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_thread.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_timer.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_timer.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_util_traits.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_version.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_aks_detect_stream.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_c_plus_plus.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_echo.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_echo_multi.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_invert_image.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_invert_video.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_migraphx.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_pt_zendnn.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_resnet50.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_resnet50_stream.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_tf_zendnn.cpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_worker.hpp.rst", "cpp_api/file__workspace_amdinfer_src_amdinfer_workers_xmodel.cpp.rst", "cpp_api/file_view_hierarchy.rst", "cpp_api/function_aks_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_aks__detect_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_aks__detect__stream_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_aks__detect__stream_8cpp_1ab13e3cee19b709c1dc339ff1ecae8d66.rst", "cpp_api/function_api_8cpp_1a2f1ebf8b459a22a7de3ce2906aac4f33.rst", "cpp_api/function_api_8cpp_1a39eb9fa1198e60153ddaf2136833e96c.rst", "cpp_api/function_api_8cpp_1a451d6aeeb8de699b4cfc8f632f8e78b6.rst", "cpp_api/function_api_8cpp_1a59d78af1e09556ee7389be7bc48098db.rst", "cpp_api/function_api_8cpp_1a61f95cf4710f15355fc00da05c888668.rst", "cpp_api/function_api_8cpp_1a769502f968540b2f68287c808a9156e2.rst", "cpp_api/function_api_8cpp_1aab5a33ec7de1e03183aa4075ca858cc3.rst", "cpp_api/function_api_8cpp_1abb0bfc39e167c58a8f83a57e8e3717ec.rst", "cpp_api/function_api_8cpp_1ad1da7e319e89046cb1f6d20fea46ef7d.rst", "cpp_api/function_api_8cpp_1ad9bd380ef495aeb0b4efac1ecef7aef6.rst", "cpp_api/function_api_8cpp_1ae0dbf04d01555d9b6428c642503e02d9.rst", "cpp_api/function_base64_8cpp_1a0b2049369714bfeecd9db0b350eba210.rst", "cpp_api/function_base64_8cpp_1a3fab927a4086e187790fddf5d7356625.rst", "cpp_api/function_base64_8cpp_1a6c38e256b28c2a5348ef810fe4e96067.rst", "cpp_api/function_base64_8cpp_1a726cc9124c561dfd45dfbeceeb78f3be.rst", "cpp_api/function_base64_8cpp_1ac5e3a230a657bc4195e886fc328f4adf.rst", "cpp_api/function_base64_8cpp_1afad08aa8530e43e678dfab1189b345f4.rst", "cpp_api/function_c__plus__plus_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_c__plus__plus_8cpp_1a9e6917e8d658979c637569428360219e.rst", "cpp_api/function_c__plus__plus_8cpp_1ad50576352aa9fe95a1f335068a150f86.rst", "cpp_api/function_c__plus__plus_8cpp_1ae839d3bb421974c63e142c461e969830.rst", "cpp_api/function_center__crop_8hpp_1a38fcd76500e2a2a6f82b483f40898886.rst", "cpp_api/function_client_8cpp_1a4d4441bcf3855f2e944fa25af8295257.rst", "cpp_api/function_client_8cpp_1a6354412b0cacb2c302d12c19ff0037f2.rst", "cpp_api/function_client_8cpp_1a7c8a24453d2c9aeaa2457ee1a5b13f93.rst", "cpp_api/function_client_8cpp_1a7db4f7d3cc3c76913a04f054545e45a1.rst", "cpp_api/function_client_8cpp_1ad8b991d3a2a0e2f19e1937cafa34a724.rst", "cpp_api/function_client_8cpp_1ad928316a941cc1f5371da1e90085bfdd.rst", "cpp_api/function_compression_8cpp_1a927c584d5b765b2f1d3ffab394fbfcac.rst", "cpp_api/function_containers_8hpp_1a1d706def706e8040615295c1696f5355.rst", "cpp_api/function_containers_8hpp_1a95954e812c96e615ffc44e525f706868.rst", "cpp_api/function_containers_8hpp_1a99c908436f0a0b8939e1e31b73d1e8a2.rst", "cpp_api/function_containers_8hpp_1ab77948aa3101edea0ef3a53b3a9bba4f.rst", "cpp_api/function_data__types_8cpp_1a704e42ab497bfe5b6f257eb423d6df49.rst", "cpp_api/function_data__types_8hpp_1a4b401163a3bc8d860d096ab1b00a87eb.rst", "cpp_api/function_data__types_8hpp_1a9f421600e40d463aae440ef86d990f77.rst", "cpp_api/function_echo_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_echo__multi_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_exec_8cpp_1ad2f76a0098c3445320c56f8208b66a8f.rst", "cpp_api/function_get__top__k_8hpp_1ae80f6fce372daf2a6692cedafc970557.rst", "cpp_api/function_grpc_8cpp_1a575422378564fcee9c41fc4ecf1026d4.rst", "cpp_api/function_grpc_8cpp_1abca66df04c11d0bd7baee5bafb8d27ec.rst", "cpp_api/function_grpc__internal_8cpp_1a47a63870c628bbcc0f88a7da1e3c3580.rst", "cpp_api/function_grpc__internal_8cpp_1a54829da37e86837ed95fd9b4775135bf.rst", "cpp_api/function_grpc__internal_8cpp_1a757a8b0dc668948c0d7536e955a2fcd6.rst", "cpp_api/function_grpc__internal_8cpp_1a770ea8ac5d3401297d49e81b28b78c3e.rst", "cpp_api/function_grpc__internal_8cpp_1a810895b7fc432ac1fdda46f6b426644a.rst", "cpp_api/function_grpc__internal_8cpp_1a9529bfb0905d019214381197735cb2bf.rst", "cpp_api/function_grpc__internal_8cpp_1a9571eec4e243504a9649a5d1817db835.rst", "cpp_api/function_grpc__internal_8cpp_1a95af9e6fefbe2dd323562124a33284a9.rst", "cpp_api/function_grpc__internal_8cpp_1a976514706c6b64c1fdd73fc85fa7a917.rst", "cpp_api/function_grpc__internal_8cpp_1ae0fbf34987a03cce20609d5767c07eba.rst", "cpp_api/function_grpc__internal_8cpp_1ae460b92cd5f64db78436cebbe777f27b.rst", "cpp_api/function_grpc__internal_8cpp_1ae7334f09228bbcce89265176a7067843.rst", "cpp_api/function_grpc__internal_8cpp_1aedf702344a580ab5481f76a200fe60e5.rst", "cpp_api/function_grpc__internal_8hpp_1a060fbd208a90079d68fd5a5bb0d21ac6.rst", "cpp_api/function_grpc__internal_8hpp_1a6fd8519162462f9576d293681ebc625d.rst", "cpp_api/function_grpc__server_8cpp_1a15ea0fa3e0ee2783642361b4e46de4b1.rst", "cpp_api/function_grpc__server_8cpp_1a17fb6a89fb9a16380c4f07f999c78fb6.rst", "cpp_api/function_grpc__server_8cpp_1aa8dbb41520acad4bc0f3590a62f516dd.rst", "cpp_api/function_grpc__server_8cpp_1ac8a8307a4bb6284d0c08ecf50abe9013.rst", "cpp_api/function_grpc__server_8cpp_1acd5880aba6baa79251eba9aa507f2dd4.rst", "cpp_api/function_grpc__server_8cpp_1ad7d47b9afef4ed43ad59aa45f592737e.rst", "cpp_api/function_grpc__server_8cpp_1af023a215479a2732eb486a97860222cb.rst", "cpp_api/function_grpc__server_8cpp_1af2f2b9dcdbdb51142654acff7134fe47.rst", "cpp_api/function_http_8cpp_1a32e9fc9ef05556e7d000554f8752678b.rst", "cpp_api/function_http_8cpp_1a7d42e4a864836a32004fefea13cbd07f.rst", "cpp_api/function_http_8cpp_1a91a52b2ef7f7d2a26cbad3cc60dab78d.rst", "cpp_api/function_http_8cpp_1aa8d7b351b03d53ab0f5801ffd061f79d.rst", "cpp_api/function_http_8cpp_1abb11c7992ffb6339af08d1ff6e0353ba.rst", "cpp_api/function_http__internal_8cpp_1a20f514dbb8f33ccf800d6fe95d9dc475.rst", "cpp_api/function_http__internal_8cpp_1a263e4c7efb3c93d6fc48499bc4a46548.rst", "cpp_api/function_http__internal_8cpp_1a35f336b6080d807deb64cb9d082d19b5.rst", "cpp_api/function_http__internal_8cpp_1a427f4954da74353ed225bf6ca403908b.rst", "cpp_api/function_http__internal_8cpp_1a58c5a95db890610b34f3464e91ba15c3.rst", "cpp_api/function_http__internal_8cpp_1a90265777686e06d56b25b0bc843eef9e.rst", "cpp_api/function_http__internal_8cpp_1a96f12abbea879eab96fc3a7677c27c4d.rst", "cpp_api/function_http__internal_8cpp_1a9daff85fd67e50b69f84f3802297ff7d.rst", "cpp_api/function_http__internal_8cpp_1ab552d950b2047e8257bf47b64521a3d1.rst", "cpp_api/function_http__internal_8cpp_1ac5e6afcc5f724e1759b2bfe6db7e7ec0.rst", "cpp_api/function_http__internal_8cpp_1acbfb678bfa4431649f17750ea346f33c.rst", "cpp_api/function_http__internal_8cpp_1acc26de4cacac0bd1e7b5dc5b1b802c3a.rst", "cpp_api/function_http__internal_8cpp_1ae9a219aa864779f813bc00edc3a861c0.rst", "cpp_api/function_http__internal_8cpp_1af7e38eb03ed3321e8e914b4d6e855537.rst", "cpp_api/function_http__internal_8cpp_1afa990983f0c809168a33aae411a99f8b.rst", "cpp_api/function_http__internal_8hpp_1afa990983f0c809168a33aae411a99f8b.rst", "cpp_api/function_http__server_8cpp_1a024aac815aaac4c7a062bd1afa1d5efc.rst", "cpp_api/function_http__server_8cpp_1a51d427f7d55612404bc5ed3f0441efb7.rst", "cpp_api/function_http__server_8cpp_1a90265777686e06d56b25b0bc843eef9e.rst", "cpp_api/function_http__server_8cpp_1a9daff85fd67e50b69f84f3802297ff7d.rst", "cpp_api/function_http__server_8cpp_1ac92ce920719257b547b656e4a2cc57ac.rst", "cpp_api/function_http__server_8cpp_1acbfb678bfa4431649f17750ea346f33c.rst", "cpp_api/function_image__preprocess_8hpp_1a6f99956e2db2c6e15a806fc1a0c02c1f.rst", "cpp_api/function_image__preprocess_8hpp_1a85688ea858ae957a61a92a169608ff0c.rst", "cpp_api/function_image__preprocess_8hpp_1afc409bcd827fd1219cc6844e0e07ed62.rst", "cpp_api/function_inference__request_8cpp_1ac5a218218c06390bff837a4d000785c0.rst", "cpp_api/function_inference__response_8cpp_1a290fdc985518c3879979b4c24a4622dc.rst", "cpp_api/function_inference__response_8cpp_1a91b7e6ea3d7b34694d38e2d596167625.rst", "cpp_api/function_invert__image_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_invert__video_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_invert__video_8cpp_1a9e00ba7bdc00389694a9fedb89adfe0a.rst", "cpp_api/function_logging_8cpp_1a1171fedba9c753ea529e1fc6c164e4f2.rst", "cpp_api/function_logging_8cpp_1ab42e9688a184d4c25b0809fd75c21465.rst", "cpp_api/function_logging_8cpp_1abf296c165ec250f986192b7ec61a0eeb.rst", "cpp_api/function_main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97.rst", "cpp_api/function_main_8cpp_1a7a9794689e7aab6ea77930fe77d7475f.rst", "cpp_api/function_main_8cpp_1ac6ad5461171288abe55dfb76ea2b9118.rst", "cpp_api/function_memory_8hpp_1a297476d933ddb20b1462132df4bf2b7c.rst", "cpp_api/function_memory_8hpp_1a884a4d99e70f8bcffb6037ef76a92535.rst", "cpp_api/function_migraphx_8cpp_1a3a3c5cda084c4108cacf3af5db7d7899.rst", "cpp_api/function_migraphx_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_model__repository_8cpp_1a05cd20aa1908b4475961f21cbdaf1e76.rst", "cpp_api/function_model__repository_8cpp_1a8a80f1f2c5954b017a5bd047957a638f.rst", "cpp_api/function_model__repository_8cpp_1a9635913e10f284c7c36fa430aab3e865.rst", "cpp_api/function_model__repository_8hpp_1a94c9f9dd875588ecd02da3459c46da36.rst", "cpp_api/function_models_2echo_8cpp_1a88e88f0ce7df9ffadac20aec94d1db2c.rst", "cpp_api/function_models_2echo_8cpp_1ad728fc7115f1ac5380a1f5b4cae39526.rst", "cpp_api/function_models_2echo_8cpp_1af012751791b00fabf8dae7f38f076e18.rst", "cpp_api/function_models_2echo__multi_8cpp_1a88e88f0ce7df9ffadac20aec94d1db2c.rst", "cpp_api/function_models_2echo__multi_8cpp_1ad728fc7115f1ac5380a1f5b4cae39526.rst", "cpp_api/function_models_2echo__multi_8cpp_1af012751791b00fabf8dae7f38f076e18.rst", "cpp_api/function_native_8cpp_1a3b9123d1a7ba3f8791dd743f14e97bb8.rst", "cpp_api/function_native_8cpp_1a909af7a914df81895bf0a4dda591f13d.rst", "cpp_api/function_observer_8hpp_1adff966f58637552655053b2a0ad05c96.rst", "cpp_api/function_parameters_8cpp_1a43d2d4f52769bcfbcab2d793d13256a3.rst", "cpp_api/function_parse__env_8cpp_1a4251368d5d2f3507fb4ac4296f71c1d3.rst", "cpp_api/function_predict__api_8cpp_1a43d2d4f52769bcfbcab2d793d13256a3.rst", "cpp_api/function_predict__api_8cpp_1a7bdb82fd7255f2139a893458dbb1aadf.rst", "cpp_api/function_pt__zendnn_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_read__nth__line_8cpp_1ab24290f139bfd0ba4a626bdd7d5412d4.rst", "cpp_api/function_resnet50_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_resnet50__postprocess_8hpp_1a50359236db961994e219d8eff7ae2aec.rst", "cpp_api/function_resnet50__stream_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_server_8cpp_1a73eba955b7057fe278a31fb16c5cae39.rst", "cpp_api/function_server_8cpp_1aaee4d554c86a0f534bbe3ffae4a86382.rst", "cpp_api/function_server_8cpp_1acea43796a83b9ee6de28c969539154a4.rst", "cpp_api/function_softmax_8hpp_1acab8d186d21c38a86ed76bb9246a58da.rst", "cpp_api/function_string_8hpp_1a23ca4a0fca976cf704e73ba9c454edf9.rst", "cpp_api/function_string_8hpp_1a4414f2322f12277f964e4a7cc3ae6733.rst", "cpp_api/function_string_8hpp_1a66dcea22803a394e9d697db2110f57b1.rst", "cpp_api/function_string_8hpp_1a7e3149ce8983fc7bc253dd283c5d1327.rst", "cpp_api/function_string_8hpp_1ab7c84c671182f8c47329d59fbc06fc66.rst", "cpp_api/function_string_8hpp_1ae4e85f841d4470eb0040ff4bef5adb52.rst", "cpp_api/function_string_8hpp_1af7be5da4787523697f32822ac12bfaef.rst", "cpp_api/function_tf__zendnn_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_tf__zendnn_8cpp_1adf504d05611a1a3b28113b6eb6e2eb59.rst", "cpp_api/function_thread_8hpp_1a1f755ec0f69754bbf457b2c7f68a16c7.rst", "cpp_api/function_thread_8hpp_1a9f542ca1a9ee9128a5871d146acf8b1b.rst", "cpp_api/function_timer_8cpp_1a8a0c21722d4843898884016ab59ba783.rst", "cpp_api/function_websocket__server_8cpp_1a59635d29a247f707bb9a44d0fb6aea2d.rst", "cpp_api/function_worker__info_8cpp_1a0b90dba241fba26f6e1bc8bea0e55a9e.rst", "cpp_api/function_worker__info_8cpp_1a19798ed33ad0cecb53ca678f47d8fb95.rst", "cpp_api/function_workers_2echo_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_workers_2echo__multi_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/function_xmodel_8cpp_1a601552e385edb19c4596c0c81cabb7fe.rst", "cpp_api/namespace_@100.rst", "cpp_api/namespace_@85.rst", "cpp_api/namespace_@88.rst", "cpp_api/namespace_AKS.rst", "cpp_api/namespace_Json.rst", "cpp_api/namespace_amdinfer.rst", "cpp_api/namespace_amdinfer__detail.rst", "cpp_api/namespace_amdinfer__grpc.rst", "cpp_api/namespace_amdinfer__http.rst", "cpp_api/namespace_amdinfer__pre_post.rst", "cpp_api/namespace_amdinfer__pre_post__detail.rst", "cpp_api/namespace_amdinfer__util.rst", "cpp_api/namespace_amdinfer__workers.rst", "cpp_api/namespace_google.rst", "cpp_api/namespace_google__protobuf.rst", "cpp_api/namespace_grpc.rst", "cpp_api/namespace_inference.rst", "cpp_api/namespace_std.rst", "cpp_api/namespace_vart.rst", "cpp_api/page_view_hierarchy.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_amdinfer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_build_options.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_client.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_grpc.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_http.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_native.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_clients_websocket.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_data_types.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_exceptions.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_request.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_response.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_inference_tensor.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_mixins.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_model_metadata.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_parameters.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_predict_api.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_server_metadata.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_core_tensor.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_declarations.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_include_amdinfer_servers_server.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batch.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batch.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batcher.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_batcher.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_hard.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_hard.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_soft.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_batching_soft.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_buffer.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_buffer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_cpu.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_cpu.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vart_tensor_buffer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_buffers_vector_buffer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_client.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_grpc_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http_internal.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_http_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native_internal.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_native_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_clients_websocket.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_api.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_api.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types_internal.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_data_types_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_endpoints.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_endpoints.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_request.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_response.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_inference_tensor.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_interface.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_interface.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_manager.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_manager.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_cpu_allocator.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_memory_allocator.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_pool.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_memory_pool_vart_tensor_allocator.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_metadata.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_repository.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_model_repository.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_parameters.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_predict_api.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_predict_api_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_request_container.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_shared_state.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_shared_state.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_tensor.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_worker_info.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_core_worker_info.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_main.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_models_echo.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_models_echo_multi.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_logging.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_logging.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_metrics.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_metrics.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_observer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_status.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_tracing.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_observation_tracing.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_center_crop.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_get_top_k.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_image_preprocess.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_resnet50_postprocess.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_pre_post_softmax.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_grpc_server.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_grpc_server.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_http_server.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_http_server.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_server.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_server_internal.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_websocket_server.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_servers_websocket_server.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_base64.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_base64.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_compression.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_compression.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_containers.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_ctpl.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_ctpl.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_exec.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_exec.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_memory.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_parse_env.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_parse_env.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_queue.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_read_nth_line.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_read_nth_line.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_string.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_thread.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_timer.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_timer.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_util_traits.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_version.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_aks_detect_stream.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_c_plus_plus.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_echo.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_echo_multi.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_invert_image.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_invert_video.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_migraphx.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_pt_zendnn.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_resnet50.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_resnet50_stream.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_tf_zendnn.cpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_worker.hpp.rst", "cpp_api/program_listing_file__workspace_amdinfer_src_amdinfer_workers_xmodel.cpp.rst", "cpp_api/structamdinfer_1_1AddDataToTensor.rst", "cpp_api/structamdinfer_1_1InferenceRequestInputSizes.rst", "cpp_api/structamdinfer_1_1InferenceResponseOutputSizes.rst", "cpp_api/structamdinfer_1_1LogOptions.rst", "cpp_api/structamdinfer_1_1MemoryHeader.rst", "cpp_api/structamdinfer_1_1NativeClient_1_1NativeClientImpl.rst", "cpp_api/structamdinfer_1_1Observer.rst", "cpp_api/structamdinfer_1_1Overloaded.rst", "cpp_api/structamdinfer_1_1RequestContainer.rst", "cpp_api/structamdinfer_1_1ServerMetadata.rst", "cpp_api/structamdinfer_1_1Server_1_1ServerImpl.rst", "cpp_api/structamdinfer_1_1SetInputData.rst", "cpp_api/structamdinfer_1_1SetOutputData.rst", "cpp_api/structamdinfer_1_1TensorSizes.rst", "cpp_api/structamdinfer_1_1UpdateCommand.rst", "cpp_api/structamdinfer_1_1WriteData.rst", "cpp_api/structamdinfer_1_1pre__post_1_1ImagePreprocessOptions.rst", "cpp_api/structamdinfer_1_1util_1_1is__any.rst", "cpp_api/structamdinfer_1_1workers_1_1DetectResponse.rst", "cpp_api/structstd_1_1less_3_01amdinfer_1_1ParameterMap_01_4.rst", "cpp_api/structstd_1_1less_3_01amdinfer_1_1RequestParameters_01_4.rst", "cpp_api/typedef_batch_8hpp_1a85d63a3c6b580841f91e53b2a83e20ae.rst", "cpp_api/typedef_batcher_8hpp_1a85d63a3c6b580841f91e53b2a83e20ae.rst", "cpp_api/typedef_batcher_8hpp_1adde4237ff9c6ea5f847a1d49faadad89.rst", "cpp_api/typedef_data__types_8hpp_1ae6aa5769eb83832379c792c300d4566c.rst", "cpp_api/typedef_declarations_8hpp_1a08788239a50c8739700f08f0a6ede4e5.rst", "cpp_api/typedef_declarations_8hpp_1a0b08557614072d06cab7624a903fd723.rst", "cpp_api/typedef_declarations_8hpp_1a12cdaf478119a089d1dbe6deecc13dfe.rst", "cpp_api/typedef_declarations_8hpp_1a252a94fc1c3d1443ba63ec66f9fdbe48.rst", "cpp_api/typedef_declarations_8hpp_1a352d9cb1ac3039b2f272613d5d2e2c09.rst", "cpp_api/typedef_declarations_8hpp_1a364c78e9355139ec245113811681b4a0.rst", "cpp_api/typedef_declarations_8hpp_1a405b5e55988b1398107e8bdff0fefc3d.rst", "cpp_api/typedef_declarations_8hpp_1a40bb0f0fa8a04fc6952014b045c3418d.rst", "cpp_api/typedef_declarations_8hpp_1a416c17e218dbbbba993f2f383a003ecf.rst", "cpp_api/typedef_declarations_8hpp_1a68c2a90f38823c9713e56fd203b2b88d.rst", "cpp_api/typedef_declarations_8hpp_1a69968e7d35b8ae122d52452c7e00ed9d.rst", "cpp_api/typedef_declarations_8hpp_1a6fa0f5650685437baf576ebe74a760c8.rst", "cpp_api/typedef_declarations_8hpp_1aa4fc4532a6cc2a392046e1a720d80ad4.rst", "cpp_api/typedef_declarations_8hpp_1aa722db0b3b3c1bb8e56367ff9b0390ab.rst", "cpp_api/typedef_declarations_8hpp_1ae43152e77216115d2665d62c4c8020ca.rst", "cpp_api/typedef_endpoints_8hpp_1ac2632fc3fff3bb1b92a1a446a586399c.rst", "cpp_api/typedef_grpc__server_8cpp_1a0795844bf8bd399665e38979b3bbe186.rst", "cpp_api/typedef_grpc__server_8cpp_1a2571f3485e82379ee4c555e64c58dc32.rst", "cpp_api/typedef_grpc__server_8cpp_1a3b67a1f4b15f6f8988d8e5172649fb00.rst", "cpp_api/typedef_grpc__server_8cpp_1a522cc0269bb90723a0841f2d0a2be7fb.rst", "cpp_api/typedef_grpc__server_8cpp_1a91acc2ad2e6156eccc10d01384ef8506.rst", "cpp_api/typedef_grpc__server_8cpp_1aa3ba85be01ef9f3abcaf7b476cf8d588.rst", "cpp_api/typedef_grpc__server_8cpp_1aa51ad0e9f1a23127a07cdfc18412904d.rst", "cpp_api/typedef_http__internal_8cpp_1a78092124400e8e02cce73782a3ed0832.rst", "cpp_api/typedef_http__internal_8cpp_1a9a8b533ecefc7f30d6f3377cf897f1c8.rst", "cpp_api/typedef_http__internal_8cpp_1ac0c25a8d874c058c0256360834443885.rst", "cpp_api/typedef_http__internal_8hpp_1a7137f2088c425db6fdd74b1be1fe0663.rst", "cpp_api/typedef_http__server_8cpp_1a7137f2088c425db6fdd74b1be1fe0663.rst", "cpp_api/typedef_manager_8hpp_1ac2632fc3fff3bb1b92a1a446a586399c.rst", "cpp_api/typedef_model__metadata_8hpp_1a3c11f1db8b5cac2c685eea18138065cb.rst", "cpp_api/typedef_parameters_8hpp_1a26002ca91b4305088f6e975fb162cc81.rst", "cpp_api/typedef_parameters_8hpp_1af874429ad00786b2a05f30c311422e4c.rst", "cpp_api/typedef_predict__api_8hpp_1a08788239a50c8739700f08f0a6ede4e5.rst", "cpp_api/typedef_predict__api_8hpp_1a68c2a90f38823c9713e56fd203b2b88d.rst", "cpp_api/typedef_predict__api_8hpp_1aecb5618c912edd1c1537ec7da1befebc.rst", "cpp_api/typedef_predict__api_8hpp_1af874429ad00786b2a05f30c311422e4c.rst", "cpp_api/typedef_queue_8hpp_1a11e139757fcec15a84a47b968f7aa685.rst", "cpp_api/typedef_queue_8hpp_1a3221a88db26ee77b2f820bb75bc2ff24.rst", "cpp_api/typedef_queue_8hpp_1ad6d1b639ebd1fcf68a289f9d3cbd061d.rst", "cpp_api/typedef_queue_8hpp_1afeeb9f145c6244366d3c5fbf59a5f849.rst", "cpp_api/typedef_resnet50__stream_8cpp_1a562f5c0b8f324002221157f834830a22.rst", "cpp_api/typedef_timer_8hpp_1ac892ad2b905321f7e3be6dea415c4794.rst", "cpp_api/unabridged_api.rst", "cpp_api/unabridged_orphan.rst", "cpp_api/variable_aks__detect_8cpp_1a04c17f159348c95b8f43e30dd5870d13.rst", "cpp_api/variable_aks__detect_8cpp_1a0a4e7d7f877317445cdbbbbad363c7f6.rst", "cpp_api/variable_aks__detect_8cpp_1a42d9aa2fce61d9debb309bcea9830853.rst", "cpp_api/variable_aks__detect_8cpp_1aef4b7872e7395e2c7fdf950685bc2c94.rst", "cpp_api/variable_aks__detect_8hpp_1aff4c1089315fd2d1ff79e575fb320332.rst", "cpp_api/variable_build__options_8hpp_1a002b97a750e7bcc073424b03ebb1dcb5.rst", "cpp_api/variable_build__options_8hpp_1a1be3dbd430e5f181a95ba6fbac904899.rst", "cpp_api/variable_build__options_8hpp_1a2cbbae723c01d1e388932882efbf9264.rst", "cpp_api/variable_build__options_8hpp_1a976e70326e2282ae2b88a2117db22687.rst", "cpp_api/variable_build__options_8hpp_1ad2b344ab5401aa8dc82b6421c364fada.rst", "cpp_api/variable_build__options_8hpp_1ae6319372d397b1a8b649e2ebdf45d2bd.rst", "cpp_api/variable_c__plus__plus_8cpp_1a697d63ad64f3f8bfc5a6299ce8bccdc1.rst", "cpp_api/variable_c__plus__plus_8cpp_1a71667fd42c5cef1a3e32e5c03ae40091.rst", "cpp_api/variable_c__plus__plus_8cpp_1a99f0d6272c799cd29afc336c68feb898.rst", "cpp_api/variable_c__plus__plus_8cpp_1af0ec89de1369c878ed2a32a0e0227448.rst", "cpp_api/variable_ctpl_8cpp_1a3d0e67ce722206db215f42681f069659.rst", "cpp_api/variable_echo__multi_8cpp_1a416f1fc1c3bce51d97065301d41db581.rst", "cpp_api/variable_echo__multi_8cpp_1a99f0d6272c799cd29afc336c68feb898.rst", "cpp_api/variable_echo__multi_8cpp_1af0ec89de1369c878ed2a32a0e0227448.rst", "cpp_api/variable_echo__multi_8cpp_1afa0b765105e95ab377c99ba05b254d06.rst", "cpp_api/variable_image__preprocess_8hpp_1a08c9e02a82e9fb21f8aa57bbbd33f77f.rst", "cpp_api/variable_invert__image_8cpp_1a3fe6b60514f224d88012b81a72f206b0.rst", "cpp_api/variable_invert__image_8cpp_1a778cfb0679cd1b44d77c94cc1e64cf74.rst", "cpp_api/variable_invert__image_8cpp_1ab862f12385b964a9f52578ce2b45f91a.rst", "cpp_api/variable_invert__video_8cpp_1ad040ac198e6b944c664091b286f73212.rst", "cpp_api/variable_main_8cpp_1a17ace24a7aa554efe78b7d28fc83e129.rst", "cpp_api/variable_metrics_8cpp_1a214ca5f30222281458498214a0d9300c.rst", "cpp_api/variable_metrics_8cpp_1ab6051d51a6bd12208f6574272fac9117.rst", "cpp_api/variable_metrics_8cpp_1ade316533d688f2811817fa7a1a73f084.rst", "cpp_api/variable_models_2echo__multi_8cpp_1a295e485ab5ea3732dd7360c47e974d44.rst", "cpp_api/variable_models_2echo__multi_8cpp_1a8b03977cd93d9bb002e89d614bbbfdb9.rst", "cpp_api/variable_models_2echo__multi_8cpp_1aef1d8b9952b78ddeb8bb591cbd16eb5d.rst", "cpp_api/variable_models_2echo__multi_8cpp_1afbb86105d54d5a6d56b02d0ffabfebe8.rst", "cpp_api/variable_observer_8hpp_1ad1d17f4a2117c6141e8dfe1727c6cb92.rst", "cpp_api/variable_pool_8cpp_1a5cecd49087cfcb52ba4aa002d391c321.rst", "cpp_api/variable_pt__zendnn_8cpp_1a5544d4acb89db442cba40fdb51c296c3.rst", "cpp_api/variable_pt__zendnn_8cpp_1a6c6cc50416b27fffc4564f6457fef623.rst", "cpp_api/variable_pt__zendnn_8cpp_1a7080de13bbb4da809cfeea4f64cfa3b1.rst", "cpp_api/variable_resnet50__stream_8cpp_1a0a4e7d7f877317445cdbbbbad363c7f6.rst", "cpp_api/variable_resnet50__stream_8cpp_1aa1000a0c48850c27d70bea0534ee229f.rst", "cpp_api/variable_resnet50__stream_8cpp_1ac825e49c82320971e8b0370c6d4c36da.rst", "cpp_api/variable_resnet50__stream_8cpp_1adc9b3a6c8074468b5528a02f79137dab.rst", "cpp_api/variable_resnet50__stream_8cpp_1af570cb232c9a5846340eae70c6c53ec6.rst", "cpp_api/variable_soft_8cpp_1a668387f6df1819f5cb56113bdd3ef62a.rst", "cpp_api/variable_traits_8hpp_1a541edeed71c8938d70cdf47659f9a391.rst", "cpp_api/variable_version_8hpp_1a09dc0ce6af2ec98bf41a1fee3e892918.rst", "cpp_api/variable_version_8hpp_1a0cfff96254bdc960863abdcc6199f7cf.rst", "cpp_api/variable_version_8hpp_1a4707efc5cabb44fbeaf180cc785da651.rst", "cpp_api/variable_version_8hpp_1a7d0f0ec1f70724c293b7d692a857dcf7.rst", "cpp_api/variable_version_8hpp_1ad3c3d0b978d86f9e3cec272acdb15766.rst", "cpp_api/variable_worker_8hpp_1afff06a8b4498d235dc378329775cf03d.rst", "cpp_user_api.rst", "dependencies.rst", "docker.rst", "example_resnet50_cpp.rst", "example_resnet50_python.rst", "glossary.rst", "hello_world_echo.rst", "index.rst", "introduction.rst", "kserve.rst", "links.rst", "logging.rst", "metrics.rst", "migraphx.rst", "performance.rst", "performance_factors.rst", "platforms.rst", "python.rst", "quickstart_deployment.rst", "quickstart_development.rst", "quickstart_inference.rst", "rest.rst", "roadmap.rst", "tracing.rst", "vitis_ai.rst", "zendnn.rst"], "titles": ["AKS", "Architecture", "Benchmarking", "Changelog", "Command-Line Interface", "Contributing", "Class Hierarchy", "Class Batch", "Class Batcher", "Class Buffer", "Template Class CallData", "Class CallDataBase", "Class CallDataHasHardware", "Class CallDataModelInfer", "Class CallDataModelList", "Class CallDataModelLoad", "Class CallDataModelMetadata", "Class CallDataModelReady", "Class CallDataModelUnload", "Class CallDataServerLive", "Class CallDataServerMetadata", "Class CallDataServerReady", "Template Class CallDataServerStream", "Template Class CallDataUnary", "Class CallDataWorkerLoad", "Class CallDataWorkerUnload", "Class Client", "Class CppNativeApi", "Class CpuAllocator", "Class CpuBuffer", "Class DataType", "Class DrogonHttp", "Class Endpoints", "Class GrpcApiUnary", "Class GrpcClient", "Class GrpcClient::GrpcClientImpl", "Class GrpcServer", "Class HardBatcher", "Class HttpClient", "Class HttpClient::HttpClientImpl", "Class InferenceRequest", "Template Class InferenceRequestBuilder", "Template Class InferenceRequestBuilder&lt; CallDataModelInfer * &gt;", "Template Class InferenceRequestBuilder&lt; InferenceRequest &gt;", "Template Class InferenceRequestBuilder&lt; std::shared_ptr&lt; Json::Value &gt; &gt;", "Class InferenceRequestInput", "Template Class InferenceRequestInputBuilder", "Template Class InferenceRequestInputBuilder&lt; InferenceRequestInput &gt;", "Template Class InferenceRequestInputBuilder&lt; inference::ModelInferRequest_InferInputTensor &gt;", "Template Class InferenceRequestInputBuilder&lt; std::shared_ptr&lt; Json::Value &gt; &gt;", "Class InferenceRequestOutput", "Template Class InferenceRequestOutputBuilder", "Template Class InferenceRequestOutputBuilder&lt; std::shared_ptr&lt; Json::Value &gt; &gt;", "Class InferenceResponse", "Class InferenceResponseOutput", "Class InferenceTensor", "Class Interface", "Class Logger", "Class Manager", "Class Manager::Endpoints", "Class MemoryAllocator", "Class MemoryPool", "Class ModelMetadata", "Class ModelMetadataTensor", "Class ModelRepository", "Class ModelRepository::ModelRepositoryImpl", "Class NativeClient", "Class ParameterMap", "Class RequestParameters", "Class Serializable", "Class Server", "Class SharedState", "Class SoftBatcher", "Class Tensor", "Class UpdateListener", "Class VartTensorBuffer", "Class VectorBuffer", "Class WebSocketClient", "Class WebSocketClient::WebSocketClientImpl", "Class WorkerInfo", "Class bad_status", "Class connection_error", "Class environment_not_set_error", "Class external_error", "Class file_not_found_error", "Class file_read_error", "Class DrogonWs", "Class WebsocketServer", "Class invalid_argument", "Class runtime_error", "Class ThreadPool", "Class Timer", "Class Aks", "Class AksDetect", "Class AksDetectStream", "Class CPlusPlus", "Class Echo", "Class EchoMulti", "Class InvertImage", "Class InvertVideo", "Class MIGraphXWorker", "Class PtZendnn", "Class ResNet50", "Class ResNet50Stream", "Class TfZendnn", "Class Worker", "Class XModel", "Template Class Map", "Code Documentation", "Define BUFFERSIZE", "Define AMDINFER_ENABLE_MIGRAPHX", "Define AMDINFER_BUILD_TESTING", "Define AMDINFER_ENABLE_TFZENDNN", "Define AMDINFER_ENABLE_METRICS", "Define AMDINFER_ENABLE_PTZENDNN", "Define AMDINFER_ENABLE_REST", "Define AMDINFER_ENABLE_LOGGING", "Define AMDINFER_ENABLE_TRACING", "Define AMDINFER_ENABLE_AKS", "Define AMDINFER_ENABLE_HTTP", "Define AMDINFER_ENABLE_GRPC", "Define AMDINFER_ENABLE_VITIS", "Define CALLDATA_IMPL", "Define CALLDATA_IMPL_END", "Define AMDINFER_LOG_WARN", "Define AMDINFER_LOG_INFO", "Define AMDINFER_LOG_TRACE", "Define AMDINFER_IF_LOGGING", "Define AMDINFER_LOG_ERROR", "Define AMDINFER_LOG_DEBUG", "Define GUARD_AMDINFER_CORE_PARAMETERS", "Directory include", "Directory amdinfer", "Directory clients", "Directory core", "Directory servers", "Directory src", "Directory amdinfer", "Directory batching", "Directory buffers", "Directory clients", "Directory core", "Directory memory_pool", "Directory models", "Directory observation", "Directory pre_post", "Directory servers", "Directory util", "Directory workers", "Enum BatcherStatus", "Enum UpdateCommandType", "Enum ImageOrder", "Enum ResizeAlgorithm", "Enum InterfaceType", "Enum Loggers", "Enum LogLevel", "Enum UpdateCommandType", "Enum MemoryAllocators", "Enum Status", "Enum WorkerStatus", "File amdinfer.hpp", "File build_options.hpp", "File client.hpp", "File grpc.hpp", "File http.hpp", "File native.hpp", "File websocket.hpp", "File data_types.hpp", "File exceptions.hpp", "File inference_request.hpp", "File inference_response.hpp", "File inference_tensor.hpp", "File mixins.hpp", "File model_metadata.hpp", "File parameters.hpp", "File predict_api.hpp", "File server_metadata.hpp", "File tensor.hpp", "File declarations.hpp", "File server.hpp", "File batch.cpp", "File batch.hpp", "File batcher.cpp", "File batcher.hpp", "File hard.cpp", "File hard.hpp", "File soft.cpp", "File soft.hpp", "File buffer.cpp", "File buffer.hpp", "File cpu.cpp", "File cpu.hpp", "File vart_tensor.cpp", "File vart_tensor.hpp", "File vart_tensor_buffer.cpp", "File vart_tensor_buffer.hpp", "File vector_buffer.cpp", "File vector_buffer.hpp", "File client.cpp", "File grpc.cpp", "File grpc_internal.cpp", "File grpc_internal.hpp", "File http.cpp", "File http_internal.cpp", "File http_internal.hpp", "File native.cpp", "File native_internal.cpp", "File native_internal.hpp", "File websocket.cpp", "File api.cpp", "File api.hpp", "File data_types.cpp", "File data_types_internal.cpp", "File data_types_internal.hpp", "File endpoints.cpp", "File endpoints.hpp", "File inference_request.cpp", "File inference_response.cpp", "File inference_tensor.cpp", "File interface.cpp", "File interface.hpp", "File manager.cpp", "File manager.hpp", "File cpu_allocator.cpp", "File cpu_allocator.hpp", "File memory_allocator.hpp", "File pool.cpp", "File pool.hpp", "File vart_tensor_allocator.cpp", "File vart_tensor_allocator.hpp", "File model_metadata.cpp", "File model_repository.cpp", "File model_repository.hpp", "File parameters.cpp", "File predict_api.cpp", "File predict_api_internal.hpp", "File request_container.hpp", "File shared_state.cpp", "File shared_state.hpp", "File tensor.cpp", "File worker_info.cpp", "File worker_info.hpp", "File main.cpp", "File echo.cpp", "File echo_multi.cpp", "File logging.cpp", "File logging.hpp", "File metrics.cpp", "File metrics.hpp", "File observer.hpp", "File status.hpp", "File tracing.cpp", "File tracing.hpp", "File center_crop.hpp", "File get_top_k.hpp", "File image_preprocess.hpp", "File resnet50_postprocess.hpp", "File softmax.hpp", "File grpc_server.cpp", "File grpc_server.hpp", "File http_server.cpp", "File http_server.hpp", "File server.cpp", "File server_internal.hpp", "File websocket_server.cpp", "File websocket_server.hpp", "File base64.cpp", "File base64.hpp", "File compression.cpp", "File compression.hpp", "File containers.hpp", "File ctpl.cpp", "File ctpl.hpp", "File exec.cpp", "File exec.hpp", "File memory.hpp", "File parse_env.cpp", "File parse_env.hpp", "File queue.hpp", "File read_nth_line.cpp", "File read_nth_line.hpp", "File string.hpp", "File thread.hpp", "File timer.cpp", "File timer.hpp", "File traits.hpp", "File version.hpp", "File aks.cpp", "File aks_detect.cpp", "File aks_detect.hpp", "File aks_detect_stream.cpp", "File c_plus_plus.cpp", "File echo.cpp", "File echo_multi.cpp", "File invert_image.cpp", "File invert_video.cpp", "File migraphx.cpp", "File pt_zendnn.cpp", "File resnet50.cpp", "File resnet50_stream.cpp", "File tf_zendnn.cpp", "File worker.hpp", "File xmodel.cpp", "File Hierarchy", "Function getWorker()", "Function getWorker()", "Function getWorker()", "Function amdinfer::constructMessage(const std::string&amp;, const std::string&amp;, const std::string&amp;)", "Function amdinfer::modelMetadata", "Function amdinfer::modelLoad", "Function amdinfer::getHardware", "Function amdinfer::workerUnload", "Function amdinfer::workerLoad", "Function amdinfer::modelUnload", "Function amdinfer::modelList", "Function amdinfer::serverMetadata", "Function amdinfer::modelInfer", "Function amdinfer::modelReady", "Function amdinfer::hasHardware", "Function amdinfer::util::minDecodeLength", "Function amdinfer::util::base64Decode(std::string)", "Function amdinfer::util::base64Encode(const char *, size_t)", "Function amdinfer::util::base64Decode(const char *, size_t)", "Function amdinfer::util::base64Encode(std::string)", "Function amdinfer::util::minEncodeLength", "Function getWorker()", "Function amdinfer::openModel", "Function amdinfer::getFunction", "Function amdinfer::workers::respond", "Function amdinfer::pre_post::centerCrop", "Function amdinfer::inferAsyncOrderedBatched", "Function amdinfer::serverHasExtension", "Function amdinfer::initializeClientLogging", "Function amdinfer::inferAsyncOrdered", "Function amdinfer::waitUntilServerReady", "Function amdinfer::waitUntilModelReady", "Function amdinfer::util::zDecompress", "Template Function amdinfer::util::containerProduct(Iter, Iter)", "Template Function amdinfer::util::containerSum(const Container&amp;)", "Template Function amdinfer::util::containerSum(Iter, Iter)", "Template Function amdinfer::util::containerProduct(const Container&amp;)", "Function amdinfer::operator&lt;&lt;(std::ostream&amp;, const DataType&amp;)", "Template Function amdinfer::switchOverTypes", "Function amdinfer::detail::hash", "Function getWorker()", "Function getWorker()", "Function amdinfer::util::exec", "Function amdinfer::pre_post::getTopK", "Function amdinfer::runInference", "Function amdinfer::mapProtoToModelMetadata", "Function amdinfer::mapParametersToProto", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;)", "Function amdinfer::mapResponseToProto", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;, RequestParameters&amp;)", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;, ParameterMap&amp;)", "Function amdinfer::mapModelMetadataToProto", "Function amdinfer::mapRequestToProto(const InferenceRequest&amp;, inference::ModelInferRequest&amp;, ] const Observer&amp;)", "Function amdinfer::mapProtoToResponse", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;)", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;)", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;, ParameterMap *)", "Function amdinfer::mapProtoToParameters(const google::protobuf::Map&lt;std::string, inference::InferParameter&gt;&amp;, RequestParameters *)", "Template Function amdinfer::Overloaded", "Template Function amdinfer::getTensorContents", "Function amdinfer::mapRequestToProto(const InferenceRequest&amp;, inference::ModelInferRequest&amp;, const Observer&amp;)", "Function amdinfer::grpc::stop", "Function amdinfer::grpcUnaryCallback", "Function amdinfer::getOutput", "Function amdinfer::getRequest(const inference::ModelInferRequest&amp;, const MemoryPool *)", "Function amdinfer::grpc::start", "Function amdinfer::getInput", "Function amdinfer::setCallback(InferenceRequest *, CallDataModelInfer *)", "Function amdinfer::grpc::start", "Function amdinfer::createPostRequest", "Function amdinfer::checkError", "Function amdinfer::addHeaders", "Function amdinfer::createGetRequest", "Function amdinfer::createInferenceRequest", "Function amdinfer::modelMetadataToJson", "Function amdinfer::modelMetadataTensorToJson", "Function amdinfer::mapJsonToParameters", "Function amdinfer::mapJsonToModelMetadata", "Function amdinfer::mapJsonToResponse", "Function amdinfer::errorHttpResponse", "Function amdinfer::mapParametersToJson", "Function amdinfer::parseJson", "Function amdinfer::mapJsonToParameters", "Function amdinfer::mapParametersToJson", "Function amdinfer::parseResponse", "Function amdinfer::mapParametersToJson", "Function amdinfer::mapJsonToParameters", "Function amdinfer::mapRequestToJson", "Template Function amdinfer::jsonValueToType", "Template Function amdinfer::jsonValueToType", "Function amdinfer::http::stop", "Function amdinfer::http::start", "Function amdinfer::errorHttpResponse", "Function amdinfer::parseJson", "Function amdinfer::http::start", "Function amdinfer::parseResponse", "Template Function amdinfer::pre_post::imagePreprocess", "Template Function amdinfer::pre_post::detail::normalize", "Template Function amdinfer::pre_post::detail::nestedLoop", "Function amdinfer::operator&lt;&lt;(std::ostream&amp;, InferenceRequestInput const&amp;)", "Function amdinfer::operator&lt;&lt;(std::ostream&amp;, InferenceResponseOutput const&amp;)", "Function amdinfer::operator&lt;&lt;(std::ostream&amp;, InferenceResponse const&amp;)", "Function getWorker()", "Function getWorker()", "Function amdinfer::constructMessage(const std::string&amp;, const std::string&amp;)", "Function amdinfer::initLogger", "Function amdinfer::getLevel", "Function amdinfer::getLogDirectory", "Function main", "Function signalCallbackHandler", "Function signalCallbackHandler", "Template Function amdinfer::util::copy", "Template Function amdinfer::copy", "Function amdinfer::workers::toDataType", "Function getWorker()", "Function amdinfer::parseModel(const fs::path&amp;, const std::string&amp;, ParameterMap *)", "Function amdinfer::mapProtoToParameters2", "Function amdinfer::mapProtoToParameters2", "Function amdinfer::parseModel(const std::filesystem::path&amp;, const std::string&amp;, ParameterMap *)", "Function getOutputs()", "Function run(amdinfer::Batch *, amdinfer::Batch *)", "Function getInputs()", "Function getOutputs()", "Function run(amdinfer::Batch *, amdinfer::Batch *)", "Function getInputs()", "Function amdinfer::getRequest(const InferenceRequest&amp;, const MemoryPool *)", "Function amdinfer::setCallback(InferenceRequest *)", "Function amdinfer::logTraceBuffer", "Template Function amdinfer::expandType", "Function amdinfer::util::autoExpandEnvironmentVariables", "Template Function amdinfer::expandType", "Template Function amdinfer::copy", "Function getWorker()", "Function amdinfer::util::readNthLine", "Function getWorker()", "Template Function amdinfer::pre_post::resnet50Postprocess", "Function getWorker()", "Function amdinfer::terminate", "Function amdinfer::initialize", "Function amdinfer::initializeServerLogging", "Template Function amdinfer::pre_post::calcSoftmax", "Function amdinfer::util::startsWith", "Function amdinfer::util::toLower(std::string *)", "Function amdinfer::util::toLower(const std::string&amp;)", "Function amdinfer::util::endsWith", "Function amdinfer::util::addressToString", "Function amdinfer::util::split", "Function amdinfer::util::isLower", "Function getWorker()", "Function amdinfer::workers::openLibrary", "Function amdinfer::util::setThreadName(const char *)", "Function amdinfer::util::setThreadName(const std::string&amp;)", "Function amdinfer::util::getTime", "Function amdinfer::http::setCallback", "Function amdinfer::findFunc", "Function amdinfer::getWorker", "Function getWorker()", "Function getWorker()", "Function getWorker()", "Namespace &#64;100", "Namespace &#64;85", "Namespace &#64;88", "Namespace AKS", "Namespace Json", "Namespace amdinfer", "Namespace amdinfer::detail", "Namespace amdinfer::grpc", "Namespace amdinfer::http", "Namespace amdinfer::pre_post", "Namespace amdinfer::pre_post::detail", "Namespace amdinfer::util", "Namespace amdinfer::workers", "Namespace google", "Namespace google::protobuf", "Namespace grpc", "Namespace inference", "Namespace std", "Namespace vart", "&lt;no title&gt;", "Program Listing for File amdinfer.hpp", "Program Listing for File build_options.hpp", "Program Listing for File client.hpp", "Program Listing for File grpc.hpp", "Program Listing for File http.hpp", "Program Listing for File native.hpp", "Program Listing for File websocket.hpp", "Program Listing for File data_types.hpp", "Program Listing for File exceptions.hpp", "Program Listing for File inference_request.hpp", "Program Listing for File inference_response.hpp", "Program Listing for File inference_tensor.hpp", "Program Listing for File mixins.hpp", "Program Listing for File model_metadata.hpp", "Program Listing for File parameters.hpp", "Program Listing for File predict_api.hpp", "Program Listing for File server_metadata.hpp", "Program Listing for File tensor.hpp", "Program Listing for File declarations.hpp", "Program Listing for File server.hpp", "Program Listing for File batch.cpp", "Program Listing for File batch.hpp", "Program Listing for File batcher.cpp", "Program Listing for File batcher.hpp", "Program Listing for File hard.cpp", "Program Listing for File hard.hpp", "Program Listing for File soft.cpp", "Program Listing for File soft.hpp", "Program Listing for File buffer.cpp", "Program Listing for File buffer.hpp", "Program Listing for File cpu.cpp", "Program Listing for File cpu.hpp", "Program Listing for File vart_tensor.cpp", "Program Listing for File vart_tensor.hpp", "Program Listing for File vart_tensor_buffer.cpp", "Program Listing for File vart_tensor_buffer.hpp", "Program Listing for File vector_buffer.cpp", "Program Listing for File vector_buffer.hpp", "Program Listing for File client.cpp", "Program Listing for File grpc.cpp", "Program Listing for File grpc_internal.cpp", "Program Listing for File grpc_internal.hpp", "Program Listing for File http.cpp", "Program Listing for File http_internal.cpp", "Program Listing for File http_internal.hpp", "Program Listing for File native.cpp", "Program Listing for File native_internal.cpp", "Program Listing for File native_internal.hpp", "Program Listing for File websocket.cpp", "Program Listing for File api.cpp", "Program Listing for File api.hpp", "Program Listing for File data_types.cpp", "Program Listing for File data_types_internal.cpp", "Program Listing for File data_types_internal.hpp", "Program Listing for File endpoints.cpp", "Program Listing for File endpoints.hpp", "Program Listing for File inference_request.cpp", "Program Listing for File inference_response.cpp", "Program Listing for File inference_tensor.cpp", "Program Listing for File interface.cpp", "Program Listing for File interface.hpp", "Program Listing for File manager.cpp", "Program Listing for File manager.hpp", "Program Listing for File cpu_allocator.cpp", "Program Listing for File cpu_allocator.hpp", "Program Listing for File memory_allocator.hpp", "Program Listing for File pool.cpp", "Program Listing for File pool.hpp", "Program Listing for File vart_tensor_allocator.cpp", "Program Listing for File vart_tensor_allocator.hpp", "Program Listing for File model_metadata.cpp", "Program Listing for File model_repository.cpp", "Program Listing for File model_repository.hpp", "Program Listing for File parameters.cpp", "Program Listing for File predict_api.cpp", "Program Listing for File predict_api_internal.hpp", "Program Listing for File request_container.hpp", "Program Listing for File shared_state.cpp", "Program Listing for File shared_state.hpp", "Program Listing for File tensor.cpp", "Program Listing for File worker_info.cpp", "Program Listing for File worker_info.hpp", "Program Listing for File main.cpp", "Program Listing for File echo.cpp", "Program Listing for File echo_multi.cpp", "Program Listing for File logging.cpp", "Program Listing for File logging.hpp", "Program Listing for File metrics.cpp", "Program Listing for File metrics.hpp", "Program Listing for File observer.hpp", "Program Listing for File status.hpp", "Program Listing for File tracing.cpp", "Program Listing for File tracing.hpp", "Program Listing for File center_crop.hpp", "Program Listing for File get_top_k.hpp", "Program Listing for File image_preprocess.hpp", "Program Listing for File resnet50_postprocess.hpp", "Program Listing for File softmax.hpp", "Program Listing for File grpc_server.cpp", "Program Listing for File grpc_server.hpp", "Program Listing for File http_server.cpp", "Program Listing for File http_server.hpp", "Program Listing for File server.cpp", "Program Listing for File server_internal.hpp", "Program Listing for File websocket_server.cpp", "Program Listing for File websocket_server.hpp", "Program Listing for File base64.cpp", "Program Listing for File base64.hpp", "Program Listing for File compression.cpp", "Program Listing for File compression.hpp", "Program Listing for File containers.hpp", "Program Listing for File ctpl.cpp", "Program Listing for File ctpl.hpp", "Program Listing for File exec.cpp", "Program Listing for File exec.hpp", "Program Listing for File memory.hpp", "Program Listing for File parse_env.cpp", "Program Listing for File parse_env.hpp", "Program Listing for File queue.hpp", "Program Listing for File read_nth_line.cpp", "Program Listing for File read_nth_line.hpp", "Program Listing for File string.hpp", "Program Listing for File thread.hpp", "Program Listing for File timer.cpp", "Program Listing for File timer.hpp", "Program Listing for File traits.hpp", "Program Listing for File version.hpp", "Program Listing for File aks.cpp", "Program Listing for File aks_detect.cpp", "Program Listing for File aks_detect.hpp", "Program Listing for File aks_detect_stream.cpp", "Program Listing for File c_plus_plus.cpp", "Program Listing for File echo.cpp", "Program Listing for File echo_multi.cpp", "Program Listing for File invert_image.cpp", "Program Listing for File invert_video.cpp", "Program Listing for File migraphx.cpp", "Program Listing for File pt_zendnn.cpp", "Program Listing for File resnet50.cpp", "Program Listing for File resnet50_stream.cpp", "Program Listing for File tf_zendnn.cpp", "Program Listing for File worker.hpp", "Program Listing for File xmodel.cpp", "Struct AddDataToTensor", "Struct InferenceRequestInputSizes", "Struct InferenceResponseOutputSizes", "Struct LogOptions", "Struct MemoryHeader", "Struct NativeClient::NativeClientImpl", "Struct Observer", "Template Struct Overloaded", "Struct RequestContainer", "Struct ServerMetadata", "Struct Server::ServerImpl", "Struct SetInputData", "Struct SetOutputData", "Struct TensorSizes", "Struct UpdateCommand", "Struct WriteData", "Template Struct ImagePreprocessOptions", "Template Struct is_any", "Struct DetectResponse", "Template Struct less&lt; amdinfer::ParameterMap &gt;", "Template Struct less&lt; amdinfer::RequestParameters &gt;", "Typedef amdinfer::BatchPtr", "Typedef amdinfer::BatchPtr", "Typedef amdinfer::BatchPtrQueue", "Typedef amdinfer::fp16", "Typedef amdinfer::Callback", "Typedef amdinfer::InterfacePtr", "Typedef amdinfer::InferenceRequestPtr", "Typedef amdinfer::BufferRawPtrs", "Typedef amdinfer::RequestContainerPtr", "Typedef amdinfer::TracePtr", "Typedef amdinfer::InferenceResponseFuture", "Typedef amdinfer::InferenceResponseFuture", "Typedef amdinfer::StringMap", "Typedef amdinfer::InferenceResponsePromisePtr", "Typedef amdinfer::InferenceResponseOutput", "Typedef amdinfer::BufferPtrs", "Typedef amdinfer::Kernels", "Typedef amdinfer::BufferPtr", "Typedef amdinfer::BufferRawPtrs", "Typedef amdinfer::UpdateCommandQueue", "Typedef ServerContext", "Typedef ServerBuilder", "Typedef ServerAsyncResponseWriter", "Typedef ServerCompletionQueue", "Typedef amdinfer::AsyncService", "Typedef Server", "Typedef StatusCode", "Typedef amdinfer::InputBuilder", "Typedef amdinfer::RequestBuilder", "Typedef amdinfer::OutputBuilder", "Typedef amdinfer::DrogonCallback", "Typedef amdinfer::DrogonCallback", "Typedef amdinfer::UpdateCommandQueue", "Typedef amdinfer::ModelMetadataTensor", "Typedef amdinfer::ParameterMapPtr", "Typedef amdinfer::Parameter", "Typedef amdinfer::Callback", "Typedef amdinfer::InferenceResponsePromisePtr", "Typedef amdinfer::RequestParametersPtr", "Typedef amdinfer::Parameter", "Typedef amdinfer::InferenceRequestPtrQueue", "Typedef amdinfer::BlockingQueue", "Typedef amdinfer::BufferPtrsQueuePtr", "Typedef amdinfer::BufferPtrsQueue", "Typedef VidProps", "Typedef amdinfer::util::TimePoint", "Full API", "Full API", "Variable amdinfer::workers::kImageChannels", "Variable amdinfer::workers::kImageSize", "Variable amdinfer::workers::kImageHeight", "Variable amdinfer::workers::kImageWidth", "Variable amdinfer::workers::kAkdDetectResponseSize", "Variable kDefaultHttpPort", "Variable kDefaultDrogonThreads", "Variable kMaxModelNameSize", "Variable kDefaultGrpcPort", "Variable kMaxGrpcMessageSize", "Variable kMaxClientBodySize", "Variable amdinfer::kOutputLengths", "Variable amdinfer::kInputLengths", "Variable amdinfer::kInputTensors", "Variable amdinfer::kOutputTensors", "Variable amdinfer::util::kThreadPoolLength", "Variable amdinfer::kOutputLengths", "Variable amdinfer::kInputTensors", "Variable amdinfer::kOutputTensors", "Variable amdinfer::kInputLengths", "Variable amdinfer::pre_post::kDefaultImageSize", "Variable amdinfer::workers::kMaxImageHeight", "Variable amdinfer::workers::kMaxImageChannels", "Variable amdinfer::workers::kMaxImageWidth", "Variable amdinfer::workers::kMaxUrlLength", "Variable usr_interrupt", "Variable amdinfer::kPercentile90", "Variable amdinfer::kPercentile99", "Variable amdinfer::kPercentile50", "Variable kOutputTensors", "Variable kInputTensors", "Variable kOutputLengths", "Variable kInputLengths", "Variable amdinfer::kNumTraceData", "Variable amdinfer::kDefaultCpuBlockSize", "Variable amdinfer::workers::kResNetImageSize", "Variable amdinfer::workers::kResNetImageChannels", "Variable amdinfer::workers::kResNetOutputClasses", "Variable amdinfer::workers::kImageSize", "Variable amdinfer::workers::kImageWidthStr", "Variable amdinfer::workers::kBoxHeight", "Variable amdinfer::workers::kBoxHeightStr", "Variable amdinfer::workers::kResnetClassifications", "Variable kDefaultTimeout", "Variable amdinfer::util::is_any_v", "Variable kAmdinferVersionMajor", "Variable kAmdinferVersionLabel", "Variable kAmdinferVersionPatch", "Variable kAmdinferVersionMinor", "Variable kAmdinferVersion", "Variable amdinfer::kNumBufferAuto", "C++", "Dependencies", "Docker", "Running ResNet50 - C++", "Running ResNet50 - Python", "Glossary", "Hello World - Python", "AMD Inference Server", "Introduction", "KServe", "&lt;no title&gt;", "Logs", "Metrics", "GPUs - MIGraphX", "Performance", "Performance Factors", "Platforms", "Python", "Quickstart - Deployment", "Quickstart - Development", "Quickstart - Inference", "REST Endpoints", "Roadmap", "Tracing", "FPGAs - Vitis AI", "CPUs - ZenDNN"], "terms": {"can": [0, 1, 2, 4, 5, 37, 38, 66, 69, 95, 537, 544, 546, 554, 563, 565, 574, 578, 581, 595, 614, 615, 619, 640, 645, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771], "end": [0, 3, 5, 7, 8, 67, 337, 339, 448, 497, 498, 504, 505, 506, 512, 519, 521, 522, 532, 537, 544, 546, 551, 553, 556, 557, 560, 563, 565, 568, 570, 574, 587, 593, 599, 604, 606, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 752, 754, 766, 771], "requir": [0, 1, 2, 3, 30, 329, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 748, 749, 759, 761, 767, 770, 771], "three": [0, 1, 761], "thing": [0, 5], "backend": [0, 1, 2, 3, 66, 746, 749, 750, 754, 765], "graph": [0, 1, 300, 302, 610, 623, 625, 747, 754, 758, 760], "run": [0, 2, 3, 8, 40, 62, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 149, 159, 243, 244, 346, 347, 505, 506, 507, 509, 525, 531, 537, 544, 563, 566, 567, 581, 583, 594, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693, 746, 747, 748, 754, 755, 757, 758, 759, 760, 761, 763, 764, 767, 769, 770], "kernel": [0, 71, 178, 468, 501, 532, 533, 560, 561, 585, 625, 694, 747, 751], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 26, 30, 34, 37, 38, 40, 66, 72, 77, 79, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 437, 512, 515, 517, 519, 525, 529, 563, 581, 593, 614, 619, 635, 640, 645, 746, 747, 748, 749, 750, 752, 754, 755, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771], "instal": [0, 5, 747, 748, 750, 752, 755, 759, 765, 766, 768, 770], "contain": [0, 1, 3, 4, 5, 26, 34, 38, 66, 77, 108, 147, 174, 206, 216, 233, 234, 239, 244, 258, 260, 288, 291, 293, 294, 296, 297, 298, 302, 303, 337, 339, 437, 474, 497, 529, 539, 557, 562, 567, 581, 583, 611, 613, 614, 616, 617, 618, 619, 620, 621, 622, 625, 693, 694, 746, 747, 749, 750, 752, 758, 759, 763, 764, 765, 766, 767, 769, 770], "repositori": [0, 1, 5, 26, 34, 38, 66, 70, 74, 77, 419, 422, 525, 554, 555, 565, 584, 746, 749, 750, 752, 754, 755, 763, 765, 766, 767, 770, 771], "sampl": [0, 755, 758, 766, 771], "mai": [0, 1, 2, 4, 5, 9, 70, 454, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 682, 686, 746, 747, 748, 749, 750, 752, 755, 761, 763, 764, 765, 766, 767, 768], "thi": [0, 1, 2, 3, 4, 5, 9, 26, 30, 34, 35, 37, 38, 39, 40, 45, 53, 54, 55, 59, 62, 65, 66, 67, 69, 70, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 91, 161, 432, 434, 437, 454, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 636, 640, 645, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 770, 771], "refer": [0, 1, 2, 523, 526, 619, 748, 755, 766, 771], "materi": 0, "i": [0, 1, 2, 3, 4, 5, 7, 8, 26, 34, 35, 37, 38, 39, 40, 45, 53, 54, 55, 59, 62, 65, 66, 67, 69, 73, 77, 78, 79, 82, 87, 88, 90, 92, 94, 96, 97, 98, 99, 101, 103, 104, 105, 161, 221, 222, 330, 334, 335, 336, 342, 356, 414, 415, 416, 432, 434, 454, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 631, 636, 640, 643, 645, 746, 747, 748, 749, 750, 753, 754, 755, 757, 758, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771], "avail": [0, 1, 4, 563, 614, 749, 750, 752, 754, 755, 758, 759, 761, 764, 765, 766, 767, 770], "extern": [0, 346, 566, 567, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 747, 752, 770], "ar": [0, 1, 2, 3, 4, 5, 26, 30, 66, 67, 77, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 247, 248, 330, 333, 525, 537, 544, 548, 563, 570, 581, 594, 595, 614, 619, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 760, 761, 763, 764, 765, 766, 767, 768, 770], "defin": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 170, 175, 183, 185, 187, 189, 193, 195, 197, 201, 204, 207, 210, 213, 220, 222, 235, 236, 241, 247, 248, 250, 252, 259, 261, 267, 275, 284, 286, 289, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 527, 530, 533, 536, 538, 543, 545, 547, 548, 550, 552, 555, 558, 559, 561, 564, 569, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 582, 584, 586, 588, 589, 590, 592, 593, 595, 597, 598, 600, 601, 603, 604, 605, 607, 608, 609, 612, 614, 615, 616, 617, 620, 623, 624, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 752, 754, 755, 757, 761, 763, 764, 766, 770], "json": [0, 2, 3, 67, 77, 108, 202, 203, 204, 208, 209, 237, 260, 264, 265, 373, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 399, 525, 526, 527, 531, 532, 560, 583, 584, 587, 588, 610, 611, 613, 619, 621, 622, 637, 638, 641, 693, 746, 747, 760, 763, 767], "repres": [0, 1, 7, 98, 581, 750, 752], "an": [0, 1, 2, 3, 4, 5, 9, 26, 34, 38, 40, 45, 50, 53, 54, 55, 62, 66, 67, 69, 72, 73, 77, 80, 82, 83, 88, 93, 94, 98, 99, 100, 102, 103, 106, 346, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 640, 645, 702, 740, 742, 743, 746, 747, 748, 751, 752, 753, 754, 758, 760, 763, 764, 765, 766, 767, 769], "acycl": 0, "comput": [0, 1, 324, 444, 594, 595, 747, 754, 761], "perform": [0, 3, 105, 439, 602, 620, 749, 750, 752, 755, 763, 764, 768], "work": [0, 1, 4, 70, 105, 270, 512, 519, 563, 574, 583, 619, 746, 749, 755, 761, 763, 765, 766, 768, 771], "two": [0, 1, 3, 91, 97, 546, 572, 645, 747, 749, 750, 755, 765, 768], "part": [0, 1, 2, 5, 619, 750, 752, 763, 768], "sourc": [0, 1, 3, 5, 161, 747, 749, 750, 751, 753, 754, 765], "definit": [0, 1, 575, 619, 694, 755], "provid": [0, 1, 4, 5, 26, 34, 38, 45, 53, 54, 55, 66, 67, 69, 73, 77, 251, 574, 583, 620, 623, 746, 749, 750, 752, 754, 755, 758, 761, 763, 764, 766, 767, 768], "implement": [0, 1, 3, 5, 8, 9, 26, 34, 38, 45, 53, 54, 66, 67, 69, 77, 182, 183, 184, 185, 186, 187, 188, 190, 192, 194, 196, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 219, 221, 230, 233, 234, 240, 242, 243, 244, 245, 247, 251, 258, 260, 266, 270, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 454, 581, 614, 615, 616, 619, 620, 645, 746, 747, 749, 750, 766, 767], "while": [0, 1, 5, 507, 509, 521, 531, 537, 544, 563, 565, 574, 581, 591, 594, 595, 596, 599, 604, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 748, 752, 755, 758, 769], "file": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 755, 757, 758, 763, 764, 765, 767, 770, 771], "metadata": [0, 1, 7, 26, 32, 34, 38, 62, 66, 77, 79, 150, 156, 355, 378, 379, 521, 522, 523, 524, 525, 526, 527, 532, 537, 538, 539, 540, 544, 557, 560, 562, 581, 583, 613, 620, 622, 623, 635, 746, 752, 755, 763, 764, 767], "alreadi": [0, 1, 5, 26, 34, 38, 66, 67, 77, 563, 568, 581, 614, 645, 746, 748, 749, 750, 761, 763, 765, 767, 770], "worker": [0, 2, 3, 7, 8, 26, 32, 34, 37, 38, 40, 66, 71, 72, 77, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 137, 159, 161, 173, 175, 187, 189, 221, 227, 240, 241, 246, 303, 304, 305, 306, 325, 330, 333, 335, 344, 345, 406, 407, 418, 436, 438, 440, 452, 459, 460, 461, 462, 468, 485, 486, 487, 488, 489, 507, 509, 522, 525, 528, 529, 531, 532, 533, 537, 538, 544, 545, 554, 560, 561, 563, 564, 570, 581, 583, 584, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 693, 694, 745, 746, 747, 748, 760, 763, 767], "aks_detect": [0, 93, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 248, 252, 267, 270, 277, 282, 284, 290, 301, 303, 305, 613, 644, 694, 695, 696, 697, 698, 699], "cpp": [0, 1, 2, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 35, 36, 39, 41, 42, 43, 46, 47, 48, 49, 52, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 122, 123, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 201, 204, 207, 210, 213, 215, 220, 222, 224, 227, 229, 232, 235, 236, 238, 241, 246, 248, 249, 252, 259, 261, 263, 265, 267, 269, 270, 272, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 289, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 452, 453, 456, 457, 458, 459, 460, 461, 462, 543, 626, 627, 628, 631, 633, 638, 639, 641, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 691, 694, 695, 696, 697, 698, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 747, 749, 757], "resnet50": [0, 93, 105, 108, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 248, 252, 267, 270, 277, 282, 284, 301, 303, 438, 475, 619, 622, 693, 694, 747, 752, 760, 761, 764, 766], "These": [0, 1, 2, 4, 5, 26, 749, 750, 755, 759, 760, 763, 764, 765, 766, 768, 770, 771], "good": [0, 619, 755], "exampl": [0, 1, 3, 4, 5, 563, 614, 619, 747, 748, 749, 750, 752, 754, 755, 759, 761, 763, 764, 765, 767, 770, 771], "how": [0, 1, 3, 8, 77, 189, 221, 222, 247, 248, 595, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 761, 763, 766, 768, 769], "incorpor": [0, 1], "need": [0, 1, 2, 5, 9, 30, 34, 38, 66, 77, 324, 329, 492, 498, 515, 517, 523, 525, 526, 529, 537, 544, 563, 575, 581, 583, 589, 614, 619, 625, 645, 746, 747, 748, 749, 750, 752, 755, 758, 759, 761, 763, 764, 765, 766, 768, 770, 771], "pass": [0, 1, 4, 5, 72, 88, 490, 574, 619, 746, 748, 749, 750, 759, 763, 765, 770, 771], "path": [0, 1, 2, 4, 64, 70, 71, 74, 94, 99, 103, 106, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 231, 232, 373, 376, 400, 458, 468, 502, 525, 554, 555, 560, 561, 563, 565, 578, 585, 610, 611, 613, 614, 619, 620, 621, 622, 623, 625, 693, 746, 748, 749, 750, 755, 763, 764, 765, 770, 771], "inform": [0, 1, 2, 5, 40, 53, 62, 161, 240, 241, 286, 529, 640, 746, 747, 748, 754, 755, 763, 765, 766, 767, 768], "hard": [0, 3, 37, 138, 161, 168, 169, 178, 183, 191, 220, 227, 236, 241, 248, 252, 278, 282, 291, 292, 293, 296, 297, 300, 303, 614, 615, 616, 619, 620, 623, 694], "code": [0, 1, 2, 5, 158, 161, 250, 512, 519, 525, 554, 599, 619, 747, 748, 751, 753, 767], "user": [0, 1, 3, 4, 26, 34, 38, 66, 77, 106, 583, 595, 746, 747, 754, 758, 763, 764, 765, 766, 768, 769, 771], "load": [0, 1, 2, 3, 4, 26, 32, 34, 38, 66, 70, 77, 79, 150, 156, 525, 537, 538, 544, 545, 554, 560, 563, 565, 578, 583, 584, 585, 614, 619, 620, 623, 746, 748, 755, 761, 763, 764, 766, 767, 771], "time": [0, 1, 2, 3, 4, 5, 26, 34, 38, 40, 66, 77, 91, 570, 606, 607, 619, 620, 623, 746, 748, 749, 750, 752, 755, 757, 758, 761, 763, 769, 770], "when": [0, 1, 3, 5, 87, 574, 581, 599, 623, 747, 748, 754, 755, 757, 760, 764, 765], "request": [0, 1, 2, 3, 7, 8, 26, 32, 34, 37, 38, 40, 45, 50, 53, 54, 66, 71, 72, 77, 79, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 175, 189, 230, 234, 235, 236, 330, 331, 333, 348, 364, 371, 377, 391, 430, 457, 485, 486, 487, 488, 489, 503, 504, 505, 506, 507, 509, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 544, 546, 551, 559, 560, 561, 570, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 634, 635, 640, 705, 746, 747, 752, 754, 760, 763, 764, 765, 766, 767, 769, 770], "receiv": [0, 1, 105, 330, 563, 583, 746, 761, 767], "must": [0, 1, 8, 26, 34, 38, 66, 67, 70, 77, 565, 568, 583, 593, 594, 595, 617, 619, 746, 748, 752, 755, 757, 763, 764, 765, 766, 767, 770, 771], "eventu": [0, 1, 5, 625], "enqueu": [0, 1, 3, 8, 505, 506, 507, 509, 519, 528, 531, 532, 537, 544, 563, 581, 595, 613, 761], "job": [0, 1, 4], "": [0, 1, 2, 3, 4, 5, 8, 37, 40, 45, 50, 53, 54, 55, 62, 72, 73, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 454, 525, 537, 544, 546, 563, 574, 581, 583, 589, 591, 595, 599, 617, 619, 746, 747, 748, 749, 750, 752, 753, 754, 755, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771], "manag": [0, 1, 3, 5, 79, 150, 156, 209, 240, 241, 275, 532, 537, 564, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 679, 747, 770], "pars": [0, 1, 3, 87, 242, 342, 356, 414, 415, 416, 531, 532, 554, 560, 565, 583, 587, 619, 747], "respons": [0, 1, 3, 22, 40, 53, 77, 170, 175, 235, 236, 330, 333, 352, 357, 366, 388, 399, 492, 498, 521, 522, 523, 524, 525, 526, 528, 529, 531, 532, 539, 540, 557, 560, 570, 581, 583, 587, 611, 612, 614, 617, 619, 620, 621, 623, 625, 746, 749, 750, 755, 761, 763, 766, 767], "vari": 0, "depend": [0, 1, 3, 5, 26, 34, 38, 66, 77, 623, 746, 748, 749, 750, 752, 754, 755, 761, 763, 764, 765, 766, 767, 770, 771], "being": [0, 5, 537, 544], "execut": [0, 1, 2, 3, 66, 105, 242, 346, 746, 747, 748, 749, 750, 755, 758, 761, 764, 765, 769, 770], "last": [0, 1, 4, 40, 67, 537, 544, 574, 604, 746], "determin": [0, 1, 5, 755, 764], "output": [0, 1, 3, 7, 8, 27, 31, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 65, 68, 76, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 324, 325, 329, 344, 345, 346, 353, 360, 361, 372, 384, 389, 398, 401, 402, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 439, 440, 442, 452, 460, 461, 462, 492, 493, 498, 503, 504, 507, 509, 522, 523, 526, 529, 539, 540, 554, 557, 566, 567, 570, 578, 581, 583, 587, 596, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 629, 638, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 749, 750, 752, 755, 760, 763, 764, 766, 771], "format": [0, 1, 2, 3, 26, 34, 38, 66, 77, 554, 565, 619, 746, 747, 748, 752, 755, 763, 764, 767], "thu": [0, 1, 761, 768], "unless": [0, 5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "gener": [0, 1, 2, 3, 4, 747, 748, 749, 750, 759, 763, 765, 766, 770, 771], "you": [0, 1, 2, 5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747, 748, 749, 750, 752, 753, 754, 755, 759, 761, 763, 764, 765, 766, 767, 770, 771], "per": [0, 62, 490, 611, 612, 746, 755, 760, 767], "To": [0, 1, 161, 748, 752, 753, 755, 759, 763, 765, 766, 770, 771], "new": [0, 1, 5, 8, 29, 30, 34, 37, 38, 40, 45, 50, 53, 54, 55, 62, 66, 67, 70, 72, 75, 77, 79, 87, 91, 149, 159, 492, 493, 498, 505, 506, 509, 537, 544, 565, 574, 581, 587, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 748, 753, 754, 761, 763, 765], "workload": 0, "first": [0, 1, 2, 67, 509, 515, 517, 526, 545, 571, 574, 583, 599, 610, 611, 613, 619, 621, 622, 625, 746, 752, 754, 755, 759, 765, 766], "ani": [0, 1, 4, 67, 105, 433, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 643, 746, 747, 748, 749, 750, 752, 754, 755, 761, 763, 764, 765, 766, 770, 771], "Then": [0, 1, 749, 750, 752, 765, 766], "write": [0, 3, 4, 9, 22, 67, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 749, 754, 766], "describ": [0, 2, 73, 761, 763, 765], "desir": [0, 764], "dataflow": 0, "document": [0, 3, 4, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693, 694, 747, 748, 753, 755, 758, 765, 766, 768], "more": [0, 1, 2, 3, 5, 544, 619, 625, 748, 749, 750, 752, 754, 755, 761, 765, 766, 768], "about": [0, 5, 454, 748, 753, 754, 755, 758, 760, 765, 766, 767, 768], "step": [0, 1, 5, 611, 613, 621, 748, 759, 763, 766], "next": [0, 3, 546, 581, 594, 604, 613, 618, 622, 759], "handl": [0, 1, 3, 87, 327, 563, 581, 614, 615, 619, 623, 749, 750], "reus": [0, 34, 77, 746, 765], "exist": [0, 1, 4, 26, 32, 34, 38, 40, 53, 66, 67, 70, 77, 150, 156, 537, 538, 544, 545, 554, 563, 565, 619, 620, 746, 748, 754, 755, 761, 763, 764, 766, 767], "compat": [0, 1, 378, 763, 766, 770], "architectur": [0, 765], "server": [1, 2, 3, 4, 5, 26, 30, 34, 38, 62, 66, 77, 80, 81, 87, 89, 108, 119, 120, 132, 137, 160, 161, 163, 164, 165, 166, 168, 189, 199, 202, 205, 208, 209, 210, 222, 238, 242, 246, 252, 303, 331, 334, 378, 394, 395, 439, 441, 442, 443, 468, 483, 488, 505, 506, 523, 525, 528, 532, 538, 543, 545, 554, 560, 565, 566, 567, 568, 569, 570, 581, 582, 583, 584, 586, 587, 588, 619, 623, 624, 635, 693, 694, 700, 703, 747, 748, 754, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771], "fig": 1, "1": [1, 4, 5, 8, 28, 34, 38, 77, 91, 92, 96, 101, 104, 105, 414, 490, 506, 512, 515, 517, 519, 521, 525, 526, 528, 531, 532, 537, 544, 547, 549, 552, 554, 556, 560, 563, 564, 565, 566, 567, 571, 574, 578, 580, 581, 583, 593, 594, 599, 604, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 706, 707, 711, 714, 726, 727, 729, 745, 746, 747, 749, 750, 752, 755, 758, 759, 760, 761, 763, 764, 766, 767, 769, 770], "show": [1, 4, 749, 750, 753, 764, 765, 766], "high": [1, 105], "level": [1, 410, 521, 568, 585, 755, 757, 761], "view": [1, 758, 769], "At": [1, 583, 623], "top": [1, 347, 439, 574, 577, 749, 750, 755, 760], "we": [1, 67, 492, 498, 529, 537, 544, 563, 574, 578, 581, 583, 587, 611, 613, 614, 618, 619, 621, 622, 625, 645, 746, 749, 752, 755, 760, 761, 768], "have": [1, 5, 34, 38, 66, 77, 507, 509, 529, 594, 617, 619, 746, 748, 749, 750, 752, 754, 755, 757, 760, 765, 766, 767, 768, 770], "client": [1, 3, 34, 38, 40, 53, 62, 66, 77, 80, 81, 87, 94, 99, 103, 108, 132, 137, 160, 161, 168, 169, 170, 173, 175, 176, 178, 209, 210, 246, 258, 260, 303, 330, 331, 332, 333, 334, 335, 468, 483, 486, 487, 488, 489, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 568, 569, 581, 583, 614, 615, 616, 619, 693, 694, 747, 748, 753, 754, 755, 761, 763, 764, 766], "who": [1, 5, 764, 765, 766], "make": [1, 2, 3, 5, 26, 34, 38, 66, 77, 87, 330, 333, 525, 554, 581, 619, 640, 746, 747, 752, 753, 754, 759, 761, 763, 764, 765, 766, 767, 768, 770], "us": [1, 2, 3, 4, 5, 8, 26, 29, 34, 38, 40, 53, 66, 67, 70, 77, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 150, 156, 158, 167, 170, 175, 189, 200, 201, 203, 204, 206, 207, 209, 210, 213, 230, 234, 235, 236, 395, 432, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 640, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 671, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 700, 701, 702, 703, 746, 747, 748, 749, 750, 752, 753, 754, 755, 758, 759, 761, 763, 764, 765, 767, 768, 769, 770, 771], "made": [1, 5, 189, 563, 614, 752, 766, 767, 768], "particular": [1, 5, 67, 79, 746, 749, 755, 763, 764], "activ": [1, 4, 5, 26, 34, 38, 66, 70, 77, 240, 241, 565, 574, 746, 752, 761, 763, 768], "each": [1, 2, 30, 98, 240, 241, 330, 556, 619, 645, 746, 749, 750, 752, 754, 755, 761, 763, 764, 765, 766], "batcher": [1, 3, 7, 37, 72, 79, 105, 108, 138, 149, 161, 174, 178, 181, 184, 185, 186, 187, 189, 209, 214, 220, 227, 236, 240, 241, 246, 252, 278, 287, 288, 290, 294, 295, 298, 299, 302, 303, 468, 508, 509, 510, 532, 537, 563, 564, 570, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 648, 649, 693, 694, 749, 761], "associ": [1, 7, 26, 30, 34, 38, 40, 53, 62, 66, 67, 70, 77, 79, 106, 174, 233, 275, 347, 593, 746, 752, 755, 763, 764, 766], "target": [1, 4, 8, 619, 748, 755], "independ": [1, 5, 581], "its": [1, 5, 26, 30, 34, 38, 40, 66, 67, 77, 563, 581, 589, 614, 619, 623, 746, 747, 748, 749, 750, 763, 766, 767, 770], "origin": [1, 5, 583, 594, 595, 599, 747], "combin": [1, 765], "individu": [1, 757], "within": 1, "respond": [1, 40, 53, 108, 291, 475, 614, 615, 616, 619, 693, 746, 767], "intern": [1, 3, 30, 200, 201, 203, 204, 206, 207, 212, 213, 235, 236, 746, 754, 768], "leverag": [1, 754], "logic": [1, 770], "librari": [1, 3, 83, 106, 270, 453, 563, 575, 614, 619, 623, 746, 747, 748, 750, 754, 755, 760, 765, 771], "viti": [1, 3, 4, 106, 121, 302, 532, 560, 625, 747, 748, 749, 750, 754, 762, 764, 765, 766, 768], "ai": [1, 3, 4, 106, 302, 625, 747, 748, 749, 754, 762, 768], "machin": [1, 581, 753, 754, 760, 761, 764], "learn": [1, 753, 754], "framework": [1, 300, 623, 747, 755], "flexibl": 1, "enabl": [1, 4, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 521, 565, 568, 585, 747, 748, 755, 759, 761, 764, 765, 768, 770, 771], "take": [1, 5, 50, 581, 619, 746, 747, 761, 768], "advantag": 1, "hardwar": [1, 5, 26, 34, 38, 66, 77, 105, 525, 584, 746, 754, 755, 763, 764, 765, 767], "acceler": [1, 751, 754], "appropri": [1, 5, 748, 755, 757, 761, 765, 771], "same": [1, 3, 5, 66, 77, 333, 515, 517, 546, 563, 581, 596, 617, 746, 754, 761, 763, 765, 766, 768], "There": [1, 2, 45, 54, 55, 67, 69, 73, 454, 563, 614, 746, 747, 748, 749, 750, 755, 757, 761, 764, 765, 766, 770], "number": [1, 2, 3, 4, 9, 26, 29, 34, 38, 40, 66, 67, 73, 75, 77, 79, 90, 92, 96, 98, 101, 104, 330, 347, 439, 444, 490, 532, 560, 570, 594, 595, 611, 612, 613, 618, 619, 622, 623, 625, 701, 702, 737, 746, 747, 752, 755, 760, 761, 762, 763, 764, 768], "wai": [1, 2, 4, 512, 519, 525, 748, 749, 750, 755, 758, 760, 761, 764, 765, 766, 768, 769, 770], "get": [1, 2, 3, 5, 8, 9, 26, 28, 30, 34, 36, 38, 40, 45, 50, 53, 54, 55, 60, 61, 62, 66, 67, 73, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 347, 493, 497, 498, 503, 505, 507, 509, 515, 517, 521, 522, 525, 526, 528, 529, 531, 537, 538, 540, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 563, 568, 569, 570, 574, 581, 583, 584, 587, 588, 593, 594, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 748, 749, 750, 752, 753, 760, 761, 763, 767, 768], "data": [1, 2, 3, 9, 29, 30, 40, 45, 50, 54, 55, 67, 69, 73, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 167, 189, 213, 307, 347, 408, 439, 444, 490, 492, 493, 497, 498, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 526, 527, 528, 529, 532, 539, 540, 541, 546, 549, 556, 557, 560, 562, 567, 572, 574, 578, 579, 580, 581, 583, 587, 589, 591, 596, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 628, 746, 747, 749, 750, 752, 760, 761, 763, 765, 766], "system": [1, 596, 747, 759, 769], "infer": [1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 32, 34, 35, 38, 40, 45, 50, 53, 54, 66, 77, 87, 89, 108, 170, 175, 189, 199, 200, 201, 209, 210, 230, 234, 235, 236, 258, 330, 333, 348, 349, 350, 352, 355, 357, 367, 370, 420, 421, 468, 498, 522, 523, 524, 525, 530, 531, 537, 538, 540, 554, 560, 565, 581, 584, 588, 619, 623, 625, 671, 693, 746, 747, 748, 754, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771], "In": [1, 581, 747, 748, 749, 750, 752, 758, 760, 764, 765, 767, 769, 770], "protocol": [1, 3, 749, 750, 752, 754, 755, 766], "ha": [1, 5, 26, 34, 38, 66, 67, 72, 77, 331, 497, 509, 537, 544, 554, 556, 563, 572, 583, 596, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 748, 752, 754, 761, 763, 764, 766, 767], "custom": [1, 3, 635, 746, 754, 763], "interfac": [1, 27, 31, 33, 86, 153, 182, 207, 209, 530, 532, 533, 751, 754, 758, 769], "explicit": [1, 8, 9, 28, 30, 34, 35, 37, 38, 39, 45, 53, 55, 66, 72, 87, 90, 91, 486, 487, 488, 490, 492, 493, 494, 498, 506, 512, 522, 523, 525, 526, 530, 545, 547, 552, 569, 574, 575, 584, 588, 595, 607, 746, 750], "accept": [1, 2, 5, 40, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 619, 746, 748, 749, 750, 752, 761], "after": [1, 4, 40, 347, 581, 619, 746, 748, 749, 750, 752, 763, 765, 770, 771], "support": [1, 3, 5, 26, 30, 34, 38, 66, 77, 258, 554, 581, 614, 617, 618, 619, 625, 635, 645, 746, 747, 748, 749, 755, 761, 762, 763, 764, 765, 766, 767, 768], "handler": [1, 87, 535], "convert": [1, 91, 378, 380, 386, 390, 509, 515, 517, 583, 747, 749, 750, 771], "incom": [1, 3, 8, 37, 72, 87, 105, 106, 230, 234, 570, 581, 749, 754, 755, 761], "inferencerequest": [1, 26, 34, 38, 66, 77, 108, 169, 175, 200, 201, 205, 206, 258, 330, 333, 348, 377, 391, 457, 468, 485, 486, 487, 488, 489, 492, 498, 501, 507, 509, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539, 540, 543, 557, 581, 583, 587, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 653, 693, 746, 749, 750, 752, 763, 766], "object": [1, 3, 8, 9, 26, 29, 30, 34, 37, 38, 40, 45, 50, 53, 54, 55, 62, 66, 67, 69, 70, 72, 73, 75, 77, 79, 91, 105, 170, 174, 175, 200, 201, 203, 204, 206, 207, 230, 233, 234, 235, 236, 289, 330, 331, 333, 334, 335, 380, 386, 390, 492, 493, 498, 523, 525, 537, 538, 544, 545, 563, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 645, 746, 763, 766, 767], "plu": [1, 556, 593], "some": [1, 2, 3, 5, 26, 77, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 454, 515, 517, 583, 594, 595, 602, 620, 640, 746, 748, 749, 750, 755, 759, 760, 763, 765, 767, 770], "pack": 1, "requestcontain": [1, 8, 32, 37, 71, 72, 108, 236, 468, 501, 528, 537, 538, 559, 560, 561, 581, 583, 587, 655, 693], "project": [1, 3, 4, 5, 27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747, 753, 754, 755], "base": [1, 2, 3, 4, 5, 8, 9, 26, 40, 53, 108, 162, 182, 183, 219, 220, 515, 517, 574, 619, 693, 746, 749, 751, 752, 754, 763, 764, 765, 766, 767, 768], "kserv": [1, 3, 26, 30, 40, 53, 62, 67, 554, 619, 635, 746, 748, 749, 752, 754, 763, 767, 768], "v2": [1, 3, 40, 53, 525, 584, 619, 746, 747, 752, 754, 755, 758, 760, 764, 767], "specif": [1, 26, 30, 34, 38, 66, 77, 329, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 635, 746, 747, 748, 749, 750, 752, 754, 755, 763, 765, 766, 767], "where": [1, 581, 595, 747, 749, 750, 755, 763, 764, 770], "possibl": [1, 4, 454, 596], "endpoint": [1, 3, 8, 37, 58, 64, 72, 74, 108, 141, 150, 161, 168, 173, 174, 175, 183, 220, 222, 227, 231, 236, 237, 238, 241, 246, 278, 282, 303, 468, 522, 544, 545, 554, 555, 560, 561, 581, 583, 640, 666, 693, 694, 702, 748, 749, 750, 752, 755, 760, 764, 766], "differ": [1, 2, 3, 5, 77, 563, 570, 599, 614, 619, 746, 749, 750, 753, 754, 755, 757, 763, 764, 765, 766, 768], "categori": [1, 737], "health": [1, 525, 584, 767], "predict": [1, 619, 620, 623, 764], "check": [1, 5, 26, 34, 38, 53, 62, 66, 67, 70, 77, 331, 445, 448, 581, 613, 618, 619, 622, 625, 643, 645, 746, 747, 752, 758, 763], "readi": [1, 26, 32, 34, 38, 62, 66, 77, 150, 156, 334, 335, 496, 498, 521, 522, 525, 537, 538, 544, 545, 553, 557, 560, 583, 584, 613, 620, 622, 623, 746, 748, 749, 750, 752, 763, 767, 770], "singl": [1, 92, 96, 101, 104, 619, 749, 750, 752, 764], "expos": [1, 748, 758, 765], "collect": [1, 113, 247, 570, 571, 757, 758, 760, 769], "prometheu": [1, 247, 248, 570, 571, 721, 722, 723, 747, 755, 758, 767], "For": [1, 5, 9, 563, 614, 619, 620, 748, 749, 750, 752, 754, 755, 761, 763, 764, 765, 766, 771], "unload": [1, 4, 26, 32, 34, 38, 66, 77, 79, 150, 156, 525, 537, 538, 544, 545, 554, 560, 563, 564, 583, 584, 746, 752, 760, 763, 767], "control": [1, 583, 591, 747, 755, 761, 763, 765], "which": [1, 2, 5, 9, 105, 329, 525, 563, 575, 581, 619, 620, 640, 747, 748, 749, 750, 755, 757, 761, 763, 764, 765, 766, 768, 770], "mani": [1, 5, 77, 563, 595, 614, 746, 749, 754, 755, 761, 763], "instanc": [1, 30, 36, 79, 341, 545, 571, 581, 619, 746, 754], "option": [1, 2, 400, 409, 490, 521, 563, 565, 568, 569, 574, 575, 578, 584, 585, 614, 619, 623, 747, 749, 755, 758, 763, 765, 767], "set": [1, 4, 8, 26, 40, 45, 50, 53, 54, 55, 62, 70, 73, 82, 91, 454, 523, 525, 554, 563, 565, 568, 569, 570, 571, 574, 575, 585, 593, 610, 611, 614, 619, 621, 625, 704, 705, 746, 747, 748, 757, 761, 763, 766, 767], "paramet": [1, 8, 9, 26, 29, 30, 32, 34, 37, 38, 40, 45, 50, 53, 54, 55, 62, 66, 67, 69, 70, 71, 72, 73, 75, 77, 79, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 130, 134, 141, 160, 169, 170, 171, 172, 175, 183, 186, 199, 201, 204, 205, 206, 210, 214, 215, 231, 237, 240, 243, 244, 252, 258, 260, 275, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 320, 321, 322, 323, 324, 329, 330, 331, 333, 334, 335, 336, 341, 346, 347, 350, 353, 354, 360, 361, 380, 384, 386, 387, 389, 390, 395, 419, 420, 421, 422, 432, 434, 437, 439, 444, 445, 448, 454, 458, 468, 483, 485, 486, 487, 488, 489, 492, 493, 494, 498, 505, 506, 509, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 537, 538, 539, 540, 541, 544, 545, 554, 555, 557, 560, 561, 563, 564, 566, 567, 574, 575, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 643, 645, 681, 694, 746, 748, 749, 750, 760, 761, 763, 767], "On": [1, 755, 770], "success": [1, 583], "return": [1, 9, 26, 29, 30, 34, 38, 40, 45, 54, 55, 62, 66, 67, 69, 73, 75, 77, 79, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 320, 321, 322, 323, 324, 329, 330, 331, 333, 336, 341, 346, 347, 380, 386, 390, 432, 434, 437, 439, 445, 448, 458, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 635, 640, 643, 645, 737, 746, 749, 750, 752, 755, 763, 766, 767], "string": [1, 3, 4, 8, 26, 30, 32, 34, 36, 38, 39, 40, 45, 50, 53, 55, 62, 64, 66, 67, 71, 73, 74, 77, 78, 79, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 147, 162, 163, 164, 165, 166, 167, 169, 173, 174, 175, 176, 177, 178, 182, 183, 184, 186, 189, 195, 199, 200, 201, 204, 205, 206, 209, 210, 212, 215, 222, 231, 232, 237, 238, 240, 241, 242, 245, 246, 247, 248, 249, 251, 255, 258, 260, 261, 262, 264, 265, 266, 267, 269, 273, 274, 276, 277, 280, 282, 284, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 321, 322, 324, 325, 326, 327, 330, 331, 333, 335, 336, 344, 345, 346, 348, 350, 373, 376, 377, 383, 396, 400, 406, 407, 411, 418, 420, 421, 433, 436, 437, 438, 440, 445, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 468, 474, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 505, 506, 507, 509, 512, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 537, 538, 539, 540, 541, 544, 545, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 574, 578, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 596, 597, 599, 600, 602, 603, 605, 606, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 635, 640, 659, 663, 682, 686, 693, 694, 734, 736, 741, 744, 746, 748, 749, 750, 755, 761, 763, 766, 767], "correspond": [1, 8, 30, 37, 72, 92, 96, 98, 101, 104, 490, 581, 599, 746, 750, 753, 755, 764, 767], "should": [1, 5, 7, 9, 26, 34, 38, 45, 54, 55, 66, 67, 69, 73, 77, 79, 105, 189, 330, 454, 507, 509, 515, 517, 523, 554, 563, 578, 581, 594, 595, 611, 613, 614, 615, 616, 619, 620, 621, 622, 623, 625, 640, 746, 749, 750, 752, 755, 761, 763, 764, 765, 766, 768, 770], "from": [1, 2, 3, 4, 5, 8, 9, 26, 27, 31, 33, 34, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 72, 76, 77, 79, 86, 106, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 329, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 437, 438, 439, 440, 442, 452, 460, 461, 462, 509, 529, 546, 554, 563, 581, 594, 595, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747, 748, 749, 750, 752, 755, 760, 761, 763, 764, 765, 766, 767, 768, 770, 771], "note": [1, 5, 37, 70, 454, 645, 746, 747, 748, 753, 760, 763], "usag": [1, 4, 5, 34, 38, 66, 77, 569, 581, 589, 746, 747, 749, 750, 766], "slightli": 1, "With": [1, 2, 749, 760], "onli": [1, 4, 37, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 563, 614, 619, 625, 747, 748, 749, 750, 752, 755, 763, 764, 765, 766, 771], "statu": [1, 10, 22, 23, 108, 144, 300, 303, 468, 519, 522, 525, 563, 581, 613, 622, 623, 693, 694, 767], "specifi": [1, 2, 4, 34, 38, 66, 77, 150, 156, 329, 330, 333, 583, 614, 746, 748, 749, 755], "It": [1, 2, 7, 77, 92, 96, 98, 101, 104, 619, 746, 748, 752, 763, 764], "also": [1, 2, 5, 563, 594, 595, 614, 619, 748, 749, 750, 752, 754, 755, 760, 765, 766, 768, 770], "doesn": [1, 67, 537, 544, 554, 574, 599, 746, 755, 763], "t": [1, 3, 4, 5, 9, 67, 91, 105, 107, 362, 363, 392, 393, 400, 401, 402, 415, 416, 432, 434, 439, 444, 497, 512, 523, 524, 526, 527, 529, 532, 537, 544, 554, 556, 558, 560, 563, 571, 574, 578, 579, 580, 581, 583, 589, 598, 599, 601, 607, 608, 615, 617, 619, 624, 626, 633, 637, 638, 641, 642, 643, 688, 739, 746, 748, 749, 750, 752, 755, 760, 761, 763, 765], "notion": 1, "our": [1, 5, 380, 386, 390, 537, 544, 546, 617, 768], "case": [1, 3, 97, 168, 490, 523, 525, 531, 535, 537, 544, 554, 568, 570, 578, 581, 614, 619, 746, 748, 752, 755, 760, 765, 770, 771], "result": [1, 2, 5, 26, 34, 38, 66, 77, 374, 444, 525, 565, 580, 595, 619, 746, 749, 750, 760, 761, 763, 766, 768], "potenti": [1, 304, 305, 306, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 418, 421, 423, 424, 425, 426, 427, 428, 436, 438, 440, 452, 460, 461, 462, 537, 544], "multipl": [1, 2, 3, 37, 40, 92, 96, 98, 101, 104, 537, 544, 563, 581, 613, 622, 746, 747, 748, 749, 750, 755, 757, 761, 764, 765, 766], "configur": [1, 2, 4, 5, 90, 563, 568, 747, 748, 755, 757, 758, 760, 764, 766, 770], "onc": [1, 4, 5, 330, 581, 619, 746, 748, 749, 750, 752, 755, 758, 759, 764, 765, 769], "maintain": [1, 5, 766, 768], "do": [1, 492, 498, 507, 509, 512, 519, 563, 591, 749, 750, 752, 755, 761, 765, 766, 768], "guarante": [1, 545, 571], "model": [1, 3, 4, 26, 34, 38, 53, 62, 66, 70, 71, 77, 87, 95, 97, 100, 137, 330, 333, 335, 348, 377, 419, 422, 485, 486, 487, 488, 489, 493, 498, 521, 522, 525, 528, 531, 532, 533, 540, 554, 555, 557, 560, 561, 565, 566, 567, 581, 583, 584, 587, 588, 614, 619, 620, 623, 625, 694, 702, 746, 747, 748, 749, 750, 752, 753, 754, 755, 760, 763, 765, 766, 767, 768], "therefor": [1, 594, 748], "free": [1, 546, 547, 548, 551, 552, 630, 764], "ignor": [1, 4, 9, 521, 529], "content": [1, 26, 34, 38, 66, 77, 523, 524, 581, 746, 752, 760, 763, 767], "without": [1, 4, 454, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 768], "error": [1, 3, 5, 40, 53, 67, 80, 342, 356, 383, 396, 414, 415, 416, 454, 493, 498, 521, 525, 531, 532, 540, 554, 560, 563, 565, 568, 569, 570, 581, 583, 587, 611, 613, 614, 617, 618, 619, 620, 621, 622, 746, 749, 750, 755, 757, 763, 767], "modelload": [1, 3, 26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 763], "behav": [1, 8, 599], "similarli": [1, 766], "expect": [1, 30, 77, 82, 342, 356, 414, 415, 416, 439, 444, 619, 746, 749, 750, 755, 763, 767], "intend": [1, 619, 749, 750, 752, 764, 765, 766], "current": [1, 4, 87, 91, 529, 546, 554, 581, 619, 753, 755, 764, 767], "version": [1, 3, 4, 5, 137, 209, 237, 303, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 635, 694, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 753, 755, 759, 760, 763, 765, 767, 770], "construct": [1, 3, 8, 29, 30, 34, 37, 38, 40, 45, 50, 53, 54, 55, 62, 66, 70, 72, 75, 77, 79, 91, 492, 493, 498, 544, 583, 587, 746, 752, 763, 766], "send": [1, 40, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 531, 581, 587, 619, 746, 749, 752, 763, 765, 766], "match": [1, 5, 304, 305, 306, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 418, 421, 423, 424, 425, 426, 427, 428, 436, 438, 440, 452, 460, 461, 462, 532, 546, 560, 599, 619, 755, 763, 764, 770], "equival": [1, 748], "function": [1, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 45, 50, 53, 54, 55, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 174, 175, 261, 272, 497, 498, 501, 509, 524, 527, 563, 583, 584, 594, 595, 596, 614, 619, 626, 630, 637, 638, 640, 641, 645, 651, 677, 678, 683, 694, 746, 747, 748, 749, 750, 755, 763], "drogon": [1, 38, 39, 77, 78, 87, 202, 203, 204, 208, 260, 265, 373, 374, 375, 376, 383, 385, 396, 397, 457, 525, 526, 527, 531, 583, 584, 587, 588, 677, 678, 701, 747, 761], "chose": 1, "web": [1, 3], "few": [1, 749, 750, 761, 770], "reason": [1, 640], "benchmark": [1, 3, 747, 761, 768], "techempow": 1, "unlik": [1, 537, 544, 748], "cppcm": 1, "treefrog": 1, "stabl": 1, "than": [1, 3, 546, 554, 619, 625, 645, 748, 752, 755, 765], "lithium": 1, "anoth": [1, 445, 448, 563, 614, 623, 752, 765, 766], "newer": [1, 759], "github": [1, 5, 619, 754, 758, 764, 765, 766, 768, 769], "releas": [1, 2, 4, 5, 105, 159, 563, 569, 619, 624, 758, 761, 763, 769], "pistach": 1, "variou": [1, 619, 760], "regist": [1, 570, 581], "along": [1, 748], "thread": [1, 4, 8, 79, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 147, 183, 184, 186, 198, 208, 214, 215, 221, 222, 231, 241, 258, 262, 263, 271, 272, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 454, 455, 505, 506, 507, 509, 521, 525, 531, 537, 538, 544, 545, 548, 554, 563, 564, 581, 585, 586, 594, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 701, 747, 752, 760], "callback": [1, 40, 175, 178, 468, 492, 498, 501, 528, 529, 539, 557, 581, 583, 584, 587, 694, 746], "avoid": [1, 5], "block": [1, 37, 79, 334, 335, 546, 565, 581, 619, 746, 747, 749, 750, 761, 765], "finit": 1, "long": [1, 5, 749, 750, 752], "asynchron": [1, 26, 34, 38, 66, 77, 525, 581, 594, 595, 746, 749, 750, 761], "push": [1, 4, 7, 8, 90, 521, 577, 595, 613, 622, 625, 761], "safe": [1, 548, 594], "lock": [1, 546, 551, 570, 594, 595], "multi": [1, 97, 747, 755], "produc": [1, 7, 97, 324, 581, 747], "consum": [1, 581, 761], "queue": [1, 3, 8, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 147, 178, 183, 184, 186, 191, 197, 198, 215, 222, 241, 254, 290, 291, 293, 296, 299, 302, 303, 506, 507, 509, 514, 520, 521, 537, 538, 544, 545, 564, 570, 577, 581, 594, 595, 613, 614, 616, 619, 622, 625, 687, 688, 689, 690, 694, 747, 761], "go": [1, 752], "src": [1, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 758], "amdinf": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 72, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 115, 122, 123, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 303, 304, 305, 306, 325, 344, 345, 406, 407, 412, 413, 418, 423, 425, 426, 428, 436, 438, 440, 452, 460, 461, 462, 480, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 667, 668, 669, 670, 672, 673, 691, 693, 694, 720, 724, 725, 726, 727, 738, 746, 747, 748, 749, 750, 752, 755, 757, 758, 759, 761, 763, 765, 766, 770, 771], "http_server": [1, 146, 161, 168, 169, 170, 174, 189, 204, 210, 220, 235, 236, 238, 246, 248, 252, 262, 264, 265, 269, 270, 281, 303, 394, 395, 396, 397, 398, 399, 585, 587, 678, 694, 757], "experiment": [1, 3, 195, 518, 552], "video": [1, 4, 87, 94, 99, 103, 613, 618, 622, 747, 760, 765], "certain": [1, 2, 331, 619, 746], "url": [1, 537, 544, 618, 753, 755, 767], "retriev": [1, 67, 746, 747, 763], "analyz": [1, 2, 595, 596], "frame": [1, 94, 99, 103, 613, 618, 622], "back": [1, 5, 40, 53, 94, 99, 103, 529, 551, 581, 614, 615, 616, 619, 624, 625, 640, 746, 749, 750, 752], "subject": [1, 747, 768], "chang": [1, 2, 5, 30, 489, 594, 595, 619, 623, 746, 755, 758, 761, 768], "websocket_serv": [1, 86, 87, 146, 161, 168, 169, 170, 178, 220, 222, 235, 236, 238, 246, 252, 260, 261, 303, 457, 583, 694], "through": [1, 5, 535, 563, 581, 620, 640, 749, 750, 752, 753, 769], "dynam": [1, 79, 747], "keep": [1, 3, 4, 505, 523, 524, 526, 532, 581], "track": [1, 3, 5, 565], "embed": [1, 751], "insid": [1, 599, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 765, 766], "A": [1, 5, 70, 619, 640, 746, 754, 755, 758, 763, 766, 767], "pointer": [1, 9, 29, 40, 45, 50, 53, 54, 55, 67, 69, 73, 75, 79, 330, 331, 333, 334, 335, 347, 444, 458, 493, 563, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 746, 763], "calldata": [1, 11, 22, 23, 108, 258, 366, 371, 468, 581, 693], "put": [1, 28, 60, 61, 67, 497, 507, 509, 523, 526, 532, 546, 547, 548, 549, 550, 551, 552, 554, 556, 560, 624, 625, 746, 748, 749, 750, 755, 763], "so": [1, 5, 454, 458, 490, 507, 509, 525, 554, 563, 565, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 645, 749, 750, 752, 754, 755, 760, 761, 765, 766, 771], "finish": [1, 10, 22, 23, 581, 594, 595, 619], "mark": [1, 5, 62, 574, 746, 763], "dealloc": [1, 581, 619], "itself": [1, 755, 760, 764, 766], "grpc_server": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 36, 42, 48, 122, 123, 146, 161, 167, 168, 169, 170, 174, 178, 189, 201, 210, 220, 235, 236, 238, 249, 262, 270, 281, 285, 303, 365, 366, 367, 368, 369, 370, 371, 372, 585, 641, 667, 668, 669, 670, 671, 672, 673, 694], "allow": [1, 3, 4, 5, 62, 581, 583, 635, 746, 748, 749, 752, 755, 757, 758, 761, 763, 764, 766, 769], "compil": [1, 2, 95, 100, 575, 589, 599, 619, 747, 749, 757], "applic": [1, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 749, 751, 754, 758, 760, 761, 767, 769], "link": [1, 5, 563, 614, 747, 761], "directli": [1, 4, 5, 583, 748, 753, 754, 755, 767, 770], "As": [1, 748, 752, 755, 764, 768], "yield": [1, 537, 544, 581], "highest": [1, 749, 750], "method": [1, 8, 9, 26, 34, 38, 66, 70, 77, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 163, 164, 165, 166, 199, 202, 205, 208, 211, 212, 437, 548, 570, 581, 619, 746, 749, 750, 752, 755, 760, 761, 763, 766], "similar": [1, 643, 749, 750, 761], "let": [1, 581, 619], "std": [1, 7, 8, 26, 30, 32, 34, 35, 36, 38, 39, 40, 45, 50, 53, 54, 55, 61, 62, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 79, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 168, 174, 175, 200, 211, 216, 217, 231, 232, 251, 266, 281, 282, 290, 295, 304, 305, 306, 321, 322, 325, 326, 327, 330, 331, 333, 335, 336, 343, 344, 345, 346, 347, 348, 350, 373, 376, 377, 383, 385, 396, 397, 400, 401, 406, 407, 411, 415, 416, 418, 420, 421, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 437, 438, 439, 440, 445, 448, 449, 450, 451, 452, 458, 459, 460, 461, 462, 468, 474, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 577, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 630, 635, 640, 642, 643, 646, 647, 648, 651, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 665, 666, 677, 678, 679, 681, 682, 683, 684, 686, 689, 692, 693, 706, 707, 711, 714, 726, 727, 734, 736, 746, 749, 761, 763, 766], "promis": [1, 498, 501, 525, 528, 529, 530, 660, 684], "public": [1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 50, 53, 54, 55, 56, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 300, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 525, 529, 530, 531, 538, 543, 545, 547, 548, 550, 552, 555, 558, 561, 564, 569, 571, 574, 575, 581, 584, 588, 595, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 746, 747, 749, 764], "includ": [1, 5, 132, 133, 134, 135, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 746, 748, 754, 755, 761, 765, 766], "nativ": [1, 2, 3, 66, 133, 140, 160, 161, 162, 167, 168, 169, 170, 174, 175, 178, 179, 189, 207, 210, 220, 236, 238, 248, 252, 263, 281, 303, 429, 430, 483, 570, 631, 694, 749, 754], "hpp": [1, 7, 8, 9, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 40, 44, 45, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 218, 219, 221, 223, 226, 228, 230, 231, 233, 234, 237, 239, 240, 242, 243, 244, 245, 247, 251, 258, 260, 262, 264, 266, 268, 271, 273, 276, 279, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 329, 337, 338, 339, 340, 342, 343, 347, 363, 364, 393, 400, 401, 402, 415, 416, 422, 431, 439, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 522, 523, 525, 526, 528, 529, 531, 532, 534, 535, 537, 539, 540, 541, 542, 544, 546, 549, 551, 553, 554, 556, 557, 560, 562, 563, 565, 566, 567, 568, 570, 574, 581, 583, 585, 587, 589, 591, 594, 596, 599, 602, 606, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 629, 630, 632, 634, 635, 636, 637, 640, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 694, 699, 700, 701, 702, 703, 704, 705, 715, 728, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 757, 761, 766], "detail": [1, 2, 108, 167, 255, 468, 472, 490, 570, 578, 693, 721, 722, 723, 749, 750, 754, 755, 768, 770], "look": [1, 619, 748, 749, 750, 752, 765, 766], "techniqu": 1, "throughput": [1, 761], "group": [1, 5, 8, 37, 72, 79, 241, 761], "smaller": [1, 546, 747], "one": [1, 37, 67, 77, 79, 90, 98, 537, 544, 554, 563, 568, 583, 594, 595, 614, 615, 619, 625, 682, 686, 746, 748, 749, 750, 752, 755, 757, 760, 761, 763, 764, 765, 766, 769, 770, 771], "larg": [1, 747], "howev": [1, 760, 761, 770], "softwar": [1, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 751], "usual": [1, 640, 755], "conveni": [1, 4, 578, 759, 770], "complet": [1, 72, 581, 747, 749, 750, 752, 768], "thei": [1, 4, 5, 247, 248, 537, 544, 565, 615, 619, 749, 750, 752, 758, 763, 765, 766, 769, 770, 771], "come": [1, 529], "transpar": [1, 754], "pipelin": [1, 570], "all": [1, 2, 3, 4, 5, 26, 30, 38, 40, 70, 79, 89, 91, 105, 162, 330, 333, 563, 565, 583, 585, 594, 595, 596, 620, 623, 645, 746, 747, 748, 749, 750, 754, 755, 757, 760, 761, 763, 764, 765, 767, 769], "see": [1, 2, 4, 5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 749, 750, 751, 752, 753, 755, 760, 765, 767, 769], "2": [1, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 707, 708, 712, 714, 725, 727, 747, 755, 758, 760, 763, 766, 770], "class": [1, 3, 5, 149, 150, 151, 152, 156, 157, 158, 159, 188, 190, 192, 194, 196, 219, 240, 283, 362, 437, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 523, 524, 525, 526, 529, 530, 531, 533, 536, 538, 543, 545, 547, 548, 550, 552, 554, 555, 558, 561, 564, 569, 571, 573, 574, 575, 578, 581, 582, 584, 588, 595, 599, 601, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 631, 633, 636, 645, 646, 688, 694, 746, 749, 750, 761, 763], "common": [1, 200, 523, 574, 575, 754, 761], "basic": [1, 5, 8, 748, 749, 750, 755], "properti": [1, 620, 623, 750, 763], "input": [1, 3, 7, 8, 40, 45, 54, 62, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 324, 329, 492, 498, 503, 504, 507, 509, 522, 523, 525, 526, 528, 529, 539, 554, 557, 566, 567, 570, 581, 583, 599, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 749, 750, 752, 755, 760, 763, 764, 766], "size": [1, 3, 7, 8, 9, 30, 37, 45, 54, 55, 67, 69, 72, 73, 79, 347, 439, 444, 490, 497, 498, 503, 504, 507, 509, 511, 512, 515, 517, 519, 521, 523, 525, 526, 528, 529, 531, 535, 537, 539, 540, 541, 544, 546, 548, 551, 554, 556, 557, 562, 563, 566, 567, 572, 574, 577, 578, 579, 580, 581, 583, 587, 591, 594, 596, 604, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 626, 630, 638, 641, 645, 704, 705, 746, 747, 748, 749, 763, 764, 766], "identifi": [1, 30, 79, 342, 356, 414, 415, 416, 490, 491, 527, 581, 588, 608, 610, 611, 613, 621, 622, 640, 746, 749, 750, 755, 764, 766], "attach": [1, 755, 765], "separ": [1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 761], "monitor": [1, 3, 70, 565, 746, 747, 755, 763], "extens": [1, 26, 331, 485, 498, 499, 521, 522, 525, 532, 560, 581, 583, 619, 635, 746, 755, 763, 764], "prepar": 1, "well": [1, 5, 70, 581, 746, 748, 750, 755, 763, 770], "built": [1, 2, 748, 750, 752, 763, 764, 765], "up": [1, 3, 5, 537, 544, 565, 617, 618, 619, 748, 764, 766], "compon": 1, "buffer": [1, 3, 7, 29, 45, 50, 54, 61, 75, 76, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 137, 180, 182, 184, 186, 203, 205, 206, 223, 225, 226, 228, 258, 260, 301, 302, 303, 468, 492, 493, 498, 501, 503, 504, 505, 506, 507, 509, 513, 514, 515, 516, 517, 518, 519, 520, 526, 528, 529, 539, 540, 544, 546, 549, 550, 551, 557, 558, 570, 572, 581, 583, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 641, 654, 664, 665, 693, 694, 746], "direct": [1, 570, 645], "present": [1, 583, 645, 748, 754, 765], "structur": [1, 8, 67, 574, 591, 746], "agnost": 1, "memori": [1, 3, 45, 54, 55, 61, 67, 69, 73, 147, 163, 164, 165, 166, 174, 175, 178, 179, 182, 183, 184, 186, 190, 195, 196, 199, 200, 204, 205, 207, 210, 215, 216, 217, 218, 220, 222, 227, 232, 233, 234, 238, 239, 241, 243, 244, 245, 246, 247, 248, 252, 258, 260, 264, 265, 272, 278, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 415, 416, 486, 487, 488, 489, 497, 498, 501, 502, 505, 506, 507, 509, 513, 518, 519, 522, 523, 527, 528, 530, 533, 538, 539, 540, 541, 543, 545, 546, 549, 550, 551, 555, 556, 557, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 575, 581, 583, 587, 588, 594, 595, 601, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 746, 747, 755, 768, 770], "pool": [1, 3, 8, 37, 61, 72, 79, 90, 105, 142, 161, 168, 178, 182, 184, 186, 191, 215, 224, 225, 229, 240, 301, 303, 368, 370, 429, 505, 506, 507, 509, 528, 538, 563, 564, 581, 583, 584, 594, 595, 614, 615, 616, 624, 694, 729, 747], "list": [1, 26, 32, 34, 38, 66, 77, 150, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 643, 694, 746, 749, 750, 755, 763, 764, 765, 766, 767], "alloc": [1, 3, 4, 8, 9, 29, 61, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 424, 427, 498, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 538, 544, 545, 546, 549, 550, 563, 565, 568, 570, 581, 583, 584, 587, 588, 599, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640, 747, 761], "most": [1, 77, 619, 746, 749, 750, 765, 770], "commonli": 1, "worth": 1, "contigu": [1, 9, 619], "exact": [1, 749, 750, 770], "natur": [1, 5], "move": [1, 5, 8, 34, 36, 37, 38, 66, 70, 72, 77, 78, 79, 492, 498, 503, 505, 507, 509, 513, 519, 523, 525, 526, 528, 529, 531, 532, 537, 538, 539, 540, 541, 542, 544, 545, 554, 556, 557, 560, 562, 563, 566, 567, 574, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 761, 769], "slot": [1, 619], "why": 1, "amd": [1, 2, 4, 5, 619, 748, 749, 754, 758, 759, 761, 762, 763, 766, 768, 769, 770, 771], "partial": 1, "enough": [1, 750, 761, 767], "wherea": 1, "assum": [1, 26, 34, 38, 66, 77, 490, 554, 563, 583, 611, 621, 625, 746, 749, 750, 752, 755, 761, 763, 766], "copi": [1, 5, 8, 34, 36, 37, 38, 66, 70, 72, 77, 78, 79, 108, 209, 275, 474, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693, 746, 747, 748, 761, 770], "over": [1, 94, 99, 103, 105, 596, 749, 754, 766, 768, 770], "newli": 1, "downstream": 1, "wa": [1, 5, 575, 752, 755], "layer": 1, "now": [1, 3, 523, 526, 583, 606, 623], "freed": [1, 546, 551], "smallest": 1, "unit": [1, 3, 91, 761], "simpl": [1, 92, 94, 96, 97, 98, 99, 101, 103, 104, 152, 578, 642, 752], "complex": [1, 755], "like": [1, 525, 554, 581, 620, 755, 759, 760, 765, 768, 770], "adher": [1, 3, 30, 746], "open": [1, 4, 5, 87, 554, 563, 613, 614, 618, 619, 622, 747, 748, 749, 750, 751, 753, 754, 755, 765], "stop": [1, 70, 90, 91, 108, 258, 260, 470, 471, 509, 531, 570, 581, 582, 583, 584, 585, 594, 595, 606, 607, 610, 611, 614, 615, 616, 617, 620, 621, 623, 625, 693, 746, 763], "cmakelist": 1, "txt": [1, 747, 766], "build": [1, 2, 3, 27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 161, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 529, 558, 569, 575, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747, 749, 750, 752, 760, 761, 764, 766], "libworkerx": 1, "x": [1, 554, 612, 613, 644, 755, 764, 766], "name": [1, 3, 8, 26, 34, 37, 38, 40, 45, 50, 53, 55, 62, 66, 67, 71, 72, 73, 77, 79, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 168, 304, 305, 306, 325, 331, 335, 342, 344, 345, 356, 406, 407, 414, 415, 416, 418, 436, 437, 438, 440, 452, 454, 455, 458, 459, 460, 461, 462, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 498, 499, 500, 505, 506, 517, 518, 522, 523, 525, 526, 527, 528, 531, 532, 533, 539, 540, 541, 551, 552, 553, 554, 557, 560, 561, 562, 563, 564, 568, 569, 570, 571, 574, 575, 581, 583, 588, 605, 608, 610, 611, 613, 617, 619, 621, 622, 624, 635, 639, 702, 746, 747, 748, 749, 750, 752, 755, 758, 760, 763, 764, 766, 767, 770], "pascalcas": 1, "templat": [1, 3, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 67, 90, 91, 105, 108, 167, 174, 175, 200, 201, 203, 204, 206, 209, 233, 235, 255, 256, 257, 258, 270, 275, 285, 468, 472, 473, 474, 477, 480, 490, 497, 498, 512, 523, 524, 526, 527, 529, 556, 558, 571, 578, 579, 580, 581, 583, 593, 595, 598, 601, 607, 608, 617, 624, 626, 637, 638, 641, 688, 693, 739, 746, 755, 763, 764], "call": [1, 2, 3, 40, 70, 77, 454, 581, 594, 595, 596, 619, 623, 746, 752, 754, 755, 761, 763], "follow": [1, 5, 168, 581, 619, 746, 747, 754, 755, 759, 760, 761, 763, 764, 765, 770], "init": [1, 105, 159, 544, 545, 563, 591, 593, 596, 624], "low": [1, 105], "cost": [1, 105], "acquir": [1, 105, 159, 563, 624], "resourc": [1, 105, 251, 574, 619, 747, 755, 767, 770], "main": [1, 105, 108, 137, 161, 179, 246, 303, 413, 414, 693, 694, 720, 761, 763, 764, 766], "bodi": [1, 3, 105, 525, 583, 705, 760, 767], "chosen": [1, 764], "destroi": [1, 9, 79, 105, 159, 545, 563, 571, 619, 624], "final": [1, 105, 498, 575, 581, 645], "oper": [1, 3, 8, 30, 34, 36, 38, 45, 53, 54, 66, 67, 70, 77, 78, 79, 90, 105, 108, 211, 216, 217, 468, 486, 487, 488, 489, 490, 492, 493, 497, 498, 502, 506, 507, 509, 521, 523, 526, 527, 531, 532, 534, 535, 539, 540, 545, 554, 560, 563, 564, 565, 568, 571, 575, 581, 583, 585, 587, 595, 610, 613, 615, 618, 619, 620, 622, 625, 626, 637, 638, 641, 645, 693, 746, 752, 754], "prior": [1, 4, 563, 575, 759, 767, 770], "shutdown": [1, 3, 32, 79, 150, 156, 531, 537, 538, 544, 545, 563, 564, 581, 587, 765], "latter": [1, 755], "tear": 1, "down": [1, 26, 34, 38, 66, 77, 537, 581, 746, 747, 752, 763], "order": [1, 333, 401, 432, 434, 578, 642, 746], "dox": 1, "e": [1, 8, 91, 336, 525, 529, 530, 543, 554, 563, 565, 566, 572, 581, 583, 587, 611, 615, 617, 619, 620, 755, 757, 760, 766], "g": [1, 3, 91, 572, 617, 757, 766], "doinit": [1, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "creat": [1, 3, 5, 10, 36, 40, 53, 105, 432, 434, 512, 517, 537, 544, 551, 554, 563, 574, 581, 610, 611, 613, 614, 620, 621, 622, 623, 625, 746, 747, 748, 755, 759, 765, 766, 770, 771], "getwork": [1, 108, 240, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 468, 532, 544, 545, 563, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 693], "myworkerclass": 1, "save": [1, 2, 26, 34, 38, 66, 77, 79, 91, 240, 241, 619, 746, 748], "abov": [1, 748, 755, 765, 766], "start": [1, 5, 8, 9, 70, 79, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 258, 260, 445, 470, 471, 505, 506, 509, 515, 517, 537, 544, 563, 565, 581, 582, 583, 584, 585, 599, 606, 607, 623, 693, 746, 747, 752, 753, 754, 758, 763, 765, 766, 768, 769], "infinit": [1, 4, 619], "loop": [1, 525, 563, 574, 619, 749, 750], "wait": [1, 10, 90, 335, 509, 565, 581, 594, 595, 619, 625, 640, 746, 749, 750], "nullptr": [1, 79, 492, 498, 505, 507, 509, 525, 529, 531, 532, 537, 538, 539, 540, 544, 545, 557, 563, 565, 568, 581, 583, 585, 594, 596, 599, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 640], "termin": [1, 2, 4, 108, 262, 468, 565, 585, 693, 747, 759, 765, 766, 770], "join": [1, 79, 105, 505, 537, 544, 563, 564, 581, 585, 594], "clean": [1, 537, 544, 765], "getalloc": [1, 9, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 511, 512, 549, 563, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "choos": [1, 9, 611, 618, 765, 767, 771], "vector": [1, 7, 8, 26, 29, 32, 34, 38, 40, 45, 53, 54, 55, 61, 62, 66, 71, 73, 75, 77, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 162, 163, 164, 165, 166, 169, 173, 175, 177, 178, 183, 184, 186, 191, 192, 195, 197, 199, 200, 202, 204, 207, 210, 215, 220, 222, 223, 224, 227, 228, 233, 238, 241, 245, 247, 248, 254, 255, 256, 258, 260, 265, 270, 272, 273, 276, 278, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 330, 333, 347, 400, 423, 424, 425, 426, 427, 428, 439, 450, 485, 486, 487, 488, 489, 492, 493, 494, 496, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 514, 515, 517, 518, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 556, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 570, 571, 577, 578, 579, 581, 583, 588, 593, 595, 596, 599, 601, 604, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 654, 662, 665, 746, 749, 761, 763, 766], "memoryalloc": [1, 8, 9, 28, 29, 61, 75, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 225, 424, 427, 468, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 528, 546, 547, 548, 549, 550, 551, 552, 563, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693], "const": [1, 7, 8, 9, 10, 13, 22, 23, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 40, 45, 50, 53, 54, 55, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 77, 78, 79, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 200, 201, 205, 211, 216, 217, 231, 232, 258, 266, 270, 281, 282, 290, 295, 304, 305, 306, 325, 326, 327, 330, 331, 333, 334, 335, 336, 342, 344, 345, 346, 347, 348, 349, 350, 355, 357, 366, 367, 370, 373, 375, 376, 377, 378, 379, 381, 383, 384, 385, 387, 389, 391, 392, 393, 396, 397, 400, 401, 406, 407, 409, 415, 416, 418, 420, 421, 423, 424, 425, 426, 427, 428, 436, 437, 438, 439, 440, 444, 449, 452, 453, 458, 459, 460, 461, 462, 468, 474, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 517, 518, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 637, 638, 641, 645, 651, 677, 678, 683, 693, 699, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 736, 746, 749, 761, 766], "cpu": [1, 29, 139, 157, 167, 184, 186, 189, 223, 226, 278, 303, 507, 509, 528, 546, 548, 549, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 694, 749, 754, 755, 760, 761, 762, 764, 765, 766, 768, 770], "kind": [1, 2, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747, 755, 757], "ident": [1, 26, 34, 38, 66, 77, 746, 763, 767], "dequeu": [1, 761], "pull": [1, 748, 754, 755, 763, 764, 765], "actual": [1, 4, 9, 77, 611, 621, 746, 763], "fals": [1, 4, 26, 34, 38, 66, 70, 77, 87, 90, 91, 497, 498, 507, 509, 521, 522, 525, 528, 532, 537, 544, 546, 551, 553, 557, 560, 563, 565, 578, 581, 583, 584, 585, 586, 588, 594, 595, 607, 613, 617, 623, 624, 642, 746, 761, 763], "virtu": 1, "highli": 1, "entir": [1, 619, 749], "suggest": [1, 5, 761, 771], "brought": 1, "cmake": [1, 4, 161, 747, 750, 752, 763, 765], "valid": [1, 5, 37, 509, 583, 750, 770], "someth": [1, 5, 566, 615, 620, 759, 770], "understand": [1, 5], "repli": [1, 352, 357, 522, 523, 524, 619], "rule": [1, 34, 38, 66, 77, 746, 755], "enforc": [1, 5, 619], "what": [1, 7, 247, 248, 512, 519, 525, 529, 554, 563, 565, 566, 581, 583, 587, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 625, 747, 748, 749, 750, 752, 753, 760, 764, 766, 767, 768, 771], "other": [1, 3, 5, 7, 8, 34, 36, 37, 38, 66, 70, 72, 77, 78, 79, 486, 487, 488, 489, 490, 502, 506, 512, 515, 517, 519, 531, 545, 554, 563, 564, 571, 575, 581, 614, 619, 746, 748, 753, 754, 755, 759, 761, 764, 765, 766, 768, 770], "though": [1, 568, 748], "futur": [1, 26, 34, 38, 66, 77, 90, 175, 178, 198, 199, 202, 205, 207, 272, 287, 288, 290, 298, 299, 498, 501, 521, 522, 525, 528, 530, 595, 610, 611, 613, 619, 621, 622, 625, 657, 658, 746, 749, 752, 761], "perhap": 1, "far": 1, "examin": [1, 749, 750, 752, 766], "here": [1, 4, 5, 34, 38, 66, 77, 563, 574, 581, 589, 594, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 747, 749, 750, 752, 755, 760, 761, 764, 765, 766], "greater": 1, "arbitrari": [1, 2, 9, 346, 554, 625, 640, 764], "xilinx": [1, 4, 483, 484, 485, 486, 487, 488, 489, 490, 491, 498, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 542, 543, 544, 545, 554, 555, 557, 558, 559, 563, 564, 565, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 604, 605, 608, 609, 610, 611, 613, 615, 617, 618, 621, 622, 624, 625, 751, 754, 755, 764, 765, 766, 770], "fpga": [1, 2, 4, 106, 747, 749, 754, 755, 761, 762, 764, 765, 766], "section": [1, 5, 754, 755, 765], "varttensor": [1, 157, 548, 549, 551, 625], "dpu": [1, 106, 515, 517, 625, 770], "subgraph": [1, 106, 302, 625], "suppos": 1, "often": 1, "suffici": [1, 45, 54, 55, 67, 69, 73, 746, 749, 761, 764, 765], "runner": [1, 302, 625, 760, 761], "runtim": [1, 106, 432, 434, 581, 623, 747, 748, 751, 764, 770], "submit": [1, 5, 77, 746, 754, 763], "sinc": [1, 37, 525, 645, 749, 752, 761], "befor": [1, 4, 5, 70, 105, 537, 544, 623, 746, 748, 749, 750, 752, 763, 770, 771], "continu": [1, 507, 509, 532, 549, 560, 566, 570, 611, 613, 615, 617, 618, 619, 621, 622, 748, 749, 754], "If": [1, 4, 5, 30, 40, 45, 54, 55, 67, 69, 73, 454, 619, 746, 747, 748, 749, 750, 752, 753, 754, 755, 761, 763, 765, 766, 767, 770], "assign": [1, 3, 8, 34, 36, 38, 40, 45, 50, 66, 70, 77, 78, 79, 91, 493, 537, 544, 578, 642, 746, 763], "lambda": [1, 90], "normal": [1, 108, 255, 473, 578, 642, 693, 749, 750], "popul": [1, 3, 619, 766], "prevent": [1, 40, 568, 581, 746], "too": [1, 5, 546, 551, 554, 768], "atom": [1, 272, 302, 594, 595, 625], "counter": [1, 247, 570, 571], "outstand": 1, "amount": 1, "until": [1, 37, 79, 334, 335, 563, 565, 619, 746, 749, 750, 752, 755], "ones": [1, 30, 746, 747, 765], "throttl": 1, "necessari": [1, 619], "steal": 1, "almost": 1, "special": [1, 34, 38, 66, 77, 746], "smart": [1, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "destructor": [1, 3, 8, 26, 34, 38, 66, 70, 77, 581, 594, 595, 746, 752], "THe": 1, "non": [1, 3, 5, 9, 34, 38, 66, 77, 512, 519, 746, 768], "default": [1, 3, 4, 8, 9, 10, 26, 30, 34, 38, 40, 53, 60, 66, 69, 70, 77, 105, 485, 486, 487, 488, 489, 490, 492, 495, 498, 502, 506, 509, 512, 515, 517, 522, 523, 525, 528, 531, 535, 540, 543, 544, 548, 554, 568, 569, 570, 571, 574, 578, 581, 610, 611, 614, 615, 616, 619, 620, 621, 623, 624, 700, 703, 746, 747, 748, 750, 752, 753, 755, 757, 758, 761, 763, 764, 765, 769, 770], "shared_st": [1, 71, 141, 161, 168, 173, 174, 175, 176, 178, 205, 215, 220, 232, 236, 249, 258, 260, 262, 263, 264, 281, 286, 303, 528, 581, 583, 585, 586, 587, 694], "them": [1, 4, 5, 525, 563, 594, 614, 615, 616, 619, 620, 635, 746, 748, 750, 752, 753, 754, 755, 761, 763, 764, 765, 766, 771], "global": [1, 3, 569, 574, 581, 623, 757], "visual": [1, 5, 490], "queri": [1, 62, 746, 747, 758], "correct": [1, 3], "right": [1, 3, 5, 26, 34, 38, 66, 77, 91, 432, 434, 565, 611, 621, 645, 746, 748, 763], "store": [1, 29, 45, 54, 55, 67, 69, 73, 75, 79, 189, 444, 617, 645, 746, 749, 750, 755, 763, 765], "compar": [1, 604, 619, 643, 645, 749, 750, 768], "seen": [1, 4, 537, 544, 749, 750], "whether": [1, 5, 581, 770], "previous": [1, 26, 34, 38, 66, 77, 746, 763], "reserv": [1, 498, 503, 507, 509, 519, 521, 522, 523, 525, 526, 529, 537, 544, 556, 567, 572, 577, 578, 581, 583, 596, 602, 611, 613, 614, 616, 620, 621, 622, 623, 625, 749, 761], "core": [1, 3, 4, 132, 137, 142, 160, 162, 182, 183, 184, 186, 189, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 243, 244, 245, 249, 252, 253, 255, 258, 260, 261, 262, 263, 264, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 483, 485, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 505, 506, 507, 509, 512, 514, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 572, 575, 576, 578, 581, 583, 584, 585, 586, 587, 596, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 761], "model_repositori": [1, 64, 65, 74, 141, 168, 174, 209, 210, 215, 222, 237, 238, 246, 263, 303, 419, 420, 421, 422, 532, 560, 561, 565, 586, 694, 764], "creation": [1, 537, 544], "workerinfo": [1, 108, 240, 241, 468, 504, 505, 506, 507, 508, 510, 532, 537, 538, 544, 545, 563, 564, 693], "worker_info": [1, 79, 141, 168, 174, 175, 178, 182, 183, 184, 186, 209, 214, 220, 221, 222, 227, 236, 278, 301, 303, 458, 459, 505, 507, 509, 532, 537, 538, 544, 545, 614, 694], "hold": [1, 45, 50, 54, 62, 67, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 170, 175, 230, 234, 235, 236, 546, 581, 640, 746, 761, 763, 764], "constructor": [1, 8, 34, 36, 37, 38, 66, 70, 72, 77, 78, 79, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 490, 746], "addandstartwork": [1, 79, 537, 544, 563, 564], "former": [1, 755], "brand": [1, 537, 544], "privat": [1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 525, 530, 531, 538, 543, 545, 547, 550, 552, 555, 561, 564, 569, 571, 574, 575, 581, 584, 588, 595, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "member": [1, 34, 38, 40, 66, 70, 77, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 591, 596, 627, 628, 630, 631, 634, 635, 636, 639, 640, 642, 644, 746, 763], "modifi": [1, 5, 554, 747, 748], "Such": 1, "action": [1, 5, 74, 554, 555, 752, 755], "taken": [1, 619, 620, 623], "care": [1, 594, 595], "becaus": [1, 34, 38, 66, 77, 525, 574, 581, 594, 619, 746, 748, 749, 761, 770], "decis": 1, "purpos": [1, 37, 752], "context": [1, 5, 251, 432, 434, 493, 498, 522, 526, 527, 540, 557, 574, 581, 583, 610, 611, 614, 615, 616, 617, 620, 621, 623, 625, 760], "duplic": [1, 554, 568, 614, 747], "contradictori": 1, "serial": [1, 45, 54, 55, 67, 69, 73, 247, 248, 492, 493, 494, 495, 497, 498, 500, 539, 540, 541, 556, 557, 562, 570, 571, 746], "silent": [1, 454], "drop": [1, 747, 759, 766, 770], "isn": [1, 589, 619], "corrupt": 1, "visibl": [1, 748], "spdlog": [1, 245, 410, 568, 569, 747, 757], "By": [1, 5, 694, 748, 753, 755, 758, 761, 764, 765, 770], "logger": [1, 124, 125, 126, 128, 129, 260, 505, 506, 509, 522, 523, 526, 529, 538, 542, 543, 545, 554, 565, 566, 567, 568, 569, 572, 581, 583, 584, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 757], "initlog": 1, "disk": [1, 764, 765], "print": [1, 2, 4, 30, 45, 53, 54, 67, 341, 565, 746, 747, 748, 749, 750, 752], "warn": [1, 5, 521, 529, 568, 569, 583, 585, 587, 596, 613, 615, 617, 618, 622, 625, 757], "messag": [1, 5, 40, 53, 77, 87, 124, 125, 126, 128, 129, 498, 531, 540, 569, 587, 588, 613, 618, 619, 622, 704, 746, 755, 757, 763], "preprocess": [1, 329, 749, 750], "form": [1, 30, 37, 746, 748], "throughout": 1, "remov": [1, 4, 30, 67, 512, 531, 563, 619, 746, 757, 763, 764], "via": 1, "interest": [1, 5, 754, 755], "disabl": 1, "opentelemetri": [1, 251, 574, 575, 747], "jaeger": [1, 251, 574, 755, 769], "ui": 1, "grafana": [1, 755], "against": [1, 5, 623, 643], "libamdinf": 1, "rather": [1, 3], "restrict": [1, 67, 746], "tensor": [1, 3, 28, 40, 45, 50, 53, 55, 60, 61, 62, 69, 92, 96, 97, 98, 101, 104, 108, 134, 141, 167, 171, 172, 173, 189, 192, 195, 225, 270, 275, 287, 288, 290, 298, 299, 300, 302, 303, 363, 468, 492, 494, 496, 515, 517, 518, 523, 524, 539, 541, 546, 547, 548, 549, 550, 551, 552, 553, 554, 566, 567, 581, 610, 611, 613, 614, 617, 619, 620, 621, 622, 623, 625, 626, 638, 639, 641, 680, 693, 694, 746, 749, 750, 752, 755, 763, 764, 766], "command": [2, 3, 150, 156, 242, 346, 537, 544, 594, 640, 747, 748, 755, 759, 764, 765, 770, 771], "line": [2, 5, 242, 602, 747, 748, 765], "util": [2, 108, 137, 175, 182, 183, 184, 186, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 209, 214, 215, 216, 217, 218, 219, 221, 222, 228, 233, 234, 237, 239, 240, 241, 243, 244, 247, 249, 251, 258, 260, 264, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 468, 498, 505, 506, 507, 509, 513, 514, 517, 518, 519, 520, 523, 524, 525, 526, 527, 528, 529, 532, 535, 537, 538, 539, 540, 541, 542, 544, 545, 551, 556, 557, 560, 562, 563, 564, 566, 567, 570, 572, 574, 581, 583, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693, 694, 761], "python": [2, 3, 4, 5, 578, 623, 747, 748, 749, 754, 755, 760, 761, 765, 766], "script": [2, 4, 297, 619, 620, 747, 750, 752, 755, 765, 766, 770, 771], "tool": [2, 747, 753, 754, 755, 770], "read": [2, 67, 85, 437, 519, 532, 560, 581, 596, 615, 619, 623, 746, 749, 750, 753, 760, 765, 771], "yml": [2, 4, 758], "raw": [2, 444, 749, 750, 764, 766], "pytest": [2, 4, 747], "wrk": [2, 747, 761], "effici": [2, 747, 761], "http": [2, 3, 4, 38, 39, 56, 70, 77, 86, 108, 119, 133, 140, 160, 162, 168, 169, 170, 175, 178, 203, 204, 208, 260, 261, 264, 265, 303, 373, 374, 375, 376, 377, 432, 434, 468, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 693, 694, 700, 705, 747, 748, 749, 750, 752, 754, 755, 758, 760, 761, 763, 764, 765, 766, 767, 769], "rest": [2, 3, 38, 90, 164, 202, 203, 204, 260, 261, 394, 395, 570, 595, 619, 746, 747, 749, 750, 752, 754, 755, 766, 770], "test": [2, 3, 5, 37, 97, 111, 568, 569, 619, 747, 755, 759, 760, 766, 768, 770], "c": [2, 3, 4, 5, 8, 37, 66, 72, 95, 165, 205, 206, 207, 300, 338, 340, 342, 356, 402, 414, 415, 416, 490, 497, 515, 517, 523, 526, 528, 532, 566, 567, 578, 587, 593, 604, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 747, 750, 754, 761, 765, 766], "explan": 2, "type": [2, 3, 4, 5, 30, 35, 39, 59, 65, 78, 91, 108, 167, 211, 212, 213, 300, 432, 434, 439, 444, 490, 493, 498, 519, 523, 524, 525, 526, 527, 531, 535, 536, 554, 556, 557, 562, 563, 578, 581, 583, 587, 588, 591, 593, 595, 596, 605, 617, 619, 623, 625, 631, 636, 642, 645, 682, 686, 693, 746, 747, 749, 750, 754, 755, 760, 763, 764, 766, 767], "easiest": [2, 5, 748, 755, 758, 769], "want": [2, 594, 619, 625, 748, 749, 750, 752, 755, 764, 766, 771], "serv": [2, 570, 581, 748, 764, 767], "regular": [2, 755, 763], "flow": 2, "flag": [2, 3, 4, 563, 575, 594, 614, 619, 748, 759, 761, 764, 765, 770, 771], "optim": [2, 512, 519, 620, 748, 749, 750, 761, 764, 771], "argument": [2, 3, 88, 92, 96, 100, 101, 104, 242, 304, 305, 306, 325, 336, 342, 344, 345, 353, 356, 360, 361, 372, 384, 389, 398, 406, 407, 414, 415, 416, 418, 421, 423, 424, 425, 426, 427, 428, 436, 438, 440, 452, 460, 461, 462, 515, 517, 570, 595, 615, 619, 746, 747, 748, 752, 755], "help": [2, 4, 5, 270, 565, 570, 571, 748, 750, 755, 765], "out": [2, 5, 512, 519, 525, 619, 754, 755, 760, 766], "qp": 2, "m": [2, 4, 5, 515, 517, 620], "modif": [2, 5], "hypothet": 2, "xmodel_benchmark": 2, "sh": [2, 619], "averag": 2, "notabl": 3, "semant": 3, "mlperf": [3, 768], "app": [3, 583, 755, 757], "api": [3, 8, 26, 37, 66, 72, 165, 205, 206, 207, 222, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 570, 619, 746, 749, 750, 752, 754, 755, 761, 766, 767], "129": 3, "googl": [3, 6, 108, 199, 200, 201, 231, 258, 350, 420, 421, 468, 490, 522, 523, 524, 540, 554, 557, 581, 693, 747, 749], "147": 3, "storag": [3, 755], "166": 3, "refactor": [3, 595, 768], "state": [3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 36, 66, 70, 87, 221, 222, 369, 372, 395, 398, 528, 581, 582, 583, 584, 585, 586, 587, 588, 589, 619, 631, 636, 753, 758], "125": 3, "nativecli": [3, 26, 70, 108, 165, 205, 468, 488, 502, 528, 693, 746, 749, 763], "149": 3, "resolv": [3, 5, 304, 305, 306, 325, 342, 344, 345, 353, 356, 360, 361, 372, 384, 389, 398, 406, 407, 414, 415, 416, 418, 421, 423, 424, 425, 426, 427, 428, 436, 438, 440, 452, 460, 461, 462, 563, 614, 623, 750], "164": 3, "add": [3, 5, 40, 53, 62, 91, 92, 96, 98, 101, 104, 509, 523, 537, 544, 545, 554, 563, 570, 606, 607, 614, 615, 619, 620, 623, 746, 747, 748, 749, 752, 755, 759, 763, 764, 768, 770, 771], "parallel": [3, 38, 39, 330, 333, 487, 525, 623, 746, 754, 763], "168": 3, "bump": 3, "169": 3, "timeout": [3, 72, 509, 525, 749], "don": [3, 5, 563, 619, 748, 749, 750, 752, 761], "prev": [3, 546], "iter": [3, 67, 108, 234, 245, 247, 270, 474, 497, 537, 544, 556, 557, 568, 570, 593, 599, 693, 746], "packag": [3, 4, 747, 761, 763, 770], "cento": 3, "debian": 3, "930fab2": 3, "modelinferasync": [3, 26, 34, 38, 66, 77, 485, 486, 487, 488, 489, 521, 522, 525, 528, 531, 746, 749, 750], "2f4a6c2": 3, "inferasyncord": [3, 108, 198, 468, 485, 521, 693, 746, 749, 750, 763], "66": [3, 760], "wheel": [3, 747], "cibuildwheel": [3, 763], "71": [3, 747], "xmodel": [3, 105, 108, 148, 161, 167, 168, 169, 170, 174, 175, 178, 183, 189, 193, 195, 213, 249, 270, 272, 277, 278, 282, 284, 301, 303, 462, 475, 554, 693, 694, 749, 750, 754, 755, 761, 764], "74": 3, "fp16": [3, 30, 167, 468, 490, 523, 524, 527, 535, 581, 619, 694, 747, 763], "76": [3, 760], "85": [3, 760], "90": [3, 760], "bind": [3, 574, 578, 595, 747, 749, 750, 754], "grpc": [3, 10, 22, 23, 34, 35, 70, 108, 120, 133, 140, 160, 162, 167, 168, 169, 170, 174, 175, 178, 200, 201, 249, 258, 259, 303, 348, 349, 468, 483, 543, 565, 581, 582, 585, 693, 694, 703, 704, 747, 749, 754, 755, 763, 764, 766, 768], "88": [3, 760], "batch": [3, 8, 37, 72, 79, 105, 108, 137, 161, 178, 189, 209, 214, 240, 243, 244, 252, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 328, 330, 468, 505, 506, 507, 508, 509, 510, 515, 517, 532, 537, 563, 566, 567, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 647, 648, 693, 694, 746, 749, 750, 754, 761], "94": [3, 760], "kubernet": [3, 748, 767, 770], "95": 3, "exhal": [3, 747], "openapi": [3, 747, 767], "spec": [3, 40, 53, 62, 67, 507, 509, 746, 755, 760, 767], "100": [3, 108, 509, 554, 594, 602, 693, 710, 761], "timer": [3, 108, 147, 186, 243, 244, 247, 287, 288, 291, 292, 293, 294, 296, 297, 298, 300, 302, 303, 456, 474, 509, 566, 567, 570, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 692, 693, 694], "simpler": 3, "measur": [3, 5, 747, 760, 768], "104": 3, "107": 3, "pre": [3, 5, 747, 748, 754, 763, 764, 766], "post": [3, 525, 537, 544, 563, 570, 584, 614, 747, 754, 760, 766, 767], "process": [3, 10, 273, 346, 525, 581, 596, 619, 747, 749, 750, 752, 754, 761, 763, 766, 771], "42cf748": 3, "dockerfil": [3, 747, 748, 759, 763, 765, 770, 771], "imag": [3, 4, 93, 98, 102, 329, 554, 578, 611, 613, 617, 618, 619, 620, 621, 622, 623, 737, 752, 761, 763, 766], "updat": [3, 45, 54, 69, 150, 156, 161, 537, 544, 599, 640, 746], "asset": [3, 765, 766], "download": [3, 4, 755, 758, 759, 765, 769, 770], "81": 3, "reimplement": 3, "align": 3, "across": 3, "platform": [3, 62, 70, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 300, 454, 496, 498, 522, 526, 553, 554, 557, 623, 624, 746, 748, 751, 755, 763, 764, 765], "reorgan": 3, "renam": [3, 67, 454, 497, 556, 746], "proteu": 3, "91": 3, "ubuntu": 3, "20": [3, 523, 526, 747, 760], "04": [3, 747], "docker": [3, 575, 755, 759, 763, 764, 766, 768, 770, 771], "97": 3, "rocm": [3, 747, 759], "5": [3, 34, 38, 66, 77, 570, 622, 723, 737, 746, 747, 755, 759, 760, 761, 763, 764, 766, 770], "4": [3, 324, 523, 526, 532, 560, 567, 589, 609, 611, 613, 614, 616, 617, 621, 622, 625, 706, 711, 726, 743, 744, 747, 759, 760, 761, 763, 766], "99": [3, 570, 722], "style": [3, 380, 386, 390, 767], "102": 3, "zendnn": [3, 4, 112, 114, 554, 747, 748, 749, 754, 755, 762, 768], "113": 3, "all_cap": [3, 30, 746], "enum": [3, 10, 30, 490, 506, 508, 510, 514, 538, 543, 545, 548, 569, 571, 573, 578, 581, 619, 624, 694], "datatyp": [3, 40, 45, 55, 62, 73, 108, 167, 211, 342, 417, 468, 490, 492, 493, 494, 496, 498, 500, 514, 517, 518, 519, 520, 522, 523, 526, 528, 529, 534, 535, 536, 539, 540, 541, 551, 552, 553, 557, 562, 566, 567, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 693, 747, 749, 750, 752, 755, 760, 763, 764, 766], "map": [3, 30, 67, 108, 174, 175, 200, 201, 215, 222, 241, 248, 251, 296, 350, 420, 421, 468, 477, 490, 497, 498, 523, 524, 537, 538, 544, 545, 554, 556, 564, 570, 571, 574, 619, 645, 693, 746, 748, 749, 750, 764], "between": [3, 30, 40, 91, 525, 581, 619, 746, 751], "xir": [3, 192, 195, 228, 287, 288, 290, 298, 299, 302, 515, 517, 518, 535, 536, 551, 552, 610, 611, 613, 621, 622, 625], "gui": 3, "110": 3, "correctli": [3, 623, 755], "61": [3, 760], "bug": [3, 5, 619, 754], "config": [3, 4, 203, 300, 526, 554, 563, 623, 747, 755, 764], "89": 3, "permiss": [3, 5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747, 765], "host": [3, 4, 748, 755, 761, 763, 764, 766], "uid": 3, "101": 3, "discoveri": 3, "miss": [3, 619, 623, 760], "105": 3, "race": [3, 537, 544], "condit": [3, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "111": 3, "cbf33b8": 3, "37a6aad": [3, 768], "tensorflow": [3, 300, 623, 754, 755, 764, 771], "pytorch": [3, 754, 755], "17": [3, 747, 760, 766, 768], "21": [3, 747, 768], "servermetadata": [3, 26, 34, 38, 66, 71, 77, 108, 175, 176, 209, 468, 485, 486, 487, 488, 489, 498, 499, 521, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 693, 746, 763], "7747911": 3, "modellist": [3, 26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 763], "7477b7d": 3, "694800e": 3, "directori": [3, 4, 5, 26, 27, 31, 33, 34, 38, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 66, 68, 70, 76, 77, 86, 109, 115, 122, 123, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 554, 565, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747, 749, 750, 755, 758, 759, 763, 764, 765, 767, 770, 771], "6459797": 3, "modelmetadata": [3, 26, 32, 34, 38, 66, 71, 77, 79, 105, 108, 173, 175, 209, 349, 355, 378, 381, 468, 485, 486, 487, 488, 489, 496, 498, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 537, 538, 544, 545, 553, 557, 560, 561, 563, 564, 581, 583, 624, 693, 746, 763], "22b9d1a": 3, "migraphx": [3, 4, 100, 148, 161, 167, 168, 169, 170, 174, 175, 178, 185, 197, 246, 248, 270, 278, 282, 284, 301, 303, 417, 418, 532, 554, 560, 694, 747, 748, 749, 750, 754, 762, 765, 766], "34": [3, 747, 768], "commit": [3, 5, 747, 768], "verif": [3, 5], "048bdd7": 3, "pybind11": [3, 747], "log": [3, 5, 57, 116, 124, 125, 126, 127, 128, 129, 144, 154, 155, 161, 168, 182, 183, 186, 198, 203, 206, 215, 220, 222, 231, 242, 243, 244, 249, 258, 260, 261, 262, 265, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 409, 410, 411, 505, 506, 509, 521, 526, 529, 538, 543, 545, 554, 565, 566, 567, 572, 581, 583, 584, 585, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 629, 694, 747, 755, 768], "macro": [3, 569, 581, 589, 619], "proteus_log_": 3, "insensit": 3, "14ed4ef": 3, "90a51a": 3, "ak": [3, 105, 108, 118, 148, 161, 167, 168, 169, 170, 174, 175, 178, 183, 197, 246, 248, 252, 277, 282, 284, 288, 290, 298, 299, 301, 303, 304, 475, 532, 560, 585, 611, 613, 621, 622, 693, 694, 747, 754, 760], "e04890f": 3, "consist": [3, 5, 490, 640, 749, 750, 767, 768], "except": [3, 45, 54, 55, 67, 69, 73, 77, 80, 81, 82, 83, 84, 85, 88, 89, 134, 160, 167, 184, 186, 198, 199, 202, 203, 204, 205, 207, 209, 212, 214, 215, 220, 221, 222, 223, 226, 228, 231, 237, 240, 245, 258, 260, 262, 264, 265, 287, 288, 292, 296, 297, 300, 302, 303, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 640, 694, 747, 763], "30": [3, 758], "opt": [3, 4, 770], "43": 3, "workerload": [3, 26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 748, 749, 750, 752, 763], "behavior": 3, "27": 3, "d1ad81d": 3, "offset": [3, 9, 29, 75, 490, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 529, 558, 581, 583, 611, 616, 619, 641], "6666142": 3, "calcul": [3, 444, 619, 620], "valu": [3, 4, 9, 10, 30, 38, 67, 91, 149, 150, 151, 152, 156, 157, 158, 159, 202, 203, 204, 208, 209, 237, 260, 264, 341, 347, 373, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 399, 437, 490, 497, 512, 519, 523, 525, 526, 527, 531, 532, 534, 554, 556, 557, 560, 562, 565, 566, 570, 571, 574, 575, 581, 583, 584, 587, 588, 589, 593, 595, 608, 610, 611, 612, 613, 614, 615, 616, 617, 620, 622, 637, 638, 640, 641, 645, 739, 746, 748, 749, 750, 755, 760, 761, 763, 766], "dure": [3, 4, 619], "8c7534b": 3, "product": [3, 4, 748, 759, 770, 771], "throw": [3, 490, 522, 525, 526, 531, 532, 535, 537, 544, 546, 549, 551, 554, 560, 563, 568, 578, 583, 585, 589, 610, 611, 614, 619, 620, 623, 625, 749], "initi": [3, 30, 45, 54, 55, 67, 69, 73, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 532, 560, 568, 591, 593, 602, 619, 620, 623, 746, 755, 757, 765], "29": [3, 747], "detect": [3, 288, 749, 752, 759, 770], "99ffc33": 3, "57": [3, 356], "simultan": 3, "metric": [3, 113, 144, 161, 184, 186, 205, 243, 244, 249, 260, 284, 287, 288, 291, 292, 293, 294, 296, 297, 298, 300, 303, 507, 509, 528, 566, 567, 572, 583, 584, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 694, 721, 722, 723, 747, 767], "trace": [3, 117, 144, 161, 174, 178, 180, 183, 184, 186, 205, 219, 220, 243, 244, 249, 260, 262, 264, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 300, 303, 501, 503, 504, 506, 507, 509, 528, 542, 543, 559, 566, 567, 568, 569, 572, 581, 583, 585, 587, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 623, 625, 656, 694, 755, 757], "easi": 4, "launch": [4, 755, 761], "develop": [4, 5, 747, 748, 749, 750, 752, 754, 759, 763, 766, 768, 770, 771], "helper": [4, 275, 283, 284, 329, 523, 526, 749, 750, 752], "dry": 4, "h": [4, 199, 200, 202, 203, 204, 208, 209, 231, 237, 240, 245, 247, 248, 251, 258, 260, 264, 265, 266, 268, 271, 272, 278, 287, 288, 290, 291, 296, 297, 298, 299, 300, 302, 515, 517, 522, 523, 525, 526, 527, 531, 532, 554, 560, 563, 568, 569, 570, 571, 574, 575, 578, 581, 583, 584, 585, 587, 588, 589, 591, 594, 595, 601, 605, 610, 611, 612, 613, 614, 619, 620, 621, 622, 623, 625, 644, 747, 761], "v": [4, 568, 610, 611, 613, 619, 621, 622], "choic": [4, 619], "would": [4, 748, 760, 764, 768], "program": [4, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 694, 754, 766, 770], "exit": [4, 565], "latest": [4, 747, 753, 759, 763, 765, 770, 771], "coverag": [4, 747, 768], "debug": [4, 521, 568, 569, 747, 757, 760, 764, 765], "d": [4, 5, 347, 577, 747, 764], "dir": [4, 74, 554, 555, 568, 583], "l": [4, 568], "r": [4, 432, 434, 531, 532, 560, 599, 613, 618, 622, 760], "addit": [4, 5, 748, 755, 758, 759, 765, 767, 770], "root": [4, 531, 583, 619, 765, 771], "place": [4, 433, 757, 761, 764, 771], "tree": [4, 748], "workspac": [4, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 765], "doc": [4, 5, 27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 619, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747, 753], "lint": [4, 747], "regen": [4, 765], "delet": [4, 8, 34, 36, 37, 38, 66, 70, 72, 77, 78, 79, 90, 486, 487, 488, 489, 497, 502, 506, 531, 537, 544, 545, 554, 563, 564, 565, 571, 575, 581, 587, 594, 595, 614, 619, 746, 765], "cmakecach": 4, "regener": 4, "processor": [4, 251, 574, 771], "64": [4, 484, 619, 623, 702, 760], "restor": 4, "repo": 4, "artifact": [4, 625], "dev": [4, 609, 744, 747, 755, 759, 763, 764, 765, 766, 770, 771], "dev_bas": 4, "registri": [4, 248, 570, 571, 763, 765], "tfzendnn_path": 4, "ptzendnn_path": 4, "suffix": [4, 445, 448, 604, 759, 763, 770, 771], "tf": [4, 112, 623, 747, 749, 755, 771], "locat": [4, 5, 437, 764, 771], "pt": [4, 114, 554, 620, 747, 755, 764, 771], "append": [4, 526, 527, 583, 591, 596, 613, 622, 750], "tag": [4, 563, 581, 748], "empti": [4, 7, 53, 67, 497, 503, 504, 507, 509, 525, 529, 537, 540, 544, 556, 557, 563, 574, 578, 594, 595, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 763], "ptzendnn": [4, 105, 108, 297, 475, 532, 554, 560, 620, 693, 749, 765, 771], "tfzendnn": [4, 105, 108, 300, 475, 532, 554, 560, 623, 693, 749, 765, 766, 771], "relat": [4, 5, 211, 212, 563, 614, 768], "unknown": [4, 30, 490, 526, 531, 539, 540, 542, 543, 554, 563, 568, 578, 581, 614, 619, 763], "manifest": 4, "tmp": [4, 497, 758, 760, 764, 769], "label": [4, 5, 91, 307, 347, 570, 571, 606, 607, 613, 618, 622, 741, 749, 750, 755, 766], "wrapper": [4, 594, 595], "around": [4, 754, 755, 760], "j": [4, 532, 560, 566, 567, 578, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 764], "n": [4, 437, 497, 498, 532, 539, 540, 546, 551, 556, 560, 565, 594, 602, 603, 619, 749, 755, 763], "arg": [4, 127, 342, 490, 523, 526, 567, 569, 574, 616, 749, 750, 752, 755, 763], "unpars": 4, "autotest": 4, "devic": [4, 26, 34, 38, 66, 77, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 746, 747, 748, 759, 763, 764, 765, 768, 770], "interact": [4, 163, 164, 165, 166, 199, 202, 205, 208], "net": [4, 202, 208, 525, 531, 747, 766], "rm": 4, "xclbin": 4, "togeth": [4, 749, 750], "overrid": [4, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 34, 38, 45, 54, 55, 66, 67, 73, 74, 75, 77, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 486, 487, 488, 489, 492, 493, 494, 497, 498, 500, 508, 510, 514, 516, 518, 520, 530, 547, 552, 555, 574, 581, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746], "those": [4, 5, 755, 768], "mode": 4, "mount": [4, 748, 759, 765, 770], "select": [4, 619, 749, 754], "cmd": [4, 346, 537, 538, 544, 545, 596, 597, 640, 748], "none": [4, 763], "stdin": [4, 766], "even": [4, 594, 748, 765], "pseudo": 4, "tty": 4, "network": [4, 525, 764, 765], "git": [4, 5, 747, 765, 766], "ssh": [4, 759, 770], "kei": [4, 38, 67, 307, 408, 497, 498, 523, 526, 537, 538, 544, 545, 554, 556, 574, 575, 583, 613, 618, 622, 640, 645, 746, 760, 763], "overlaybin": [4, 770], "gdb": [4, 747], "suit": [4, 5, 765], "hostnam": [4, 748], "port": [4, 70, 369, 372, 395, 398, 502, 565, 581, 582, 583, 584, 585, 700, 703, 746, 747, 748, 752, 755, 759, 763, 764, 765, 766, 770], "http_port": [4, 565, 749, 750], "skip": [4, 523, 526, 602, 625, 748], "perf": 4, "127": [4, 34, 38, 77, 746, 749, 752, 760, 761, 764, 766], "0": [4, 9, 10, 11, 26, 34, 38, 60, 69, 77, 90, 105, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 642, 721, 722, 723, 740, 742, 744, 746, 747, 748, 749, 750, 752, 755, 760, 761, 763, 764, 766, 767, 769, 770], "8998": [4, 38, 77, 484, 700, 746, 752, 761, 764, 766], "attempt": [4, 72, 454, 512, 519, 583, 749, 750, 755], "compos": [4, 765], "servic": [4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 570, 574, 581], "p": [4, 764], "profil": 4, "service_suffix": 4, "prod": 4, "done": [5, 581], "thank": 5, "varieti": 5, "experi": 5, "react": 5, "vote": 5, "discuss": [5, 454, 754], "import": [5, 619, 748, 750, 766, 768], "fulli": 5, "flesh": 5, "limit": [5, 301, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 755, 764, 770], "scope": [5, 251, 574, 575, 623, 749, 750, 752, 755], "instead": [5, 611, 619, 621, 623, 749, 750, 761], "notepad": 5, "rememb": 5, "commun": [5, 40, 581, 640, 746, 747, 748, 749, 750, 751, 752, 754, 755, 763, 766, 767, 768, 770], "elabor": 5, "report": [5, 563, 614, 747, 768, 769], "featur": [5, 747, 749, 750, 768], "re": [5, 247, 248, 565, 748, 752, 755, 763, 766], "concret": 5, "task": [5, 761], "mean": [5, 401, 578, 581, 642, 747, 768], "clear": [5, 40, 91, 537, 544, 556, 563, 594, 595, 606, 607, 746], "find": [5, 27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 412, 413, 431, 435, 442, 458, 497, 498, 521, 532, 537, 544, 556, 560, 563, 570, 574, 604, 606, 614, 619, 623, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 755], "give": [5, 563, 594, 614, 619, 623], "u": [5, 91, 107, 498, 524, 581, 607, 619, 755], "much": [5, 546, 551, 747], "environ": [5, 82, 433, 746, 748, 763, 770], "reproduc": [5, 768], "relev": [5, 619, 765], "point": [5, 606, 619, 748, 755, 770, 771], "caus": [5, 537, 544, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "problem": [5, 537, 544, 563, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 755], "lot": 5, "But": [5, 34, 38, 66, 77, 746, 748], "aim": 5, "better": [5, 749, 750, 761], "formal": 5, "organ": [5, 753, 754, 764], "categor": 5, "approv": 5, "upcom": [5, 623], "deadlin": 5, "ad": [5, 38, 330, 512, 523, 554, 563, 614, 620, 623, 746, 747, 748, 754, 755], "indic": [5, 515, 517, 563, 747, 749, 750, 755, 763, 767], "gone": 5, "fork": 5, "review": 5, "owner": 5, "autom": 5, "merg": [5, 546], "licens": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747, 754, 765, 771], "under": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747, 755, 764, 770], "term": [5, 747], "pleas": 5, "off": [5, 565, 568, 569, 619, 757], "patch": [5, 742], "certif": [5, 525, 747], "dco": 5, "below": [5, 596, 623, 747, 748, 755, 765], "copyright": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "2004": 5, "2006": 5, "linux": [5, 747, 758, 763, 769], "foundat": 5, "contributor": [5, 754], "letterman": 5, "drive": [5, 768], "d4700": 5, "san": 5, "francisco": 5, "ca": 5, "94129": 5, "everyon": 5, "permit": 5, "distribut": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747], "verbatim": 5, "certifi": 5, "whole": [5, 596], "me": 5, "b": [5, 402, 578, 621], "upon": 5, "previou": [5, 546, 765], "best": [5, 512, 519, 546, 754, 761], "my": [5, 615], "knowledg": 5, "cover": [5, 764, 765, 766], "am": 5, "person": [5, 747], "agre": [5, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 771], "record": [5, 251, 574], "indefinit": [5, 37], "redistribut": 5, "involv": 5, "jane": 5, "doe": [5, 507, 509, 619, 620, 749, 761, 767], "com": [5, 432, 434, 619, 758, 764, 765, 766, 769, 770], "statement": [5, 490, 757], "automat": [5, 161, 581, 748, 750, 752, 755, 759, 764, 765, 770], "consid": [5, 748, 755, 764], "gpg": 5, "signatur": [5, 595], "hook": [5, 747], "written": [5, 9], "restructuredtext": 5, "unfamiliar": 5, "tutori": [5, 755], "denot": 5, "seri": [5, 768], "punctuat": 5, "charact": [5, 572, 702], "least": [5, 26, 34, 38, 66, 77, 568, 583, 746, 761, 763], "titl": 5, "hierarchi": 5, "convent": 5, "overlin": 5, "chapter": 5, "subsect": 5, "subsubsect": 5, "paragraph": 5, "box": [5, 611, 613, 622, 754], "highlight": 5, "draw": [5, 747], "attent": 5, "sparingli": 5, "distract": 5, "reader": [5, 203, 209, 237, 264, 526, 531, 532, 560, 583, 587], "share": [5, 221, 222, 289, 523, 537, 544, 594, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 761], "color": 5, "theme": [5, 768], "blue": 5, "green": 5, "hint": 5, "tip": 5, "yellow": 5, "caution": 5, "red": 5, "danger": 5, "convei": 5, "rel": [5, 747, 760], "essenti": 5, "unexpect": 5, "side": [5, 77, 645, 746, 763], "effect": 5, "event": [5, 70, 554, 581, 746, 763], "critic": [5, 757], "namespac": [6, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 746, 755], "amdinfernamespac": 6, "httpclass": 6, "websocketservernamespac": 6, "pre_postenum": 6, "imageorderenum": 6, "resizealgorithmtempl": 6, "struct": [6, 66, 70, 174, 175, 176, 200, 203, 204, 205, 215, 216, 217, 222, 225, 234, 236, 239, 249, 255, 258, 260, 263, 285, 289, 468, 472, 474, 475, 480, 488, 497, 498, 499, 502, 523, 524, 526, 527, 528, 533, 538, 539, 540, 545, 547, 548, 552, 557, 559, 562, 569, 572, 578, 581, 583, 586, 608, 612, 619, 746], "imagepreprocessoptionsnamespac": 6, "utiltempl": 6, "is_anyclass": 6, "threadpoolclass": 6, "timernamespac": 6, "workersstruct": 6, "detectresponseclass": 6, "aksclass": 6, "aksdetectclass": 6, "aksdetectstreamclass": 6, "cplusplusclass": 6, "echoclass": 6, "echomulticlass": 6, "invertimageclass": 6, "invertvideoclass": 6, "migraphxworkerclass": 6, "ptzendnnclass": 6, "resnet50class": 6, "resnet50streamclass": 6, "tfzendnnclass": 6, "workerclass": 6, "xmodelenum": 6, "workerstatusstruct": 6, "adddatatotensorstruct": 6, "inferencerequestinputsizesstruct": 6, "inferenceresponseoutputsizesstruct": 6, "memoryheaderstruct": 6, "observertempl": 6, "overloadedstruct": 6, "requestcontainerstruct": 6, "servermetadatastruct": 6, "setinputdatastruct": 6, "setoutputdatastruct": 6, "tensorsizesstruct": 6, "updatecommandstruct": 6, "writedataclass": 6, "bad_statusclass": 6, "batchclass": 6, "batcherclass": 6, "buffertempl": 6, "calldataclass": 6, "calldatabaseclass": 6, "calldatahashardwareclass": 6, "calldatamodelinferclass": 6, "calldatamodellistclass": 6, "calldatamodelloadclass": 6, "calldatamodelmetadataclass": 6, "calldatamodelreadyclass": 6, "calldatamodelunloadclass": 6, "calldataserverliveclass": 6, "calldataservermetadataclass": 6, "calldataserverreadytempl": 6, "calldataserverstreamtempl": 6, "calldataunaryclass": 6, "calldataworkerloadclass": 6, "calldataworkerunloadclass": 6, "clientclass": 6, "connection_errorclass": 6, "cpuallocatorclass": 6, "cpubufferclass": 6, "datatypeclass": 6, "endpointsclass": 6, "environment_not_set_errorclass": 6, "external_errorclass": 6, "file_not_found_errorclass": 6, "file_read_errorclass": 6, "grpcclientclass": 6, "grpcserverclass": 6, "hardbatcherclass": 6, "httpclientclass": 6, "inferencerequestclass": 6, "inferencerequestinputclass": 6, "inferencerequestoutputclass": 6, "inferenceresponseclass": 6, "inferenceresponseoutputclass": 6, "inferencetensorclass": 6, "invalid_argumentclass": 6, "memoryallocatorclass": 6, "memorypoolclass": 6, "modelmetadataclass": 6, "modelrepositoryclass": 6, "nativeclientclass": 6, "parametermapclass": 6, "runtime_errorclass": 6, "serializableclass": 6, "serverclass": 6, "sharedstateclass": 6, "softbatcherclass": 6, "tensorclass": 6, "updatelistenerclass": 6, "varttensorbufferclass": 6, "websocketclientclass": 6, "workerinfoenum": 6, "batcherstatusenum": 6, "memoryallocatorsenum": 6, "statusenum": 6, "updatecommandtypenamespac": 6, "googlenamespac": 6, "protobuftempl": 6, "mapnamespac": 6, "stdtemplat": 6, "less": [6, 67, 108, 174, 175, 350, 480, 497, 498, 523, 524, 556, 693, 746, 765], "lt": 6, "parametermap": [6, 8, 26, 32, 34, 37, 38, 40, 50, 53, 55, 66, 69, 71, 72, 77, 79, 105, 108, 174, 175, 200, 231, 232, 351, 353, 358, 359, 361, 380, 384, 386, 387, 389, 390, 420, 421, 468, 480, 485, 486, 487, 488, 489, 492, 493, 494, 497, 498, 505, 506, 509, 522, 523, 524, 525, 526, 527, 528, 531, 537, 538, 541, 554, 555, 556, 557, 560, 561, 563, 564, 574, 575, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 681, 693, 746, 748, 749, 750, 763], "gt": 6, "sent": [7, 38, 77, 106, 330, 333, 537, 544, 640, 746, 749, 750, 752, 763], "void": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 38, 40, 45, 50, 53, 54, 55, 60, 61, 62, 64, 66, 67, 70, 71, 73, 74, 75, 77, 78, 79, 87, 90, 91, 105, 326, 327, 328, 332, 334, 335, 350, 352, 353, 354, 355, 357, 360, 361, 364, 365, 366, 369, 371, 372, 374, 375, 394, 395, 398, 401, 402, 409, 419, 420, 421, 422, 424, 427, 433, 441, 443, 444, 446, 449, 453, 454, 455, 457, 458, 485, 486, 487, 488, 489, 492, 493, 494, 496, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 578, 580, 581, 582, 583, 584, 585, 587, 588, 594, 595, 599, 600, 604, 605, 606, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 637, 638, 640, 641, 651, 677, 678, 683, 746, 749, 761], "addrequest": [7, 503, 504, 507, 509, 614], "inferencerequestptr": [7, 178, 368, 429, 468, 501, 503, 504, 528, 529, 558, 559, 581, 583, 584, 601, 634, 687, 694], "setbuff": [7, 503, 504, 507, 509, 614], "bufferptr": [7, 28, 60, 178, 468, 501, 503, 504, 506, 507, 509, 519, 528, 546, 547, 548, 551, 552, 564, 583, 601, 610, 611, 613, 614, 615, 616, 617, 618, 621, 622, 625, 690, 694], "getrequest": [7, 13, 108, 205, 258, 468, 503, 504, 528, 529, 530, 543, 566, 567, 581, 583, 584, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625, 693], "size_t": [7, 8, 9, 28, 29, 30, 40, 45, 54, 55, 60, 61, 67, 69, 73, 75, 79, 105, 108, 266, 319, 324, 330, 347, 415, 416, 432, 434, 439, 444, 474, 485, 490, 492, 493, 494, 495, 497, 498, 500, 503, 504, 505, 506, 507, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 529, 530, 535, 539, 540, 541, 543, 546, 547, 548, 549, 550, 551, 552, 556, 557, 558, 562, 563, 564, 566, 567, 570, 571, 572, 577, 579, 580, 581, 583, 588, 589, 590, 598, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 630, 637, 638, 639, 641, 693, 729, 746], "index": [7, 40, 432, 434, 492, 498, 503, 504, 515, 517, 519, 522, 523, 526, 527, 529, 537, 538, 539, 540, 544, 545, 556, 577, 578, 581, 583, 595, 614, 746, 747, 748], "getinputbuff": [7, 503, 504, 624, 625], "getoutputbuff": [7, 503, 504, 625], "getrawinputbuff": [7, 503, 504, 507, 509], "getrawoutputbuff": [7, 503, 504, 507, 509], "bool": [7, 26, 30, 32, 34, 38, 53, 62, 64, 66, 67, 70, 71, 77, 90, 91, 331, 445, 448, 451, 485, 486, 487, 488, 489, 490, 493, 496, 497, 498, 502, 503, 504, 507, 509, 519, 521, 522, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 537, 538, 540, 544, 545, 548, 552, 553, 554, 555, 556, 557, 560, 561, 563, 565, 569, 574, 578, 581, 583, 585, 586, 587, 594, 595, 604, 606, 607, 608, 617, 619, 630, 642, 645, 682, 686, 739, 746, 763], "getinputs": [7, 40, 492, 498, 503, 504, 529, 530, 539, 543, 557, 611, 621, 746, 763], "getoutputs": [7, 503, 504, 507, 509], "inlin": [7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 36, 38, 39, 40, 50, 53, 67, 74, 77, 78, 79, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 329, 337, 338, 339, 340, 347, 445, 446, 447, 448, 449, 450, 451, 454, 455, 572, 576, 577, 593, 604, 605, 608, 626, 630, 637, 638, 640, 641, 645, 746], "auto": [7, 38, 39, 79, 90, 337, 338, 339, 340, 363, 377, 392, 393, 484, 490, 497, 498, 503, 504, 507, 509, 515, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 535, 537, 539, 540, 541, 544, 546, 549, 551, 554, 556, 557, 560, 562, 563, 564, 565, 566, 567, 568, 570, 572, 574, 577, 578, 580, 581, 583, 585, 587, 591, 593, 594, 595, 596, 599, 602, 604, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 710, 715, 716, 717, 718, 719, 728, 733, 735, 737, 740, 741, 742, 743, 744, 745, 747, 749, 755, 761, 766], "begin": [7, 67, 337, 339, 497, 504, 512, 519, 522, 544, 546, 551, 553, 556, 557, 563, 568, 570, 587, 593, 599, 604, 611, 617, 619, 621, 625, 746, 755], "hardbatch": [8, 108, 185, 468, 507, 508, 614, 615, 616, 620, 693], "softbatch": [8, 108, 187, 468, 509, 510, 624, 693], "pure": [8, 26], "virtual": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 34, 38, 45, 54, 55, 60, 66, 67, 69, 73, 75, 77, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 485, 495, 506, 512, 543, 548, 581, 624, 746, 763], "child": 8, "subclass": [8, 9, 10, 11, 26, 55, 60, 69, 73, 80, 89, 105, 189, 746], "memorypool": [8, 32, 37, 71, 72, 79, 105, 108, 205, 227, 258, 370, 468, 505, 506, 507, 528, 537, 538, 549, 550, 560, 561, 563, 564, 581, 583, 584, 614, 615, 616, 624, 693], "encapsul": [8, 37, 72], "setbatchs": [8, 505, 506, 563], "batch_siz": [8, 28, 60, 61, 330, 485, 505, 506, 507, 509, 521, 546, 547, 548, 549, 550, 551, 552, 558, 566, 567, 610, 611, 614, 615, 616, 617, 620, 621, 623, 746, 749, 750, 763], "setnam": [8, 50, 62, 73, 492, 496, 498, 500, 505, 506, 523, 526, 539, 553, 557, 562, 563, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 766], "getnam": [8, 50, 62, 73, 492, 496, 498, 500, 505, 506, 507, 509, 523, 526, 539, 540, 551, 553, 557, 562, 583, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 746], "blockingqueu": [8, 278, 468, 505, 506, 538, 545, 601, 649, 666, 679, 687, 690, 694], "requestcontainerptr": [8, 178, 468, 501, 505, 506, 507, 509, 694], "getinputqueu": [8, 505, 506], "batchptrqueu": [8, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 183, 424, 427, 468, 505, 506, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694], "getoutputqueu": [8, 505, 506, 563], "batcherstatu": [8, 108, 183, 468, 505, 506, 563, 693], "getstatu": [8, 105, 505, 506, 563, 624], "protect": [8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 105, 485, 506, 543, 581, 624], "attribut": [8, 10, 22, 23, 105, 747, 752], "batch_size_": [8, 105, 505, 506, 507, 509, 563, 564, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "shared_ptr": [8, 34, 35, 385, 397, 486, 493, 497, 498, 501, 505, 506, 522, 527, 529, 530, 537, 538, 543, 544, 545, 569, 570, 571, 574, 575, 581, 583, 584, 587, 588, 594, 595, 611, 621, 622, 653, 660, 666, 679, 681, 684, 746], "input_queue_": [8, 505, 506, 507, 509], "output_queue_": [8, 505, 506, 507, 509], "thread_": [8, 505, 506], "model_": [8, 493, 498, 505, 506, 509, 540, 557, 620], "parameters_": [8, 492, 493, 494, 497, 498, 505, 506, 509, 529, 540, 541, 556, 557], "pool_": [8, 105, 505, 506, 507, 509, 537, 538, 614, 624, 625], "cpubuff": [9, 108, 190, 191, 468, 507, 509, 513, 514, 546, 693], "varttensorbuff": [9, 108, 192, 193, 194, 195, 468, 515, 516, 517, 518, 551, 625, 693], "extend": [9, 105], "underli": [9, 29, 67, 75, 746], "unneed": 9, "address": [9, 28, 34, 36, 38, 39, 45, 54, 55, 60, 67, 69, 73, 77, 486, 487, 522, 525, 546, 547, 548, 549, 551, 552, 563, 581, 614, 619, 623, 630, 746, 748, 752, 755, 763, 766], "byte": [9, 30, 45, 54, 55, 67, 69, 73, 324, 415, 416, 454, 492, 493, 494, 495, 497, 498, 500, 512, 513, 514, 519, 520, 523, 526, 529, 532, 539, 540, 541, 546, 547, 548, 551, 552, 556, 557, 560, 562, 566, 567, 570, 572, 581, 598, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 630, 704, 746, 765], "typenam": [9, 10, 22, 23, 67, 90, 91, 105, 107, 337, 338, 339, 340, 363, 392, 393, 400, 401, 402, 432, 434, 439, 444, 490, 497, 498, 512, 523, 524, 526, 527, 529, 556, 558, 578, 579, 580, 581, 583, 593, 595, 598, 607, 608, 617, 624, 626, 637, 638, 641, 642, 643, 739, 746], "calldatabas": [10, 108, 258, 468, 581, 693], "calldataserverstream": [10, 108, 258, 468, 581, 693], "requesttyp": [10, 11, 22, 23, 581], "replytyp": [10, 11, 22, 23, 581], "calldataunari": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 108, 258, 468, 581, 693], "asyncservic": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 258, 468, 581, 694], "servercompletionqueu": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 258, 581, 694], "cq": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 581], "proce": [10, 11, 581, 759], "callstatu": [10, 581], "enumer": [10, 30, 149, 150, 151, 152, 156, 157, 158, 159], "addnewcalldata": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 581], "waitforrequest": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 581], "handlerequest": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 581], "noexcept": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 574, 581], "service_": [10, 581], "cq_": [10, 581], "servercontext": [10, 258, 581, 694], "ctx_": [10, 581], "request_": [10, 529, 530, 581], "reply_": [10, 581], "status_": [10, 505, 506, 581, 623, 624], "hashardwarerequest": [11, 12, 522], "hashardwarerespons": [11, 12, 522], "modelinferrequest": [11, 13, 108, 200, 201, 258, 468, 522, 523, 524, 581, 693], "modelinferrespons": [11, 13, 352, 357, 522, 523, 524, 581], "modellistrequest": [11, 14, 522], "modellistrespons": [11, 14, 522], "modelloadrequest": [11, 15, 522], "modelloadrespons": [11, 15, 522], "modelmetadatarequest": [11, 16, 522], "modelmetadatarespons": [11, 16, 349, 355, 522, 523, 524], "modelreadyrequest": [11, 17, 522], "modelreadyrespons": [11, 17, 522], "modelunloadrequest": [11, 18, 522], "modelunloadrespons": [11, 18, 522], "serverliverequest": [11, 19, 522], "serverliverespons": [11, 19, 522], "servermetadatarequest": [11, 20, 522], "servermetadatarespons": [11, 20, 522], "serverreadyrequest": [11, 21, 522], "serverreadyrespons": [11, 21, 522], "workerloadrequest": [11, 24, 522], "workerloadrespons": [11, 24, 522], "workerunloadrequest": [11, 25, 522], "workerunloadrespons": [11, 25, 522], "sharedst": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 36, 66, 70, 87, 108, 238, 369, 372, 395, 398, 468, 528, 560, 561, 581, 582, 583, 584, 585, 586, 587, 588, 631, 636, 693], "getrepli": [13, 581], "serverasyncwrit": [22, 581], "responder_": [22, 23, 581], "serverasyncresponsewrit": [23, 258, 581, 694], "grpcclient": [26, 108, 163, 199, 468, 486, 522, 693, 746, 749, 763, 766], "httpclient": [26, 77, 78, 108, 164, 202, 468, 487, 525, 531, 693, 746, 748, 749, 750, 752, 761, 763, 766], "websocketcli": [26, 108, 166, 208, 468, 489, 531, 693, 746, 763], "serverl": [26, 34, 38, 66, 77, 485, 486, 487, 488, 489, 522, 525, 528, 531, 581, 746, 749, 752, 763], "live": [26, 34, 38, 66, 77, 522, 525, 584, 746, 752, 763, 767], "true": [26, 34, 38, 66, 70, 77, 331, 445, 448, 497, 498, 507, 509, 521, 528, 537, 544, 546, 551, 554, 563, 565, 568, 570, 578, 581, 583, 585, 594, 595, 596, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 642, 643, 746, 755, 761, 763], "otherwis": [26, 34, 38, 66, 77, 594, 595, 746, 763, 765], "serverreadi": [26, 34, 38, 66, 77, 485, 486, 487, 488, 489, 521, 522, 525, 528, 531, 581, 746, 763], "modelreadi": [26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 521, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 746, 763], "given": [26, 30, 34, 38, 66, 77, 79, 91, 581, 619, 746, 748, 761, 763], "modelunload": [26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 763], "shut": [26, 34, 38, 66, 77, 537, 581, 746, 752, 763], "workerunload": [26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 763], "symmetri": [26, 34, 38, 66, 77, 746, 763], "inferencerespons": [26, 34, 38, 40, 66, 77, 108, 170, 175, 217, 330, 333, 348, 352, 357, 366, 382, 388, 399, 468, 485, 486, 487, 488, 489, 492, 493, 498, 501, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 539, 540, 557, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 651, 657, 658, 660, 683, 684, 693, 746, 749, 761, 763, 766], "modelinf": [26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 587, 746, 748, 749, 750, 752, 761, 763, 766], "synchron": [26, 34, 38, 66, 77, 746, 761, 763], "inferenceresponsefutur": [26, 34, 38, 66, 77, 178, 430, 468, 485, 486, 487, 488, 489, 501, 521, 522, 525, 528, 531, 694, 746, 749], "later": [26, 34, 38, 66, 77, 746, 749], "hashardwar": [26, 34, 38, 66, 71, 77, 209, 485, 486, 487, 488, 489, 522, 525, 528, 531, 532, 533, 560, 561, 581, 583, 584, 746, 763], "intnum": [26, 34, 38, 66, 71, 77, 105, 485, 486, 487, 488, 489, 509, 519, 520, 522, 525, 528, 531, 532, 533, 544, 545, 556, 560, 561, 581, 583, 614, 615, 616, 619, 620, 624, 625, 746, 763], "minimum": [26, 34, 38, 66, 77, 324, 746, 752, 757, 763, 766], "native_intern": [27, 41, 43, 46, 47, 175, 220], "doxygenclass": [27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 746], "cannot": [27, 31, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 63, 65, 67, 68, 69, 72, 73, 76, 84, 85, 86, 109, 115, 122, 123, 153, 154, 155, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 412, 413, 431, 435, 442, 525, 563, 596, 613, 614, 618, 619, 622, 629, 645, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 761], "doxygen": [27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746, 747], "xml": [27, 31, 33, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 57, 58, 59, 63, 65, 68, 76, 86, 109, 115, 122, 123, 153, 154, 155, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 344, 345, 353, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462, 629, 646, 652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691, 720, 738, 746], "cpu_alloc": [28, 142, 163, 164, 165, 166, 168, 169, 174, 178, 179, 182, 183, 184, 186, 190, 191, 199, 200, 204, 205, 215, 225, 226, 227, 232, 238, 241, 245, 246, 247, 248, 252, 258, 260, 264, 265, 272, 278, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 549, 694], "block_siz": [28, 546, 547], "max_alloc": [28, 546, 547, 551, 552], "element": [29, 73, 75, 347, 439, 444, 519, 520, 570, 581, 583, 620, 761, 763], "data_typ": [29, 30, 40, 45, 55, 73, 75, 134, 141, 160, 168, 169, 173, 175, 177, 191, 195, 197, 199, 200, 201, 203, 204, 205, 206, 213, 228, 249, 258, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 341, 342, 343, 483, 492, 493, 494, 496, 498, 500, 514, 517, 518, 519, 520, 522, 523, 524, 526, 527, 528, 529, 535, 536, 539, 541, 551, 552, 557, 562, 572, 581, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 639, 650, 694, 746, 763], "alias": [30, 581, 746, 765], "deprec": [30, 746], "uint8": [30, 490, 519, 535, 611, 617, 619, 621, 763], "uint16": [30, 490, 519, 535, 619, 763], "uint32": [30, 490, 519, 535, 557, 566, 567, 611, 613, 614, 615, 616, 617, 619, 621, 622, 752, 763], "uint64": [30, 490, 519, 523, 526, 527, 535, 554, 583, 619, 763], "int8": [30, 490, 519, 535, 611, 613, 618, 619, 621, 622, 749, 763, 764], "int16": [30, 490, 519, 535, 619, 763], "int32": [30, 67, 490, 519, 535, 619, 746, 763], "int64": [30, 490, 519, 526, 527, 535, 619, 763, 766], "fp32": [30, 490, 519, 535, 610, 611, 619, 620, 623, 755, 763, 764], "fp64": [30, 490, 519, 535, 619, 763], "constexpr": [30, 319, 324, 343, 363, 392, 393, 410, 484, 490, 509, 512, 519, 523, 524, 526, 527, 556, 568, 578, 581, 583, 589, 594, 598, 608, 609, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 624, 625, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 710, 733, 735, 737, 739, 740, 741, 742, 743, 744, 745, 746], "char": [30, 67, 108, 266, 282, 336, 346, 453, 474, 490, 497, 498, 512, 517, 518, 519, 523, 524, 526, 527, 532, 556, 560, 563, 565, 568, 572, 574, 575, 581, 583, 587, 589, 590, 591, 592, 596, 597, 604, 605, 610, 611, 613, 614, 617, 618, 619, 621, 622, 623, 693, 746], "implicit": [30, 746], "convers": [30, 490, 535, 619, 746], "str": [30, 336, 343, 445, 446, 447, 448, 450, 451, 490, 497, 498, 523, 526, 527, 534, 539, 540, 581, 583, 591, 592, 599, 604, 611, 619, 621, 746, 763], "cap": [30, 613, 618, 622, 746], "friend": [30, 45, 53, 54, 67, 70, 490, 492, 493, 497, 498, 502, 564, 746], "ostream": [30, 45, 53, 54, 67, 108, 211, 216, 217, 468, 490, 492, 493, 497, 498, 534, 539, 540, 693, 746], "o": [30, 45, 53, 54, 67, 341, 403, 404, 405, 490, 492, 493, 497, 498, 534, 539, 540, 746, 763, 764, 766], "stream": [30, 87, 341, 596, 613, 622, 746, 760], "http_intern": [31, 44, 49, 52, 140, 161, 167, 168, 169, 170, 173, 174, 178, 189, 202, 208, 220, 235, 236, 246, 260, 285, 303, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 525, 531, 583, 637, 674, 675, 676, 677, 694], "unique_ptr": [32, 61, 71, 105, 486, 487, 488, 489, 501, 502, 504, 506, 507, 509, 518, 522, 525, 528, 531, 532, 533, 537, 538, 545, 549, 550, 552, 555, 560, 561, 564, 571, 574, 575, 581, 594, 595, 601, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 647, 648, 655, 656, 664, 689], "getpool": [32, 71, 528, 537, 538, 560, 561, 581, 583, 587], "grpcclientimpl": [34, 108, 199, 468, 486, 522, 693, 746], "50051": [34, 484, 703, 746, 764, 766], "connect": [34, 38, 66, 77, 78, 81, 87, 521, 525, 531, 532, 560, 587, 619, 746, 747, 749, 755, 760, 763, 768], "channel": [34, 35, 486, 522, 578, 619, 642, 746], "incomplet": [34, 38, 66, 72, 77, 746], "forc": [34, 38, 66, 77, 746, 761], "explicitli": [34, 38, 66, 77, 614, 615, 616, 617, 620, 746, 749, 750, 752, 755], "grpcinferenceservic": [34, 35, 348, 522, 581, 671], "stub": [34, 35, 200, 348, 522, 523, 747], "getstub": [34, 35, 522], "static": [36, 71, 490, 520, 529, 545, 556, 558, 561, 571, 581, 599, 747], "getinst": [36, 507, 509, 528, 532, 545, 571, 581, 583, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "singleton": [36, 581], "cq_count": [36, 581], "meant": 37, "fix": 37, "httpclientimpl": [38, 108, 202, 468, 487, 525, 693, 746], "stringmap": [38, 39, 178, 373, 375, 376, 377, 468, 487, 493, 498, 501, 525, 526, 527, 540, 557, 574, 575, 694, 746], "header": [38, 39, 373, 375, 376, 377, 487, 512, 525, 574, 575, 596, 746, 747, 755, 760, 763], "pair": [38, 67, 517, 532, 544, 545, 557, 560, 563, 577, 606, 610, 611, 613, 621, 622, 623, 625, 746, 763], "max": [38, 509, 513, 519, 546, 580, 594, 610, 611, 613, 617, 618, 619, 621, 622, 623, 746, 760], "getclient": [38, 39, 525], "gethead": [38, 39, 525, 574, 583], "getclientnum": [38, 39, 525], "inference_request": [40, 45, 50, 134, 141, 160, 167, 170, 171, 174, 178, 184, 186, 198, 199, 200, 202, 203, 205, 208, 217, 223, 228, 230, 243, 244, 258, 260, 264, 270, 275, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 403, 483, 507, 509, 521, 522, 523, 525, 526, 528, 531, 540, 546, 551, 553, 566, 567, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 627, 694], "setcallback": [40, 108, 205, 258, 264, 468, 471, 492, 498, 528, 529, 539, 557, 566, 567, 581, 583, 587, 693, 746], "getcallback": [40, 492, 539, 566, 567, 746], "runcallback": [40, 492, 498, 539, 557, 613, 618, 622, 746], "runcallbackonc": [40, 492, 498, 539, 557, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 746], "again": [40, 619, 746, 752], "op": [40, 746], "runcallbackerror": [40, 492, 498, 507, 509, 539, 557, 566, 611, 613, 615, 617, 618, 619, 620, 621, 622, 623, 746], "string_view": [40, 167, 175, 203, 343, 445, 448, 450, 451, 490, 492, 498, 526, 539, 557, 574, 575, 604, 746], "error_msg": [40, 492, 498, 525, 539, 540, 557, 746], "addinputtensor": [40, 62, 492, 496, 498, 522, 526, 539, 553, 557, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 746, 749, 752, 763, 766], "uint64_t": [40, 45, 55, 62, 73, 343, 490, 492, 493, 494, 496, 498, 500, 519, 523, 524, 526, 527, 529, 539, 541, 552, 553, 557, 562, 581, 583, 611, 616, 617, 620, 621, 623, 625, 746, 749, 766], "shape": [40, 45, 55, 62, 73, 329, 492, 493, 494, 496, 498, 500, 515, 517, 518, 522, 523, 526, 539, 540, 541, 551, 552, 553, 554, 557, 562, 566, 567, 581, 583, 611, 613, 614, 617, 619, 620, 621, 623, 625, 639, 746, 749, 750, 752, 755, 760, 763, 764, 766], "inferencerequestinput": [40, 55, 108, 169, 175, 206, 216, 370, 425, 428, 468, 492, 496, 498, 505, 507, 509, 529, 539, 557, 558, 581, 583, 614, 619, 625, 693, 746, 752, 761, 763, 766], "setinputtensordata": [40, 492, 507, 509, 528, 539, 614, 746], "addoutputtensor": [40, 62, 492, 496, 498, 526, 539, 553, 557, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 746, 763], "inferencerequestoutput": [40, 108, 169, 175, 367, 423, 426, 468, 492, 498, 526, 539, 557, 558, 581, 583, 693, 746, 763], "getinput": [40, 62, 108, 243, 244, 258, 468, 492, 496, 498, 507, 509, 523, 525, 526, 528, 539, 553, 557, 566, 567, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 693, 746, 763], "getoutput": [40, 53, 62, 108, 243, 244, 258, 468, 492, 493, 496, 498, 523, 526, 539, 540, 553, 557, 566, 567, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 693, 746, 749, 750, 752, 763, 766], "getid": [40, 53, 492, 493, 498, 523, 526, 566, 567, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746], "id": [40, 53, 77, 79, 93, 102, 150, 156, 492, 493, 498, 523, 526, 537, 540, 544, 557, 563, 564, 570, 571, 581, 583, 594, 595, 614, 625, 640, 746, 750, 755, 760, 763, 764, 770], "setid": [40, 53, 492, 493, 498, 523, 526, 540, 557, 566, 567, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746], "getparamet": [40, 50, 53, 55, 492, 493, 494, 498, 523, 526, 539, 540, 541, 613, 618, 622, 746, 763], "setparamet": [40, 50, 55, 492, 494, 498, 526, 541, 581, 583, 746], "inferencetensor": [45, 54, 73, 108, 171, 468, 492, 493, 494, 539, 540, 541, 693, 746, 763], "setdata": [45, 50, 54, 492, 493, 498, 523, 526, 529, 539, 540, 557, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 766], "getdata": [45, 50, 54, 492, 493, 498, 507, 509, 523, 526, 527, 528, 529, 539, 540, 557, 566, 567, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 746, 766], "serializes": [45, 54, 55, 67, 69, 73, 492, 493, 494, 495, 497, 498, 500, 539, 540, 541, 556, 557, 562, 746], "data_out": [45, 54, 55, 67, 69, 73, 492, 493, 494, 495, 497, 498, 500, 539, 540, 541, 556, 557, 562, 746], "space": [45, 54, 55, 67, 69, 73, 324, 602, 746, 764, 765], "deseri": [45, 54, 55, 67, 69, 73, 492, 493, 494, 495, 497, 498, 500, 539, 540, 541, 556, 557, 562, 625, 746], "data_in": [45, 54, 55, 67, 69, 73, 492, 493, 494, 495, 497, 498, 500, 539, 540, 541, 556, 557, 562, 746], "thrown": [45, 54, 55, 67, 69, 73, 80, 81, 82, 83, 84, 85, 88, 89, 640, 746], "my_class": [45, 53, 54, 403, 492, 493, 498, 539, 746], "cout": [45, 53, 54, 67, 546, 551, 563, 565, 614, 746, 749], "predict_api_intern": [51, 175], "inference_respons": [53, 54, 134, 141, 160, 161, 169, 171, 174, 178, 198, 199, 200, 202, 203, 205, 208, 216, 243, 244, 258, 260, 264, 275, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 404, 405, 483, 521, 522, 523, 525, 526, 528, 531, 539, 566, 567, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 628, 694], "inferenceresponseoutput": [53, 55, 108, 170, 217, 423, 426, 468, 493, 498, 523, 526, 540, 557, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 638, 693, 746, 749, 763, 766], "addoutput": [53, 493, 498, 523, 526, 540, 557, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746, 763], "setmodel": [53, 493, 498, 523, 526, 540, 557, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 746], "getmodel": [53, 493, 498, 523, 540, 557, 583, 746], "iserror": [53, 493, 498, 540, 557, 581, 583, 587, 746, 749, 750, 752, 763, 766], "geterror": [53, 493, 498, 540, 557, 581, 583, 587, 746, 752, 763], "inference_tensor": [55, 134, 141, 169, 170, 174, 177, 275, 303, 492, 493, 694], "cppnativeapi": [56, 182, 207, 529, 530], "drogonhttp": [56, 543], "grpcapiunari": 56, "drogonw": [56, 543], "memory_alloc": [60, 142, 157, 177, 178, 189, 224, 227, 303, 512, 547, 550, 552, 630, 694], "cpualloc": [60, 108, 224, 468, 546, 547, 549, 693], "model_metadata": [62, 134, 141, 160, 162, 167, 169, 177, 200, 203, 204, 215, 238, 301, 303, 483, 485, 523, 526, 527, 538, 561, 624, 680, 694], "initializer_list": [62, 175, 496, 498, 553, 557, 746, 749], "modelmetadatatensor": [62, 173, 175, 379, 423, 425, 426, 428, 468, 496, 498, 526, 553, 557, 694, 746], "getplatform": [62, 496, 498, 523, 526, 553, 557, 763], "setreadi": [62, 496, 498, 553, 557, 624, 746, 763], "isreadi": [62, 496, 498, 537, 544, 553, 557, 746, 763], "predict_api": [63, 68, 207, 209, 222, 235, 434, 435, 530, 532, 545, 558, 646, 683, 684, 685, 686], "setrepositori": [64, 71, 554, 555, 560, 561, 585], "filesystem": [64, 70, 71, 74, 108, 179, 231, 232, 237, 238, 296, 297, 468, 502, 554, 555, 560, 561, 585, 619, 620, 693, 746], "repository_path": [64, 70, 71, 502, 554, 555, 560, 561, 585, 746, 763], "load_exist": [64, 70, 71, 502, 554, 555, 560, 561, 585, 746, 763], "getrepositori": [64, 554, 555, 560], "setendpoint": [64, 554, 555, 560], "enablemonitor": [64, 554, 555, 560], "use_pol": [64, 70, 71, 502, 554, 555, 560, 561, 585, 746, 763], "nativeclientimpl": [66, 108, 205, 468, 488, 528, 693, 746], "serializ": [67, 68, 73, 108, 172, 468, 495, 497, 498, 500, 693, 746], "further": [67, 746, 761], "doubl": [67, 91, 347, 444, 490, 497, 509, 519, 523, 524, 526, 527, 556, 570, 571, 574, 577, 578, 579, 580, 581, 607, 613, 618, 622, 642, 682, 686, 746, 763], "int32_t": [67, 490, 497, 498, 509, 517, 518, 519, 523, 524, 526, 527, 535, 556, 563, 574, 581, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 682, 686, 746, 763], "new_kei": [67, 497, 556, 746], "overwritten": [67, 746], "old": [67, 746], "just": [67, 525, 746, 749, 750, 763, 766, 771], "eras": [67, 497, 537, 544, 546, 556, 563, 619, 746, 763], "No": [67, 583, 587, 614, 746, 749, 752, 763], "rais": [67, 80, 83, 596, 615, 746, 754, 763], "constiter": [67, 497, 556, 746], "cbegin": [67, 497, 556, 599, 746], "past": [67, 746], "cend": [67, 497, 556, 746], "self": [67, 404, 405, 497, 540, 746, 763], "mixin": [69, 134, 174, 175, 177, 303, 497, 498, 500, 694], "serverimpl": [70, 108, 263, 468, 502, 528, 585, 586, 693, 746], "starthttp": [70, 502, 565, 585, 746, 749, 750, 752, 763], "uint16_t": [70, 395, 398, 490, 502, 519, 523, 524, 527, 565, 581, 583, 584, 585, 746], "stophttp": [70, 502, 585, 746, 763], "startgrpc": [70, 502, 565, 585, 746, 749, 763], "stopgrpc": [70, 502, 585, 746, 763], "setmodelrepositori": [70, 502, 565, 585, 746, 763], "found": [70, 84, 522, 532, 537, 544, 546, 551, 563, 565, 581, 583, 587, 610, 619, 623, 746, 763, 764, 765, 767, 768], "enablerepositorymonitor": [70, 71, 502, 560, 561, 565, 585, 746, 763], "turn": [70, 432, 434, 746, 763], "poll": [70, 565, 746, 763], "gethardwar": [71, 209, 532, 533, 560, 561], "soft": [72, 138, 161, 168, 169, 174, 178, 183, 191, 220, 227, 236, 241, 246, 248, 252, 278, 282, 284, 301, 303, 624, 694, 738], "onward": 72, "getshap": [73, 498, 500, 523, 526, 539, 540, 551, 553, 557, 562, 583, 611, 614, 617, 619, 620, 621, 766], "setshap": [73, 498, 500, 523, 526, 562, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 766], "getdatatyp": [73, 498, 500, 507, 509, 523, 526, 528, 529, 539, 540, 546, 551, 553, 557, 562, 581, 583, 611, 614, 617, 619, 621, 766], "setdatatyp": [73, 498, 500, 523, 526, 557, 562, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 766], "getsiz": [73, 90, 498, 500, 507, 509, 519, 523, 526, 528, 529, 539, 546, 551, 557, 562, 581, 583, 587, 594, 595, 613, 614, 622, 625, 763, 766], "filewatchlisten": [74, 555], "handlefileact": [74, 554, 555], "efsw": [74, 232, 554, 555, 747], "watchid": [74, 554, 555], "watch_id": [74, 554, 555], "filenam": [74, 437, 554, 555, 602, 603, 619, 764], "old_filenam": [74, 554, 555], "vart_tensor": [75, 139, 189, 228, 302, 303, 551, 625, 694], "vart": [75, 108, 192, 193, 195, 287, 288, 290, 298, 299, 302, 515, 516, 517, 518, 552, 610, 611, 613, 621, 622, 625, 693, 747], "tensorbuff": [75, 515, 516, 517, 518, 610, 611, 613, 621, 622, 625], "gettensorbuff": [75, 515, 516, 517, 518, 625], "vector_buff": [76, 175, 195, 207, 210, 220, 222], "websocket": [77, 78, 87, 94, 99, 103, 133, 140, 162, 164, 169, 170, 175, 178, 204, 303, 525, 587, 694, 747, 754, 763], "websocketclientimpl": [77, 108, 208, 468, 489, 531, 693, 746], "transact": [77, 746], "w": [77, 515, 517, 578, 612, 613, 644, 746], "ws_address": [77, 78, 489, 531, 746, 763], "http_address": [77, 78, 489, 531, 746, 763], "modelinferw": [77, 489, 531, 746, 763], "standard": [77, 168, 270, 746, 751, 754, 755, 763], "modelrecv": [77, 489, 531, 746, 763], "disambigu": [77, 746, 763], "know": [77, 525, 563, 581, 746, 763], "beforehand": [77, 746, 763], "encod": [77, 266, 267, 320, 321, 322, 323, 324, 589, 613, 617, 618, 622, 746, 763], "close": [77, 87, 489, 531, 574, 587, 623, 746, 763], "recv": [77, 78, 531], "getwsclient": [77, 78, 531], "gethttpclient": [77, 78, 531], "getbatch": [79, 532, 537, 563, 564], "inferencerequestptrqueu": [79, 278, 468, 601, 694], "joinal": [79, 563, 564], "uniqu": [79, 575, 581, 755, 764], "getgroups": [79, 537, 544, 563, 564], "getbatchs": [79, 105, 563, 564, 624], "getmetadata": [79, 105, 537, 544, 563, 564, 624], "runtime_error": [80, 82, 83, 84, 85, 88, 108, 168, 468, 491, 531, 546, 549, 551, 554, 563, 581, 583, 587, 619, 693, 746], "connection_error": [80, 108, 168, 468, 491, 521, 522, 525, 693, 746, 749], "fail": [80, 81, 454, 525, 537, 544, 583, 587, 589, 617, 619, 640, 746, 748, 752, 755, 765], "bad_statu": [81, 89, 108, 168, 468, 491, 522, 525, 693, 746], "variabl": [82, 108, 433, 507, 509, 529, 583, 587, 613, 615, 617, 618, 622, 625, 640, 693, 746, 766, 770], "third": [83, 746], "parti": [83, 746], "websocketcontrol": [87, 265, 588], "primarili": 87, "handlenewmessag": [87, 587, 588], "websocketconnectionptr": [87, 457, 587, 588], "conn": [87, 457, 532, 560, 587, 588], "websocketmessagetyp": [87, 531, 587, 588], "invok": [87, 770], "handleconnectionclos": [87, 587, 588], "handlenewconnect": [87, 587, 588], "httprequestptr": [87, 373, 375, 376, 525, 526, 527, 583, 584, 587, 588], "req": [87, 370, 375, 385, 397, 429, 507, 509, 525, 528, 529, 531, 558, 566, 567, 581, 583, 584, 587, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 760], "ws_path_list_begin": [87, 588], "ws_path_add": [87, 588], "invalid": [88, 342, 356, 414, 415, 416, 524, 525, 527, 532, 560, 581, 746], "environment_not_set_error": [89, 108, 168, 468, 491, 585, 625, 693, 746], "external_error": [89, 108, 168, 468, 491, 532, 560, 563, 610, 620, 623, 693, 746], "file_not_found_error": [89, 108, 168, 468, 491, 554, 563, 614, 620, 623, 693, 746], "file_read_error": [89, 108, 168, 468, 491, 554, 620, 693, 746], "invalid_argu": [89, 108, 168, 468, 490, 491, 507, 509, 525, 526, 527, 528, 532, 535, 537, 544, 554, 563, 568, 578, 581, 583, 587, 614, 619, 620, 623, 625, 693, 746], "ctpl": [90, 147, 282, 302, 303, 625, 694, 710, 747], "thread_num": [90, 594, 595], "queue_siz": [90, 594, 595], "getidl": [90, 594, 595], "getthread": [90, 594, 595], "resiz": [90, 507, 509, 523, 526, 532, 540, 546, 556, 557, 560, 562, 578, 579, 589, 594, 595, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 642, 749, 750], "clearqueu": [90, 594, 595], "pop": [90, 521, 574, 577, 594, 595, 613, 622, 625], "f": [90, 108, 231, 342, 402, 468, 490, 554, 560, 578, 585, 594, 595, 619, 620, 693, 750, 752, 755], "decltyp": [90, 556, 595], "timepoint": [91, 284, 456, 474, 606, 607, 694], "replac": [91, 599, 747, 766], "timestamp": [91, 503, 504], "ratio": [91, 186, 247, 284, 287, 288, 291, 292, 293, 294, 296, 297, 298, 300, 302, 509, 525, 570, 607, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "count": [91, 509, 565, 570, 598, 607, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "durat": [91, 509, 570, 607, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "micro": [91, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "microsecond": [91, 509, 570], "uint32_t": [92, 96, 101, 104, 490, 519, 524, 527, 566, 567, 581, 614, 615, 616, 625], "spawn": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 563, 581, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "input_queu": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 424, 427, 537, 538, 544, 545, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "224x224": [93, 102], "arrai": [93, 98, 102, 255, 268, 273, 291, 293, 556, 567, 578, 583, 591, 596, 614, 616, 619, 642, 706, 707, 711, 714, 726, 727, 750, 752, 763], "classif": [93, 102, 764], "aks_detect_stream": [94, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 252, 267, 277, 282, 289, 301, 303, 306, 307, 622, 694], "invert": [94, 99, 103, 617], "c_plus_plu": [95, 148, 161, 167, 169, 170, 174, 178, 185, 246, 248, 252, 270, 278, 282, 284, 301, 303, 325, 326, 327, 328, 694, 706, 707, 708, 709], "echo_multi": [97, 143, 148, 161, 167, 169, 170, 174, 175, 178, 181, 185, 197, 246, 248, 252, 270, 275, 278, 282, 284, 301, 303, 345, 426, 427, 428, 461, 694, 711, 712, 713, 714, 724, 725, 726, 727], "3": [97, 324, 400, 432, 434, 556, 567, 578, 589, 611, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 625, 695, 706, 709, 711, 713, 717, 724, 726, 731, 747, 749, 752, 763, 764, 766, 767], "invert_imag": [98, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 248, 252, 267, 270, 282, 284, 301, 303, 406, 694, 716, 717, 718], "pixel": [98, 622], "invert_video": [99, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 252, 267, 282, 301, 303, 407, 408, 613, 622, 694, 719], "evalu": [100, 619], "pt_zendnn": [101, 148, 161, 167, 168, 169, 170, 174, 175, 178, 185, 197, 246, 248, 252, 270, 282, 284, 301, 303, 436, 694, 730, 731, 732], "resnet50_stream": [103, 148, 161, 167, 169, 170, 174, 175, 178, 183, 197, 246, 267, 277, 282, 301, 303, 440, 691, 694, 733, 734, 735, 736, 737], "tf_zendnn": [104, 148, 161, 167, 168, 169, 170, 174, 175, 178, 185, 197, 246, 248, 252, 282, 284, 301, 303, 452, 453, 694], "aksdetect": [105, 108, 288, 289, 475, 611, 613, 693], "aksdetectstream": [105, 108, 290, 475, 613, 693], "cplusplu": [105, 108, 291, 475, 595, 614, 693], "echo": [105, 108, 143, 148, 161, 167, 169, 170, 174, 175, 178, 181, 185, 197, 246, 248, 252, 275, 282, 284, 301, 303, 344, 423, 424, 425, 460, 475, 610, 693, 694, 752, 760, 765, 766], "echomulti": [105, 108, 293, 475, 567, 616, 693], "invertimag": [105, 108, 294, 475, 617, 693], "invertvideo": [105, 108, 295, 475, 618, 693], "migraphxwork": [105, 108, 296, 475, 619, 693], "resnet50stream": [105, 108, 299, 475, 622, 693], "lifecycl": [105, 752], "setpool": [105, 563, 624], "workerstatu": [105, 108, 301, 475, 563, 624, 693], "makebatch": [105, 563, 614, 615, 616, 620, 624], "returninputbuff": [105, 611, 614, 615, 616, 617, 619, 620, 621, 623, 624], "metadata_": [105, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625], "grpc_intern": [107, 140, 161, 167, 169, 170, 173, 174, 178, 199, 235, 236, 249, 258, 285, 303, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 522, 554, 581, 626, 633, 638, 694], "typedef": [108, 693], "pre_post": [108, 137, 151, 152, 468, 576, 577, 578, 579, 580, 693, 694, 750], "protobuf": [108, 199, 200, 201, 231, 258, 300, 350, 420, 421, 468, 476, 522, 523, 524, 554, 581, 623, 693, 747], "adddatatotensor": [108, 200, 468, 523, 524, 693], "inferencerequestinputs": [108, 216, 234, 468, 539, 557, 693], "inferenceresponseoutputs": [108, 217, 468, 540, 693], "memoryhead": [108, 225, 468, 547, 548, 693], "nest": [108, 342, 356, 414, 415, 416, 693], "relationship": [108, 693], "observ": [108, 137, 161, 167, 180, 182, 183, 184, 186, 198, 199, 200, 201, 203, 205, 206, 215, 219, 220, 222, 231, 237, 242, 243, 244, 258, 260, 261, 262, 264, 265, 281, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 357, 431, 468, 503, 505, 506, 507, 509, 521, 522, 523, 524, 526, 528, 529, 538, 542, 543, 545, 554, 560, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 581, 583, 584, 585, 587, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 638, 641, 693, 694, 728, 757, 758, 760], "overload": [108, 200, 203, 455, 468, 523, 526, 645, 693, 763], "inherit": [108, 693, 749], "imagepreprocessopt": [108, 255, 400, 472, 578, 693], "setinputdata": [108, 204, 468, 526, 527, 583, 693], "setoutputdata": [108, 200, 203, 468, 523, 526, 693], "tensors": [108, 239, 468, 562, 693], "updatecommand": [108, 215, 222, 468, 537, 538, 544, 545, 666, 679, 693], "is_ani": [108, 285, 474, 608, 693, 739], "detectrespons": [108, 289, 475, 611, 612, 613, 693], "writedata": [108, 258, 260, 468, 581, 583, 693], "deriv": [108, 693, 747], "calldatahashardwar": [108, 258, 468, 581, 693], "calldatamodelinf": [108, 258, 366, 468, 581, 693], "calldatamodellist": [108, 258, 468, 581, 693], "calldatamodelload": [108, 258, 468, 581, 693], "calldatamodelmetadata": [108, 258, 468, 581, 693], "calldatamodelreadi": [108, 258, 468, 581, 693], "calldatamodelunload": [108, 258, 468, 581, 693], "calldataserverl": [108, 258, 468, 581, 693], "calldataservermetadata": [108, 258, 468, 581, 693], "calldataserverreadi": [108, 258, 468, 581, 693], "calldataworkerload": [108, 258, 468, 581, 693], "calldataworkerunload": [108, 258, 468, 581, 693], "grpcserver": [108, 258, 468, 581, 693], "websocketserv": [108, 265, 471, 583, 587, 588, 693], "modelrepositori": [108, 232, 468, 532, 554, 555, 560, 561, 693], "updatelisten": [108, 232, 468, 554, 555, 693], "threadpool": [108, 272, 474, 594, 595, 625, 693], "imageord": [108, 255, 401, 472, 578, 642, 693], "resizealgorithm": [108, 255, 472, 578, 642, 693], "updatecommandtyp": [108, 215, 222, 468, 537, 538, 544, 545, 640, 693], "addhead": [108, 202, 468, 525, 526, 583, 693], "checkerror": [108, 202, 468, 525, 693], "constructmessag": [108, 290, 295, 468, 613, 618, 622, 693], "creategetrequest": [108, 202, 468, 525, 693], "createinferencerequest": [108, 202, 468, 525, 693], "createpostrequest": [108, 202, 468, 525, 693], "hash": [108, 167, 469, 490, 645, 693], "errorhttprespons": [108, 260, 468, 583, 693], "expandtyp": [108, 233, 468, 556, 693], "findfunc": [108, 240, 468, 563, 693], "getfunct": [108, 291, 468, 614, 693], "getlevel": [108, 245, 468, 568, 693], "getlogdirectori": [108, 245, 468, 521, 568, 569, 583, 585, 693], "gettensorcont": [108, 201, 468, 523, 524, 581, 693], "grpcunarycallback": [108, 258, 468, 581, 693], "inferasyncorderedbatch": [108, 198, 468, 485, 521, 693, 746, 763], "initializeclientlog": [108, 198, 468, 521, 693], "initializeserverlog": [108, 262, 468, 585, 693], "initlogg": [108, 245, 468, 521, 568, 569, 585, 693], "jsonvaluetotyp": [108, 204, 468, 526, 527, 583, 693], "mapjsontomodelmetadata": [108, 203, 468, 525, 526, 527, 693], "mapjsontoparamet": [108, 203, 468, 526, 527, 583, 693], "mapjsontorespons": [108, 203, 468, 525, 526, 527, 531, 693], "mapmodelmetadatatoproto": [108, 200, 468, 523, 524, 581, 693], "mapparameterstojson": [108, 203, 468, 525, 526, 527, 693], "mapparameterstoproto": [108, 200, 468, 522, 523, 524, 693], "mapprototomodelmetadata": [108, 199, 468, 522, 693], "mapprototoparamet": [108, 200, 468, 523, 524, 581, 693], "inferparamet": [108, 200, 350, 468, 523, 524, 693], "mapprototoparameters2": [108, 231, 468, 554, 693], "mapprototorespons": [108, 200, 468, 522, 523, 524, 693], "maprequesttojson": [108, 203, 468, 525, 526, 527, 531, 693], "maprequesttoproto": [108, 200, 201, 468, 522, 523, 524, 693], "mapresponsetoproto": [108, 200, 468, 523, 524, 581, 693], "modelmetadatatensortojson": [108, 203, 468, 526, 693], "modelmetadatatojson": [108, 203, 468, 526, 527, 583, 693], "openmodel": [108, 291, 468, 614, 693], "parsejson": [108, 260, 468, 583, 693], "parsemodel": [108, 231, 232, 468, 554, 555, 560, 693], "parserespons": [108, 260, 468, 583, 693], "calcsoftmax": [108, 257, 472, 579, 580, 693], "centercrop": [108, 152, 253, 472, 576, 578, 693], "nestedloop": [108, 255, 473, 578, 693], "gettopk": [108, 254, 472, 577, 579, 693], "imagepreprocess": [108, 255, 472, 578, 693], "resnet50postprocess": [108, 256, 472, 579, 693], "runinfer": [108, 199, 468, 522, 693], "serverhasextens": [108, 198, 468, 485, 521, 693, 746, 763], "switchovertyp": [108, 167, 468, 490, 523, 526, 581, 583, 693], "addresstostr": [108, 281, 474, 572, 581, 604, 693], "autoexpandenvironmentvari": [108, 276, 474, 599, 600, 610, 611, 613, 621, 622, 625, 693], "base64decod": [108, 266, 474, 589, 590, 611, 617, 621, 693], "base64encod": [108, 266, 474, 589, 590, 613, 617, 618, 622, 693], "containerproduct": [108, 270, 474, 529, 539, 557, 562, 581, 583, 593, 611, 617, 619, 620, 621, 625, 693], "containersum": [108, 270, 474, 567, 593, 614, 616, 693], "endswith": [108, 281, 474, 604, 693], "exec": [108, 147, 303, 474, 693, 694], "gettim": [108, 283, 474, 503, 504, 542, 543, 566, 567, 606, 607, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 693], "islow": [108, 281, 474, 560, 604, 693], "mindecodelength": [108, 266, 474, 589, 693], "minencodelength": [108, 266, 474, 589, 693], "readnthlin": [108, 279, 474, 602, 603, 693], "setthreadnam": [108, 282, 474, 507, 509, 537, 544, 594, 605, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 693], "split": [108, 281, 474, 604, 693], "startswith": [108, 281, 474, 604, 693], "tolow": [108, 281, 474, 528, 532, 581, 583, 587, 604, 693], "zdecompress": [108, 268, 474, 583, 591, 592, 693], "waituntilmodelreadi": [108, 198, 468, 485, 521, 693, 746, 748, 749, 750, 752, 763], "waituntilserverreadi": [108, 198, 468, 485, 521, 693, 746, 749, 752, 763], "openlibrari": [108, 300, 475, 623, 693], "todatatyp": [108, 296, 475, 619, 693], "signalcallbackhandl": [108, 242, 565, 693], "base64": [109, 147, 288, 290, 294, 295, 298, 299, 303, 319, 320, 321, 322, 323, 324, 611, 613, 617, 618, 621, 622, 694, 747, 763], "doxygendefin": [109, 115, 122, 123], "build_opt": [110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 132, 160, 170, 175, 181, 183, 184, 186, 198, 200, 204, 205, 209, 213, 214, 215, 219, 220, 221, 222, 227, 229, 234, 236, 237, 242, 246, 248, 249, 252, 258, 259, 260, 261, 262, 263, 265, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 483, 493, 498, 504, 506, 507, 509, 521, 523, 527, 528, 532, 536, 537, 538, 542, 543, 544, 545, 550, 552, 557, 559, 560, 565, 569, 571, 572, 575, 581, 582, 583, 584, 585, 586, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 700, 701, 702, 703, 704, 705], "migraphxr": 110, "parent": [132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 574, 764], "declar": [132, 160, 162, 163, 164, 165, 166, 169, 170, 175, 181, 183, 184, 186, 196, 199, 200, 204, 207, 210, 220, 225, 227, 236, 238, 241, 247, 252, 258, 265, 278, 284, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 342, 356, 414, 415, 416, 483, 485, 486, 487, 488, 489, 492, 493, 498, 504, 506, 507, 509, 519, 522, 523, 525, 527, 530, 533, 543, 548, 550, 559, 561, 564, 575, 581, 588, 601, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 694], "server_metadata": [134, 160, 162, 238, 303, 483, 485, 561, 635, 694], "memory_pool": [141, 182, 184, 186, 189, 215, 240, 301, 505, 507, 509, 512, 538, 546, 547, 548, 549, 550, 551, 552, 563, 624, 694], "data_types_intern": [141, 161, 167, 168, 228, 302, 303, 551, 625, 694], "request_contain": [141, 161, 178, 182, 184, 186, 200, 203, 205, 214, 237, 240, 258, 260, 261, 264, 303, 505, 507, 509, 523, 526, 528, 537, 560, 563, 581, 583, 584, 587, 634, 694], "vart_tensor_alloc": [142, 161, 168, 169, 193, 213, 226, 303, 549, 694], "center_crop": [145, 255, 303, 329, 578, 694], "get_top_k": [145, 256, 303, 347, 579, 694], "image_preprocess": [145, 151, 152, 253, 303, 400, 401, 402, 642, 694, 715], "resnet50_postprocess": [145, 254, 257, 303, 439, 694], "softmax": [145, 256, 303, 347, 444, 579, 694], "server_intern": [146, 161, 179, 205, 232, 238, 262, 303, 528, 585, 636, 694], "compress": [147, 260, 303, 336, 581, 583, 694], "parse_env": [147, 287, 288, 290, 298, 299, 302, 303, 433, 610, 611, 613, 621, 622, 625, 694], "read_nth_lin": [147, 303, 437, 694], "trait": [147, 200, 201, 203, 204, 258, 303, 523, 524, 526, 527, 581, 643, 694, 739], "inact": [149, 159, 505, 506, 563, 624], "dead": [149, 159, 505, 506, 624], "nhwc": [151, 578, 642], "nchw": [151, 578], "letterboxcrop": [152, 578], "doxygenenum": [153, 154, 155], "ok": [158, 522, 525, 531, 573, 581, 623, 767], "notfound": [158, 573], "notimpl": [158, 573], "recompil": 161, "amdinfer_build_test": [161, 484, 694], "amdinfer_enable_ak": [161, 484, 532, 560, 585, 694], "amdinfer_enable_grpc": [161, 484, 565, 582, 585, 586, 694], "amdinfer_enable_http": [161, 484, 565, 583, 584, 585, 586, 694], "amdinfer_enable_log": [161, 484, 505, 506, 509, 521, 523, 538, 542, 543, 545, 569, 572, 581, 583, 584, 585, 588, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694], "amdinfer_enable_metr": [161, 484, 503, 504, 507, 509, 528, 542, 543, 559, 566, 567, 571, 583, 584, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 694], "amdinfer_enable_migraphx": [161, 484, 532, 560, 694], "amdinfer_enable_ptzendnn": [161, 484, 532, 560, 694], "amdinfer_enable_tfzendnn": [161, 484, 532, 560, 694], "amdinfer_enable_trac": [161, 484, 493, 498, 503, 504, 507, 509, 526, 527, 528, 540, 542, 543, 557, 559, 566, 567, 574, 575, 581, 583, 585, 587, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 623, 625, 694], "amdinfer_enable_v": [161, 484, 532, 535, 536, 549, 552, 560, 694], "kdefaultdrogonthread": [161, 484, 583, 694, 761], "kdefaultgrpcport": [161, 484, 565, 694], "kdefaulthttpport": [161, 484, 565, 694], "kmaxclientbodys": [161, 484, 583, 694], "kmaxgrpcmessages": [161, 484, 581, 694], "kmaxmodelnames": [161, 484, 537, 544, 694], "cstddef": [162, 167, 172, 174, 175, 183, 184, 186, 189, 191, 193, 195, 197, 200, 203, 204, 206, 207, 212, 220, 224, 225, 227, 241, 248, 257, 258, 265, 267, 275, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 485, 490, 495, 497, 498, 506, 507, 509, 512, 514, 516, 518, 520, 523, 526, 527, 529, 530, 535, 543, 547, 548, 550, 552, 564, 571, 580, 581, 588, 590, 598, 610, 611, 614, 615, 616, 617, 618, 619, 620, 621, 623, 625], "cstdint": [167, 174, 175, 179, 186, 195, 200, 201, 203, 206, 212, 233, 240, 242, 251, 255, 258, 261, 287, 288, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 302, 490, 497, 498, 502, 509, 518, 523, 524, 526, 529, 535, 556, 563, 565, 574, 578, 581, 584, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625], "half": [167, 203, 490, 526, 650, 747, 763], "iostream": [167, 209, 223, 228, 237, 242, 490, 532, 546, 551, 560, 565], "lower": [168, 490, 554, 746], "snake": [168, 746], "syntax": [168, 746], "stdexcept": [168, 255, 266, 296, 491, 578, 589, 619], "sstream": [174, 175, 281, 497, 498, 604], "variant": [174, 175, 200, 203, 251, 432, 434, 497, 498, 523, 526, 556, 574, 682, 686], "guard_amdinfer_core_paramet": [174, 497, 694], "parametermapptr": [174, 468, 497, 498, 529, 587, 694], "unordered_set": [175, 176, 198, 199, 202, 209, 237, 258, 260, 498, 499, 521, 522, 525, 532, 560, 581, 583, 635, 746], "inferenceresponsepromiseptr": [175, 178, 468, 498, 501, 529, 530, 694], "unordered_map": [178, 209, 215, 222, 227, 237, 248, 251, 284, 501, 532, 538, 545, 550, 560, 570, 571, 574, 607, 645, 659, 663], "bufferrawptr": [178, 468, 501, 527, 529, 530, 543, 558, 581, 588, 694], "traceptr": [178, 468, 501, 503, 504, 506, 542, 543, 559, 574, 575, 694], "cassert": [180, 182, 202, 203, 208, 209, 214, 223, 228, 233, 237, 239, 245, 255, 258, 273, 275, 291, 293, 300, 503, 505, 525, 526, 531, 532, 537, 546, 551, 556, 560, 562, 568, 578, 581, 596, 598, 614, 616, 623], "batchptr": [181, 468, 504, 506, 610, 611, 613, 614, 615, 616, 617, 618, 619, 621, 622, 625, 649, 694], "algorithm": [186, 190, 196, 198, 203, 234, 264, 271, 281, 287, 288, 290, 294, 296, 297, 298, 299, 300, 302, 509, 512, 513, 519, 521, 526, 557, 578, 587, 594, 604, 610, 611, 613, 617, 619, 620, 621, 622, 623, 625], "kdefaulttimeout": [186, 509, 694], "cstring": [188, 189, 200, 203, 206, 233, 234, 258, 268, 275, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 511, 512, 523, 526, 529, 556, 557, 581, 583, 591, 598, 610, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 625], "tensor_buff": [192, 287, 288, 290, 298, 299, 302, 515, 610, 611, 613, 621, 622, 625], "runner_help": [195, 518, 552], "vectorbuff": [196, 197, 519, 520, 615], "chrono": [198, 208, 220, 231, 251, 260, 284, 290, 299, 503, 504, 521, 531, 542, 543, 554, 559, 574, 583, 606, 607, 613, 622, 625, 692], "repeated_ptr_field": [199, 200, 231, 258, 522, 523, 554, 581], "grpcpp": [199, 258, 522, 581], "pb": [199, 200, 231, 258, 300, 522, 523, 554, 581, 623, 755, 764], "httprequest": [202, 203, 204, 208, 260, 265, 385, 397, 525, 526, 527, 531, 583, 584, 588], "httprespons": [202, 203, 204, 208, 525, 526, 527, 531, 583, 584], "httptype": [202, 203, 208, 265, 525, 526, 531, 584, 588], "trantor": [202, 208, 260, 525, 531, 583, 757], "eventloopthread": [202, 208, 525, 531], "inferencerequestbuild": [206, 235, 498, 529, 558, 584], "inferencerequestinputbuild": [206, 235, 498, 529, 558], "concurrentqueu": [208, 272, 278, 531, 595, 601, 747, 761], "blockingconcurrentqueu": [208, 278, 506, 507, 509, 531, 545, 601, 688, 761], "websocketconnect": [208, 265, 531, 588], "writer": [208, 531], "eventloop": [208, 525, 531], "cctype": [209, 240, 264, 532, 563, 587], "type_trait": [214, 233, 240, 270, 285, 537, 556, 563, 593, 608], "updatecommandqueu": [215, 222, 468, 537, 538, 544, 545, 694], "interfacetyp": [220, 542, 543], "mutabl": [221, 222, 595], "mutex": [224, 248, 272, 547, 552, 570, 571, 595], "kdefaultcpublocks": [226, 468, 549, 694], "fcntl": [231, 554], "io": [231, 554, 755, 763], "zero_copy_stream_impl": [231, 554], "text_format": [231, 554], "model_config": [231, 554], "tupl": [233, 556, 620], "inferencerequestoutputbuild": [235, 498, 558], "jsoncpp": [237, 560], "climit": [240, 294, 563, 617], "dlfcn": [240, 291, 300, 563, 614, 623], "entrypoint": 242, "csignal": [242, 565], "cstdlib": [242, 245, 262, 276, 302, 565, 568, 585, 599, 625], "cxxopt": [242, 565, 747], "usr_interrupt": [242, 565, 694], "kinputlength": [244, 291, 468, 567, 614, 616, 694], "kinputtensor": [244, 291, 468, 567, 614, 616, 694, 707, 714, 727], "koutputlength": [244, 291, 468, 567, 614, 616, 694], "koutputtensor": [244, 291, 468, 567, 614, 616, 694, 706, 711, 726], "sink": [245, 568, 757], "basic_file_sink": [245, 568], "stdout_color_sink": [245, 568], "amdinfer_if_log": [246, 522, 523, 554, 565, 569, 572, 581, 694], "amdinfer_log_debug": [246, 509, 537, 544, 554, 569, 583, 619, 620, 623, 694], "amdinfer_log_error": [246, 529, 554, 566, 569, 581, 583, 611, 613, 615, 617, 618, 619, 620, 621, 622, 623, 694], "amdinfer_log_info": [246, 554, 565, 569, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 694], "amdinfer_log_trac": [246, 523, 569, 572, 581, 694], "amdinfer_log_warn": [246, 569, 694], "gather": [247, 248, 330, 333, 746], "famili": [247, 570, 571], "gaug": [247, 570, 571], "metric_famili": [247, 570], "summari": [247, 248, 570, 571], "text_seri": [247, 570], "kpercentile50": [247, 468, 570, 694], "kpercentile90": [247, 468, 570, 694], "kpercentile99": [247, 468, 570, 694], "knumtracedata": [249, 468, 523, 572, 581, 694], "ext": [251, 271, 290, 299, 302, 522, 574, 594, 613, 622, 625], "alloc_trait": [251, 271, 290, 299, 302, 574, 594, 613, 622, 625], "propag": [251, 526, 527, 574, 575, 581, 583, 610, 611, 614, 615, 616, 617, 620, 621, 623, 625], "global_propag": [251, 574], "text_map_propag": [251, 574], "runtime_context": [251, 574], "export": [251, 486, 487, 488, 489, 494, 508, 510, 514, 520, 558, 572, 574, 601, 607, 747, 763], "jaeger_export": [251, 574], "sdk": [251, 574], "simple_processor": [251, 574], "tracer_provid": [251, 574], "canonical_cod": [251, 574], "http_trace_context": [251, 574], "span_metadata": [251, 574], "tracer": [251, 574], "stack": [252, 575], "opencv2": [253, 255, 288, 290, 294, 295, 298, 299, 576, 578, 611, 613, 617, 618, 621, 622], "imgcodec": [255, 288, 290, 294, 295, 298, 299, 578, 611, 613, 617, 618, 621, 622], "imgproc": [255, 299, 578, 622], "kdefaultimages": [255, 472, 578, 642, 694], "calldata_impl": [258, 581, 694], "calldata_impl_end": [258, 581, 694], "serverbuild": [258, 581, 694], "statuscod": [258, 522, 525, 581, 694], "httpappframework": [260, 583], "drogoncallback": [260, 468, 583, 694], "decod": [266, 267, 320, 322, 589, 611, 617, 621], "b64": [266, 589], "buffers": [266, 589, 694], "zlib": [268, 336, 591, 747], "numer": [270, 593], "kthreadpoollength": [271, 474, 594, 694], "condition_vari": [272, 595], "boost": [273, 596, 620, 747], "istream": [273, 596], "iosfwd": [276, 599], "regex": [276, 563, 599, 614], "bufferptrsqueu": [278, 468, 514, 519, 520, 601, 614, 616, 619, 625, 689, 694], "bufferptrsqueueptr": [278, 468, 564, 601, 694], "fstream": [279, 296, 602, 619], "is_any_v": [285, 474, 523, 524, 527, 581, 608, 694], "kamdinfervers": [286, 532, 560, 609, 694], "kamdinferversionlabel": [286, 609, 694], "kamdinferversionmajor": [286, 609, 694], "kamdinferversionminor": [286, 609, 694], "kamdinferversionpatch": [286, 609, 694], "akssysmanagerext": [287, 288, 290, 298, 299, 585, 610, 611, 613, 621, 622], "akstensorbuff": [287, 288, 290, 298, 299, 610, 611, 613, 621, 622], "kimagechannel": [288, 475, 611, 613, 621, 622, 694, 696, 733], "kimageheight": [288, 475, 611, 613, 621, 622, 694, 696, 733], "kimagewidth": [288, 475, 611, 613, 621, 622, 694, 696, 733], "kakddetectresponses": [289, 475, 611, 612, 613, 694], "videoio": [290, 295, 299, 613, 618, 622], "kmaximagechannel": [294, 475, 617, 618, 694], "kmaximageheight": [294, 475, 617, 618, 694], "kmaximagewidth": [294, 475, 617, 618, 694], "kmaxurllength": [295, 475, 618, 694], "torch": [297, 620], "kresnetimagechannel": [297, 475, 620, 623, 694], "kresnetimages": [297, 475, 620, 623, 694], "kresnetoutputclass": [297, 475, 620, 623, 694], "vidprop": [299, 622, 694], "kboxheight": [299, 475, 622, 694], "kboxheightstr": [299, 475, 622, 694], "kimages": [299, 475, 622, 694], "kimagewidthstr": [299, 475, 622, 694], "kresnetclassif": [299, 475, 622, 694], "c_api": [300, 623], "tensor_shap": [300, 611, 621, 623], "tensor_typ": [300, 623], "env": [300, 599, 623, 748, 755], "session": [300, 623], "session_opt": [300, 623], "knumbufferauto": [301, 468, 610, 611, 613, 619, 620, 621, 622, 624, 694], "cxxabi": [302, 625], "runner_ext": [302, 625], "target_factori": [302, 625], "includedirectori": 303, "amdinferdirectori": 303, "clientsfil": 303, "hppfile": 303, "hppdirectori": 303, "corefil": 303, "serversfil": 303, "srcdirectori": 303, "batchingfil": 303, "cppfile": 303, "buffersfil": 303, "cppdirectori": 303, "coredirectori": 303, "memory_poolfil": 303, "modelsfil": 303, "observationfil": 303, "pre_postfil": 303, "utilfil": 303, "workersfil": 303, "doxygenfunct": [304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 342, 344, 345, 353, 356, 360, 361, 372, 384, 389, 398, 406, 407, 412, 413, 414, 415, 416, 418, 421, 423, 424, 425, 426, 427, 428, 431, 435, 436, 438, 440, 442, 452, 460, 461, 462], "unabl": [304, 305, 306, 325, 342, 344, 345, 353, 356, 360, 361, 372, 384, 389, 398, 406, 407, 414, 415, 416, 418, 421, 423, 424, 425, 426, 427, 428, 436, 438, 440, 452, 460, 461, 462, 578, 619, 620], "length": [319, 321, 322, 324, 336, 490, 512, 519, 526, 532, 557, 560, 562, 570, 583, 589, 617, 618, 619], "in_len": [321, 322, 590], "everi": [324, 770], "so_path": [326, 458, 563, 614], "cv": [329, 401, 576, 578, 611, 613, 617, 618, 621, 622], "mat": [329, 401, 576, 578, 611, 613, 617, 618, 621, 622], "img": [329, 401, 576, 578, 611, 613, 617, 618, 621, 622], "height": [329, 576, 578, 611, 613, 621, 622, 642], "width": [329, 535, 576, 578, 611, 613, 621, 642], "crop": 329, "center": 329, "dimens": [329, 619], "len": [336, 567, 591, 592, 611, 750, 752], "inflat": [336, 591], "deflat": 336, "could": [342, 356, 414, 415, 416, 507, 509, 549, 554, 583, 587, 619, 620, 623, 749, 755], "eror": [342, 356, 414, 415, 416], "14": [342, 747], "stdout": [346, 596], "k": [347, 439, 515, 517, 567, 577, 578, 579, 611, 613, 616, 620, 621, 623, 625, 771], "resp": [349, 355, 522, 523, 524, 525, 526, 527, 531, 581, 583, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "grpc_paramet": [350, 523, 524], "param": [351, 353, 354, 358, 359, 360, 361, 420, 421, 493, 522, 523, 524, 554, 556, 619], "grpc_request": [364, 368, 522, 523, 524, 581], "modelinferrequest_inferrequestedoutputtensor": [367, 581], "proto": [367, 523, 581], "modelinferrequest_inferinputtensor": [370, 581], "reqresult": [374, 525, 531], "represent": 378, "httpresponseptr": [383, 396, 525, 526, 527, 531, 583, 584, 677, 678], "status_cod": [383, 396, 583], "requestparamet": [384, 421, 532, 533, 544, 545, 645], "datum": [392, 393, 526, 527], "kchannel": [401, 578, 642], "logopt": [409, 521, 568, 569, 585], "level_enum": [410, 568], "loglevel": [410, 521, 568, 569, 585], "24": [415, 416], "migraphx_shape_datatype_t": [417, 619], "inferparameter2": [420, 421, 554], "www": [432, 434, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 764], "reddit": [432, 434], "comment": [432, 434, 512, 519], "f8cbz": [432, 434], "fimjm2f": [432, 434], "matter": [432, 434], "text": [433, 531, 599, 600, 747, 755, 764, 767], "expand": [433, 768], "nth": 437, "postprocess": [439, 749, 750], "prefix": [445, 604], "full": [445, 448, 617, 618, 744, 749, 750, 766, 767], "ptr": [449, 524, 526, 527, 594, 604], "delimit": [450, 604], "dlopen_flag": [453, 623], "succe": [454, 755], "cross": 454, "16": [454, 484, 525, 701, 747, 761], "truncat": 454, "func": [458, 563, 594, 595], "symbol": [458, 563, 614, 623, 747], "search": [458, 554], "2021": [483, 484, 488, 490, 498, 501, 505, 506, 507, 508, 509, 510, 511, 512, 517, 518, 519, 520, 525, 528, 534, 542, 543, 544, 545, 557, 558, 559, 563, 564, 565, 568, 569, 570, 571, 573, 574, 575, 583, 584, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 605, 609, 610, 611, 613, 615, 617, 618, 621, 622, 624, 625], "inc": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747], "2022": [483, 484, 485, 486, 487, 488, 489, 490, 491, 498, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 542, 543, 544, 545, 554, 555, 557, 558, 559, 563, 564, 565, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "advanc": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "apach": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 747], "complianc": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "obtain": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "org": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "law": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "AS": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "basi": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "warranti": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "OR": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "OF": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "either": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 766], "express": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 643], "impli": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "languag": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 749, 750], "govern": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "ifndef": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 527, 530, 533, 536, 538, 543, 545, 547, 548, 550, 552, 555, 558, 559, 561, 564, 569, 571, 572, 573, 575, 576, 577, 578, 579, 580, 582, 584, 586, 588, 590, 592, 593, 595, 597, 598, 600, 601, 603, 604, 605, 607, 608, 609, 612, 624], "guard_amdinfer_amdinf": 483, "iwyu": [483, 486, 487, 488, 489, 494, 505, 507, 508, 510, 512, 514, 520, 523, 524, 526, 532, 545, 558, 572, 575, 581, 601, 607], "pragma": [483, 486, 487, 488, 489, 494, 505, 507, 508, 510, 512, 514, 520, 523, 524, 526, 532, 545, 558, 572, 575, 581, 601, 607], "begin_export": 483, "end_export": 483, "endif": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 516, 518, 520, 521, 523, 524, 526, 527, 528, 530, 532, 533, 535, 536, 538, 540, 542, 543, 545, 547, 548, 549, 550, 552, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592, 593, 595, 597, 598, 599, 600, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "guard_amdinfer_build_options_hpp": 484, "419430400": [484, 705], "20971520": [484, 704], "guard_amdinfer_clients_cli": 485, "nodiscard": [485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 504, 506, 543, 547, 548, 552, 556, 562, 564, 569, 574, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "guard_amdinfer_clients_grpc": 486, "impl_": [486, 487, 488, 489, 502, 522, 525, 528, 531, 585], "guard_amdinfer_clients_http": 487, "guard_amdinfer_clients_n": 488, "guard_amdinfer_clients_websocket": 489, "todo": [489, 492, 498, 507, 509, 523, 526, 529, 537, 544, 554, 611, 613, 614, 618, 619, 621, 622, 625], "varunsh": [489, 492, 498, 507, 509, 523, 526, 529, 537, 544, 554, 611, 613, 614, 618, 621, 622, 625], "guard_amdinfer_core_data_typ": 490, "uint8_t": [490, 519, 523, 524, 527, 557, 562, 581, 611, 613, 617, 621, 622, 625], "int16_t": [490, 519, 523, 524, 527, 581], "switch": [490, 523, 525, 531, 535, 537, 544, 554, 568, 570, 578, 619, 765], "lowercas": 490, "uppercas": 490, "26": [490, 769], "10": [490, 525, 622, 625, 735, 736, 747, 755, 760, 763], "7": [490, 612, 699, 747, 763, 764], "9": [490, 570, 721, 747, 763], "shift": 490, "47": [490, 760], "ascii": 490, "48": 490, "static_cast": [490, 509, 512, 513, 515, 519, 522, 523, 525, 526, 527, 529, 535, 537, 539, 544, 554, 557, 562, 563, 566, 567, 568, 570, 572, 578, 581, 583, 587, 594, 610, 611, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 766], "kept": 490, "pod": [490, 755], "half_float": [490, 527, 650, 763], "nolint": [490, 540, 557, 563, 581, 587, 588, 596, 610, 611, 613, 621, 622], "readabl": [490, 491, 527, 540, 557, 588, 608, 610, 611, 613, 621, 622, 749, 750], "value_": 490, "mapstrtotyp": 490, "nolintnextlin": [490, 491, 527, 554, 569, 570, 581, 589, 591, 594, 595, 596, 605, 608, 622, 749], "hicpp": [490, 554, 591, 596, 605], "sizeof": [490, 512, 523, 524, 526, 527, 539, 540, 556, 557, 562, 572, 581, 591, 598, 610, 611, 615, 616, 617, 620, 621, 623, 625], "int8_t": [490, 519, 523, 524, 527, 572, 581, 625], "int64_t": [490, 519, 524, 527, 581], "float": [490, 519, 523, 524, 527, 535, 577, 581, 610, 611, 612, 613, 620, 623, 644, 763, 764, 766], "maybe_unus": [490, 509, 523, 554, 565, 572, 581, 583, 585, 598, 614, 616, 618, 619, 620, 623, 626, 638, 641], "guard_amdinfer_core_except": 491, "2023": [492, 493, 494, 496, 497, 499, 500, 503, 504, 513, 514, 515, 516, 537, 538, 539, 540, 541, 546, 547, 548, 549, 550, 551, 552, 553, 556, 560, 561, 562, 566, 567, 593, 598, 614], "guard_amdinfer_core_inference_request": 492, "data_": [492, 493, 498, 513, 514, 515, 516, 517, 518, 519, 520, 529, 539, 540, 546, 547, 557], "name_": [492, 496, 498, 500, 529, 539, 553, 557, 562], "id_": [492, 493, 498, 529, 540, 557], "inputs_": [492, 496, 498, 529, 539, 553, 557], "outputs_": [492, 493, 496, 498, 529, 539, 540, 553, 557], "callback_": [492, 498, 529, 539, 557], "still": [492, 498, 583], "fakeinferencerequest": [492, 498], "guard_amdinfer_core_inference_respons": 493, "brief": 493, "ifdef": [493, 498, 503, 504, 505, 506, 507, 509, 521, 523, 526, 527, 528, 532, 535, 536, 538, 540, 542, 543, 545, 549, 552, 557, 559, 560, 565, 566, 567, 569, 571, 572, 574, 575, 581, 582, 583, 584, 585, 586, 587, 588, 605, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "setcontext": [493, 498, 540, 557, 610, 611, 614, 615, 616, 617, 620, 621, 623, 625, 763], "getcontext": [493, 498, 540, 557, 574, 581, 583, 763], "error_msg_": [493, 498, 540, 557], "context_": [493, 498, 540, 557], "guard_amdinfer_core_inference_tensor": 494, "guard_amdinfer_core_mixin": 495, "guard_amdinfer_core_model_metadata": 496, "versions_": [496, 498], "platform_": [496, 498, 553, 557], "ready_": [496, 498, 553, 557], "basic_ostream": [497, 532, 560, 565], "strin": 497, "char_trait": [497, 509], "visit": [497, 523, 526, 556, 574, 753], "const_iter": 497, "stringstream": [497, 619], "ss": 497, "pop_back": [497, 613, 622], "trail": [497, 613, 622], "newlin": 497, "lh": [497, 498, 645], "rh": [497, 498, 645], "lhs_size": [497, 498], "rhs_size": [497, 498], "lhs_map": [497, 498], "rhs_map": [497, 498], "lhs_valu": [497, 498], "rhs_valu": [497, 498], "guard_amdinfer_core_predict_api": 498, "ba": [498, 568], "maptypetostr": [498, 523, 526], "shareddata": [498, 557], "shape_": [498, 500, 529, 557, 562], "push_back": [498, 503, 507, 509, 521, 522, 523, 525, 526, 529, 537, 539, 540, 544, 557, 567, 568, 570, 577, 581, 583, 614, 616, 621, 624, 625, 761], "data_type_": [498, 500, 529, 557, 562], "shared_data_": [498, 557], "datatype_": [498, 557], "guard_amdinfer_core_server_metadata": 499, "guard_amdinfer_core_tensor": 500, "guard_amdinfer_declar": 501, "guard_amdinfer_servers_serv": 502, "requests_": [503, 504], "input_buffers_": [503, 504], "output_buffers_": [503, 504], "assert": [503, 505, 525, 526, 531, 532, 537, 539, 540, 541, 546, 556, 560, 562, 567, 568, 578, 581, 596, 598, 614, 616, 623, 749, 750, 752, 766, 771], "traces_": [503, 504], "start_times_": [503, 504], "addtrac": [503, 504, 507, 509, 566, 567], "gettrac": [503, 504, 542, 543, 566, 567, 574, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 623, 625], "addtim": [503, 504, 507, 509, 566, 567], "high_resolution_clock": [503, 504, 542, 543, 583, 606], "time_point": [503, 504, 542, 543, 559, 607, 692], "guard_amdinfer_batching_batch": [504, 506], "worker_": 504, "make_shar": [505, 523, 525, 528, 529, 531, 537, 544, 557, 568, 571, 581, 583, 587, 594, 595, 614], "logger_": [505, 506, 537, 538, 542, 543, 544, 545, 568, 569, 581, 583, 584, 587, 588, 624], "dorun": [505, 506, 507, 508, 509, 510, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "getlogg": [505, 506, 509, 529, 542, 543, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "inferencereq": 506, "loggerptr": [506, 545, 584, 588], "metriccounterid": [507, 509, 528, 570, 571, 583, 614, 615, 616, 619, 620, 623, 625], "no_forward_declar": [507, 545, 575], "thread_nam": [507, 509], "make_uniqu": [507, 509, 513, 519, 522, 525, 528, 529, 531, 537, 544, 546, 549, 551, 554, 557, 570, 574, 581, 583, 585, 587, 594, 610, 611, 613, 614, 621, 622, 624], "input_buff": [507, 509, 529, 530, 543, 558, 566, 567, 581, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625], "input_offset": [507, 509, 529, 530, 543, 558], "output_offset": [507, 509, 529, 530, 543, 558], "first_request": [507, 509], "wait_dequeu": [507, 509, 531, 537, 544, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 761], "break": [507, 509, 523, 525, 531, 535, 537, 544, 546, 551, 554, 563, 568, 570, 578, 581, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "startspan": [507, 509, 528, 566, 567, 574, 575, 581, 583, 587, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 623, 625], "hard_batch": 507, "incrementcount": [507, 509, 528, 570, 571, 583, 614, 615, 616, 619, 620, 623, 625], "pipelineingressbatch": [507, 509, 570, 571], "input_s": [507, 509, 554, 611, 613, 617, 620, 621, 623, 749], "zero": [507, 509, 515, 517, 591], "output_s": [507, 509], "addition": [507, 509], "output_buff": [507, 509, 529, 530, 543, 558, 615, 617, 625], "tensor_s": [507, 509], "raw_input": [507, 509], "raw_output": [507, 509], "old_input_offset": [507, 509], "0u": [507, 509, 515, 517, 521, 523, 527, 556, 563, 565, 566, 567, 572, 577, 583, 614, 749], "new_offset": [507, 509], "endspan": [507, 509, 528, 566, 567, 574, 575, 581, 583, 587, 613], "start_tim": [507, 509, 542, 543, 559, 583, 607], "pipelineegressbatch": [507, 509, 570, 571], "guard_amdinfer_batching_hard": 508, "millisecond": [509, 531, 554, 574, 625, 749], "setgaug": [509, 570, 571], "metricgaugeid": [509, 570, 571], "queuesbatcherinput": [509, 570, 571], "size_approx": 509, "queuesbatcheroutput": [509, 570, 571], "got": [509, 537, 544, 610, 611, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625], "els": [509, 512, 523, 524, 525, 526, 527, 529, 532, 537, 544, 546, 554, 556, 557, 560, 568, 569, 574, 581, 583, 587, 594, 599, 606, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625, 749], "remaining_tim": 509, "milli": [509, 620, 623], "kilo": 509, "wait_dequeue_tim": 509, "soft_batch": 509, "to_str": [509, 523, 525, 532, 535, 537, 544, 560, 567, 568, 572, 581, 613, 616, 618, 619, 620, 622, 623, 625, 749], "guard_amdinfer_batching_soft": 510, "memcpi": [511, 512, 519, 523, 526, 529, 556, 557, 562, 581, 598, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "allocator_": [511, 512], "guard_amdinfer_buffers_buff": 512, "cycl": [512, 770], "no_includ": 512, "is_same_v": [512, 523, 524, 526, 527, 556, 583], "quit": [512, 519, 531, 583], "sure": [512, 519, 554, 748, 749, 750, 752, 755, 763, 765, 770], "null_term": [512, 519], "strcpy": [512, 519], "reinterpret_cast": [512, 515, 517, 519, 539, 540, 551, 557, 562, 563, 591, 610, 611, 613, 614, 617, 618, 621, 622, 625], "write_counter_": [512, 519, 520], "c_str": [512, 519, 522, 523, 526, 531, 532, 554, 556, 557, 560, 562, 563, 581, 583, 599, 605, 614, 619], "guard_amdinfer_buffers_cpu": 514, "get_tensor": [515, 611, 613, 621, 625], "properli": [515, 517, 565], "get_shap": [515, 517, 611, 613, 619, 621, 625], "dim": [515, 517], "stride": [515, 517], "guard_amdinfer_buffers_vart_tensor": 516, "tensor_": [517, 518], "reset": [517, 518, 519, 520, 563, 594, 614], "guard_amdinfer_buffers_vart_tensor_buff": 518, "cpuflattensorbufferown": [518, 552], "type_": [519, 520, 542, 543], "kok": 519, "my_buff": [519, 520], "vec": [519, 578], "emplace_back": [519, 525, 529, 539, 546, 551, 553, 556, 557, 566, 567, 578, 581, 604, 610, 611, 613, 620, 621, 622, 623, 624, 625, 749], "guard_amdinfer_buffers_vector_buff": 520, "copy_backward": [521, 613, 622, 625], "second": [521, 525, 526, 532, 537, 544, 560, 563, 574, 599, 606, 613, 622, 765, 770], "sleep_for": [521, 531, 554, 625], "logger_nam": [521, 568, 569, 585], "consol": [521, 569, 585, 757], "try": [521, 525, 528, 537, 544, 549, 554, 563, 565, 566, 581, 583, 587, 611, 615, 617, 619, 620, 770], "catch": [521, 525, 528, 537, 544, 549, 554, 563, 565, 566, 581, 583, 587, 611, 615, 617, 619, 620, 640], "this_thread": [521, 531, 537, 544, 554, 581, 625], "q": [521, 577], "num_request": [521, 749], "front": [521, 613, 619, 622, 625], "start_index": 521, "repeatedptrfield": [522, 523, 554, 581], "clientcontext": 522, "__forced_unwind": [522, 625], "async": [522, 761], "connecti": 522, "modelmetadatarespon": 522, "stub_": 522, "newstub": 522, "createchannel": 522, "insecurechannelcredenti": 522, "error_messag": 522, "error_cod": 522, "unavail": 522, "set_nam": [522, 523, 581], "shape_s": [522, 523, 581], "mod": 522, "mutable_paramet": [522, 523], "set_model_nam": [522, 523], "set_num": 522, "_bit_refer": 523, "amdinfer_enable_lo": 523, "modelinferresponse_": 523, "parametertyp": [523, 554], "parameterchoicecas": [523, 554], "parameter_choice_cas": [523, 554], "kboolparam": [523, 554], "bool_param": [523, 554], "kint64param": [523, 554], "int64_param": [523, 554], "kdoubleparam": [523, 554], "double_param": [523, 554], "kstringparam": [523, 554], "string_param": [523, 554], "cpprefer": [523, 526], "visitor": [523, 526], "deduct": [523, 526], "guid": [523, 526, 755, 765, 768, 771], "set_bool_param": 523, "set_double_param": 523, "set_int64_param": 523, "set_string_param": 523, "insert": [523, 525, 537, 544, 556, 563, 570, 611, 621], "source_data": [523, 626], "min_siz": [523, 581], "set_id": 523, "add_input": 523, "1u": 523, "add_shap": 523, "set_datatyp": 523, "bytes_to_copi": 523, "logtracebuff": [523, 572, 625], "model_nam": [523, 526, 581, 583, 767], "add_output": 523, "set_platform": 523, "guard_amdinfer_clients_grpc_intern": 524, "is_const_v": 524, "bool_cont": 524, "mutable_cont": 524, "mutable_bool_cont": 524, "uint_cont": 524, "mutable_uint_cont": 524, "uint64_cont": 524, "mutable_uint64_cont": 524, "int_cont": 524, "mutable_int_cont": 524, "int64_cont": 524, "mutable_int64_cont": 524, "fp32_content": 524, "mutable_fp32_cont": 524, "fp64_content": 524, "mutable_fp64_cont": 524, "bytes_cont": 524, "mutable_bytes_cont": 524, "static_assert": [524, 527, 581, 593, 617], "httpclientptr": 525, "httprequ": 525, "k200ok": 525, "reqr": 525, "arrayvalu": [525, 526, 583, 587], "obj": [525, 583], "tuple_el": 525, "field": 525, "headers_": [525, 546, 547, 551, 552, 574], "num_clients_": 525, "arbitrarili": [525, 549, 610, 611, 618, 619, 704, 705], "client_thread_ratio": 525, "loops_": 525, "clients_": 525, "moveabl": 525, "copyabl": 525, "incompat": 525, "newhttpclient": 525, "getloop": [525, 531], "counter_": 525, "32": [525, 591, 760, 763], "forward": [525, 595, 620], "badrespons": 525, "bad": [525, 619, 767], "networkfailur": 525, "failur": [525, 619], "badserveraddress": 525, "handshakeerror": 525, "handshak": 525, "invalidcertif": 525, "newhttprequest": [525, 531], "setmethod": [525, 531], "setpath": [525, 531], "newhttpjsonrequest": 525, "sendrequest": 525, "getjsonerror": 525, "getjsonobject": [525, 583], "asstr": [525, 526, 527, 532, 560, 583, 587], "timeout_": 525, "jsonobject": [525, 583], "objectvalu": [525, 526, 583], "prom": 525, "fut": 525, "get_futur": [525, 528, 595], "difficult": 525, "unfortun": 525, "set_valu": [525, 528, 529], "json_model": 525, "htt": [526, 583], "httpstatuscod": [526, 583], "k40": 526, "uint": [526, 535, 583, 623], "charreaderbuild": [526, 531, 532, 560, 583, 587], "fill": [526, 613, 622], "basic_string_view": 526, "getmembernam": 526, "isstr": 526, "isbool": 526, "asbool": [526, 527], "isuint": 526, "asint": [526, 527, 583], "isdoubl": 526, "asdoubl": [526, 527], "raw_datum": 526, "json_output": [526, 583], "ascstr": 526, "json_shap": 526, "asuint": [526, 527], "json_data": 526, "json_input": 526, "omit": 526, "ret": [526, 583, 591, 595], "guard_amdinfer_clients_http_intern": 527, "amdinfer_enable_tra": 527, "inf": [527, 581, 614], "src_data": [527, 637], "src_size": [527, 637], "data_ptr": [527, 620], "half_cast": 527, "asuint64": [527, 583], "asint64": 527, "asfloat": 527, "metriccount": 528, "starttrac": [528, 574, 575, 581, 583, 585, 587], "model_low": [528, 583], "worker_low": [528, 583], "cppnativ": [528, 570, 571], "__func__": [528, 581, 583, 587], "new_request": [528, 566, 567, 614], "dest": [529, 581], "inputbuild": 529, "last_input": 529, "suppress": [529, 583, 587, 596, 613, 615, 617, 618, 622, 625], "unus": [529, 583, 587, 613, 615, 617, 618, 619, 622, 625], "requestbuild": [529, 587], "promise_": [529, 530], "getpromis": [529, 530], "cppcallback": 529, "errorhandl": [529, 530, 543], "guard_amdinfer_clients_native_intern": 530, "blockingconcurr": 531, "websocketmessag": 531, "websocketclientptr": 531, "websocketconnec": 531, "streamwriterbui": 531, "loop_": 531, "ws_client_": 531, "newwebsocketcli": 531, "http_client_": 531, "setmessagehandl": 531, "message_typ": 531, "builder": [531, 532, 560, 570, 581, 583, 587], "charread": [531, 532, 560, 583, 587], "newcharread": [531, 532, 560, 583, 587], "parsingsuccess": 531, "unsuccess": 531, "json_ptr": 531, "queue_": [531, 581], "setconnectionclosedhandl": 531, "getconnect": 531, "disconnect": 531, "connecttoserv": 531, "wsptr": 531, "moodycamel": [531, 595, 601, 688, 761], "streamwriterbuild": 531, "indent": 531, "whitespac": 531, "writestr": 531, "stoi": [532, 560], "unordered_m": [532, 560], "modelm": [532, 560], "sockpp": [532, 560, 747], "socket": [532, 560], "socket_initi": [532, 560], "tcp_connector": [532, 560], "emplac": [532, 546, 560, 570, 574, 749], "loadwork": [532, 544, 545], "unloadwork": [532, 544, 545], "workerreadi": [532, 544, 545], "getworkerendpoint": [532, 544, 545], "getworkermetadata": [532, 544, 545], "sock_init": [532, 560], "default_xrm_port": [532, 560], "9763": [532, 560], "localhost": [532, 560, 748, 758, 769], "cerr": [532, 560], "last_error_str": [532, 560], "endl": [532, 560, 565], "requestid": [532, 560], "bar": [532, 560], "total_len": [532, 560], "len_read": [532, 560], "read_n": [532, 560], "wrong": [532, 560, 563, 566, 614, 615, 620], "response_str": [532, 560], "bytes_read": [532, 560], "num_fpga": [532, 560], "devicenumb": [532, 560], "device_": [532, 560], "ismemb": [532, 560, 583, 587], "cunumb": [532, 560], "cu_num": [532, 560], "cu_": [532, 560], "kernelnam": [532, 560], "try_emplac": [532, 537, 544, 549, 556, 560, 574, 606], "kernel_iter": [532, 560], "guard_amdinfer_core_api": 533, "kbitsinbyt": 535, "8": [535, 617, 747, 755, 760, 763], "mapxirtotyp": [535, 536, 625], "bit_width": 535, "unsupport": [535, 625], "xint": 535, "xuint": 535, "maptypetoxir": [535, 536, 551], "retval": [535, 537, 538, 544, 545, 546, 551, 623, 640], "fall": 535, "guard_amdinfer_core_data_types_intern": 536, "__decay_and_strip": 537, "__type": 537, "update_thread_": [537, 538, 544, 545], "updatemanag": [537, 538, 544, 545], "update_queue_": [537, 538, 544, 545], "eptr": [537, 538, 544, 545, 640], "rethrow_except": [537, 544], "unsafeget": [537, 538], "linger": [537, 544], "joinabl": [537, 544, 563, 581, 585, 594], "unsafeload": [537, 538], "current_except": [537, 544], "unsafeunload": [537, 538], "unsafeexist": [537, 538], "unsafemetadata": [537, 538], "unsafelist": [537, 538], "unsafeshutdown": [537, 538], "update_thread": [537, 544], "insertwork": [537, 538], "worker_nam": [537, 544, 748, 767], "yet": [537, 544, 594], "new_work": [537, 544], "workers_": [537, 538, 544, 545, 563, 564], "undo": [537, 544], "hyphen_po": [537, 544, 563], "npo": [537, 544, 563, 604, 619], "substr": [537, 544, 599, 604], "worker_endpoints_": [537, 538, 544, 545], "worker_parameters_": [537, 538, 544, 545], "worker_indices_": [537, 538, 544, 545], "_": [537, 544], "fixm": [537, 544], "haven": [537, 544, 765], "make_pair": [537, 544, 557, 563], "ve": [537, 544, 581, 755, 765], "technic": [537, 544], "overflow": [537, 544], "insert_or_assign": [537, 544], "guard_amdinfer_core_endpoint": 538, "exception_ptr": [538, 545, 640], "uniq": 538, "amdinfer_en": 538, "unsafereadi": 538, "cast": [540, 557, 563, 591, 749], "gettyp": [542, 543], "settrac": [542, 543], "trace_": [542, 543], "settim": [542, 543], "start_time_": [542, 543], "guard_amdinfer_core_interfac": 543, "_v2": [543, 559, 607, 692], "system_clock": [543, 559, 607, 692], "endpoints_": [544, 545, 554, 555, 560, 561], "worker_class": [544, 563], "workeralloc": [544, 545], "inputsizevalid": 544, "guard_amdinfer_core_manag": 545, "instanti": [545, 571, 752], "max_allocate_": [546, 547, 551, 552], "block_size_": [546, 547], "lock_guard": [546, 551, 570], "mutex_": [546, 547, 551, 552, 594, 595], "new_block": 546, "block_id": [546, 548, 630], "partit": 546, "size_to_alloc": [546, 551], "allocated_": [546, 547, 551, 552], "block_id_": [546, 547], "foo": [546, 556, 581], "guard_amdinfer_core_memory_pool_cpu_alloc": 547, "guard_amdinfer_core_memory_pool_memory_alloc": 548, "048": [549, 729], "576": [549, 729], "1mib": 549, "allocators_": [549, 550], "varttensoralloc": [549, 551, 552], "guard_amdinfer_core_memory_pool_pool": 550, "xir_typ": [551, 625], "xir_shap": [551, 625], "tensors_": [551, 552], "buffers_": [551, 552], "guard_amdinfer_core_memory_pool_vart_tensor_alloc": 552, "varttensorhead": 552, "new_shap": [553, 557, 620, 621, 623, 625], "back_insert": [553, 557], "o_cloexec": 554, "fileinputstream": 554, "textformat": 554, "amdinfer_log_d": 554, "inferp": 554, "rid": 554, "config_fil": 554, "pbtxt": [554, 755, 764], "model_path": 554, "config_path": 554, "sometim": 554, "model_bas": 554, "saved_model": [554, 755, 764], "cppcoreguidelin": [554, 563, 569, 581, 587, 589, 591, 594, 595, 596, 605], "pro": [554, 591, 596, 605], "vararg": [554, 605], "file_descriptor": 554, "o_rdonli": 554, "file_input": 554, "setcloseondelet": 554, "tensorflow_graphdef": [554, 755, 764], "input_nod": [554, 623, 749], "squar": [554, 750], "hwc": 554, "image_channel": [554, 620, 623], "output_nod": [554, 623, 749], "output_class": [554, 620, 623, 749], "pytorch_torchscript": [554, 755, 764], "onnx_onnxv1": [554, 755, 764], "onnx": [554, 619, 747, 754, 755, 764], "migraphx_mxr": 554, "mxr": [554, 619], "vitis_xmodel": [554, 755, 764], "repository_": [554, 555, 560, 561], "directory_iter": 554, "is_directori": 554, "file_watcher_": [554, 555], "filewatch": [554, 555], "listener_": [554, 555], "addwatch": 554, "watch": 554, "delai": 554, "settl": 554, "parent_path": 554, "never": 554, "happen": [554, 615, 619, 752], "guard_amdinfer_core_model_repositori": 555, "wat": 555, "add_const": 556, "decay_t": 556, "node": [556, 623, 748, 755], "extract": [556, 574, 747], "ktabl": 556, "to_integ": 556, "key_siz": 556, "data_s": 556, "back_insert_iter": 557, "back_ins": 557, "shared_data": 557, "guard_amdinfer_core_predict_api_intern": 558, "buffer_index": 558, "batch_offset": 558, "guard_amdinfer_core_request_container_intern": 559, "updated_paramet": 560, "guard_amdinfer_core_shared_st": 561, "dlerror": [563, 614, 623], "dlopen": [563, 614, 623], "dlsym": [563, 614, 623], "rtl": 563, "toupper": 563, "uint_max": 563, "basic_st": 563, "remove_refer": 563, "bat": 563, "external_": 563, "rtld_local": [563, 614, 623], "lib": [563, 614, 747], "rtld_lazi": [563, 614, 623], "anywai": [563, 614], "rtld_deepbind": [563, 614, 623], "gcc": [563, 614, 747], "gnu": [563, 614], "bugzilla": [563, 614], "show_bug": [563, 614], "cgi": [563, 614], "42679": [563, 614], "segfault": [563, 614, 623], "issu": [563, 614, 620, 623, 747, 748, 754, 755], "deepbind": [563, 614, 623], "motiv": [563, 614], "isol": [563, 614], "dlmopen": [563, 614], "due": [563, 614, 623, 748, 749, 750], "own": [563, 587, 594, 595, 614, 623, 749, 766, 767, 768], "sourcewar": [563, 614], "24776": [563, 614], "error_str": [563, 614, 623], "fptr": [563, 614], "lib_nam": 563, "libwork": 563, "func_ptr": 563, "posix": 563, "batchers_": [563, 564], "thread_id": 563, "occur": [563, 565, 594], "batcher_count": 563, "get_id": 563, "worker_threads_": [563, 564], "last_work": 563, "kill": [563, 619], "guard_amdinfer_core_worker_info": 564, "signal": 565, "sigint": 565, "sigterm": 565, "optionadd": 565, "char_": [565, 618], "volatil": 565, "signum": 565, "caught": [565, 595], "interrupt": 565, "argc": 565, "argv": 565, "sigset_t": 565, "mask": [565, 617], "old_mask": 565, "sigemptyset": 565, "sigaddset": 565, "sigprocmask": 565, "sig_block": 565, "grpc_port": [565, 749], "mnt": [565, 755, 764], "repository_monitor": 565, "use_polling_watch": 565, "repository_load_exist": 565, "cloud": [565, 755], "clang": [565, 595, 596, 619, 747], "add_opt": 565, "watcher": 565, "optionexcept": 565, "sigsuspend": 565, "sig_unblock": 565, "input_tensor": [566, 567, 620, 623, 625, 766], "output_tensor": [566, 567, 620, 623, 625, 766], "new_batch": [566, 567, 614], "unsign": [566, 567, 587, 604, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "inputs_s": 566, "new_input": [566, 567], "went": [566, 615, 620], "input_num": [567, 583, 616], "input_index": [567, 616], "basic_file_sink_mt": 568, "ansicolor_stdout_sink": 568, "getenv": [568, 585, 599, 625], "info": [568, 569, 619, 757], "err": 568, "earli": 568, "console_en": [568, 569], "file_en": [568, 569], "sink_ptr": 568, "console_sink": 568, "stdout_color_sink_mt": 568, "set_level": [568, 757], "console_level": [568, 569], "set_pattern": 568, "log_fil": 568, "log_directori": [568, 569], "file_sink": 568, "file_level": [568, 569], "flush_on": [568, 757], "register_logg": 568, "name_str": 568, "home": 568, "guard_amdinfer_observation_log": 569, "ndebug": 569, "spdlog_active_level": [569, 757], "spdlog_level_trac": [569, 757], "spdlog_level_info": [569, 757], "spdlog_logger_trac": 569, "spdlog_logger_debug": 569, "spdlog_logger_info": 569, "spdlog_logger_warn": 569, "spdlog_logger_error": 569, "buildcount": 570, "buildgaug": 570, "metricfamili": 570, "ckmsquantil": [570, 721, 722, 723], "textseri": 570, "move_iter": 570, "make_move_it": 570, "weak_ptr": [570, 571], "counterfamili": [570, 571], "family_": [570, 571], "counters_": [570, 571], "increment": [570, 571], "gaugefamili": [570, 571], "gauges_": [570, 571], "summaryfamili": [570, 571], "metricsummaryid": [570, 571, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "quantil": [570, 571, 721, 722, 723], "buildsummari": [570, 571], "summaries_": [570, 571], "percentil": 570, "cert": [570, 622], "err58": [570, 622], "05": [570, 723], "01": [570, 721], "001": [570, 722], "ingress_requests_total_": [570, 571], "amdinfer_requests_ingress_tot": 570, "registry_": [570, 571], "restget": [570, 571, 583], "restpost": [570, 571, 583], "pipeline_ingress_total_": [570, 571], "amdinfer_pipeline_ingress_tot": 570, "stage": 570, "pipelineingresswork": [570, 571, 614, 615, 616, 619, 620, 623, 625], "pipeline_egress_total_": [570, 571], "amdinfer_pipeline_egress_tot": 570, "outgo": 570, "pipelineegresswork": [570, 571, 614, 615, 616, 619, 625], "bytes_transferred_": [570, 571], "exposer_transferred_bytes_tot": 570, "transfer": [570, 619, 747, 760], "transferredbyt": [570, 571], "num_scrapes_": [570, 571], "exposer_scrapes_tot": 570, "were": [570, 594, 619, 749, 750, 760], "scrape": 570, "metricscrap": [570, 571], "queue_sizes_total_": [570, 571], "amdinfer_queue_sizes_tot": 570, "queuesbufferinput": [570, 571], "queuesbufferoutput": [570, 571], "metric_latency_": [570, 571], "exposer_request_lat": 570, "latenc": [570, 760], "metriclat": [570, 571], "request_latency_": [570, 571], "amdinfer_request_lat": 570, "requestlat": [570, 571, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "collectables_mutex_": [570, 571], "collectables_": [570, 571], "serializer_": [570, 571], "observesummari": [570, 571, 610, 611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "getmetr": [570, 571, 583], "wcollect": 570, "my_metr": 570, "make_move_iter": 570, "body_s": 570, "guard_amdinfer_observation_metr": 571, "summa": 571, "uni": 571, "guard_amdinfer_observation_observ": 572, "5u": [572, 728], "num_byt": 572, "6": [572, 747, 761, 763, 766], "four": [572, 760], "128": [572, 596, 618, 719], "bytes_length": 572, "addr": [572, 604], "guard_amdinfer_observation_statu": 573, "trace_api": 574, "trace_sdk": 574, "nostd": [574, 575], "httptextmapcarri": 574, "textmapcarri": 574, "spanexport": 574, "ostreamspanexport": 574, "jaegerexport": 574, "simplespanprocessor": 574, "tracerprovid": 574, "textmappropag": 574, "httptracecontext": 574, "settracerprovid": 574, "globaltextmappropag": 574, "setglobalpropag": 574, "gettracerprovid": 574, "stoptrac": [574, 575, 585], "v1": [574, 575, 769], "startspanopt": [574, 575], "spans_": [574, 575], "endtrac": [574, 575], "span": [574, 575, 587], "setattribut": [574, 575, 581, 583], "attributevalu": [574, 575], "rang": 574, "holds_altern": 574, "current_ctx": 574, "runtimecontext": 574, "getcurr": 574, "carrier": 574, "prop": 574, "getglobalpropag": 574, "inject": 574, "http_header": [574, 575], "new_context": 574, "spankind": 574, "kserver": 574, "getspan": 574, "guard_amdinfer_observation_trac": 575, "amdinfer_enable_tr": 575, "inclus": [575, 747], "have_cpp_stdlib": 575, "attribute_valu": 575, "span_startopt": 575, "scope_": 575, "guard_amdinfer_pre_post_center_crop": 576, "offset_width": 576, "col": 576, "offset_height": 576, "row": [576, 611, 613, 621], "rect": 576, "roi": 576, "guard_amdinfer_pre_post_get_top_k": 577, "priority_queu": 577, "top_k_index": 577, "prob": 577, "guard_amdinfer_pre_post_image_preprocess": 578, "vec3b": 578, "matsiz": [578, 611, 613, 621], "cv_8sc3": 578, "imread": 578, "224": [578, 620, 622, 623, 715, 730, 734, 764], "resize_algorithm": [578, 642], "convert_color": [578, 642], "colorconversioncod": 578, "color_cod": [578, 642], "convert_typ": [578, 642], "convert_scal": [578, 642], "output_index": [578, 625], "cvtcolor": 578, "inter_linear": 578, "convertto": 578, "iscontinu": 578, "clone": [578, 763, 765, 766], "guard_amdinfer_pre_post_resnet50_postprocess": 579, "guard_amdinfer_pre_post_softmax": 580, "sum": [580, 752], "exp": 580, "gpr_assert": 581, "gpr_unl": 581, "grpcinferenceserv": 581, "infertensorcont": 581, "clash": 581, "streammodelinferrequest": 581, "streammodelinferrespons": 581, "progress": 581, "ourselv": 581, "tell": 581, "notif": 581, "rpc": 581, "tweak": [581, 757], "aspect": 581, "authent": 581, "tini": 581, "And": 581, "state_": [581, 583, 584, 587, 588], "unari": 581, "shape_vector": [581, 583], "outputs_s": 581, "streammodelinf": 581, "serverstream": 581, "set_liv": 581, "set_readi": 581, "not_found": 581, "set_vers": 581, "add_extens": 581, "add_model": 581, "mutable_nam": 581, "set_endpoint": 581, "set_found": 581, "request_handl": [581, 583], "approach": [581, 748, 755], "server_": 581, "alwai": [581, 583, 747], "drain": 581, "threads_": [581, 594, 595], "setmaxreceivemessages": 581, "setmaxsendmessages": 581, "listen": 581, "mechan": [581, 640, 755], "addlisteningport": 581, "insecureservercredenti": 581, "ll": [581, 752, 755], "registerservic": 581, "addcompletionqueu": 581, "assembl": 581, "buildandstart": 581, "handlerpc": 581, "my_cq": 581, "calldatastreammodelinf": 581, "event_receiv": 581, "gpr_unlik": 581, "guard_amdinfer_servers_grpc_serv": 582, "__share": 583, "errorhtt": 583, "inva": 583, "amdinfer_log": 583, "metriccoun": 583, "httpserver": [583, 584], "ws_control": 583, "registercontrol": 583, "setloglevel": [583, 757], "kwarn": [583, 757], "setlogpath": 583, "kfatal": [583, 757], "addlisten": 583, "setthreadnum": 583, "registerposthandlingadvic": 583, "access": [583, 748, 753, 754, 755, 764, 765, 767, 770], "setclientmaxbodys": 583, "disablesigtermhandl": 583, "enablerunasdaemon": 583, "json_obj": 583, "getbodi": 583, "interpret": 583, "uncompress": 583, "body_decompress": 583, "newhttpjsonrespons": 583, "setstatuscod": 583, "getserverl": [583, 584], "newhttprespons": 583, "getserverreadi": [583, 584], "getmodelreadi": [583, 584], "k503serviceunavail": 583, "k400badrequest": 583, "setbodi": 583, "getservermetadata": [583, 584], "getmodelmetadata": [583, 584], "k404notfound": 583, "isuint64": 583, "didn": [583, 752, 760], "elsewher": [583, 749, 750], "data_type_str": 583, "logicerror": 583, "drogon_callback": 583, "isarrai": 583, "isobject": 583, "output_num": 583, "setcontenttypecod": 583, "contenttyp": 583, "ct_text_plain": 583, "guard_amdinfer_servers_http_serv": 584, "prot": 584, "httpcontrol": 584, "add_method_to": 584, "httpcontro": 584, "method_list_begin": 584, "method_list_end": 584, "environment_not_set_": 585, "getlogdir": 585, "sysmanagerext": [585, 610, 611, 613, 621, 622], "deleteglob": 585, "aks_sys_manag": 585, "getglob": [585, 610, 611, 613, 621, 622], "aks_root": [585, 610, 611, 613, 621, 622], "kernel_dir": 585, "kernel_zoo": 585, "loadkernel": 585, "http_start": [585, 586], "http_thread": [585, 586], "grpc_start": [585, 586], "guard_amdinfer_servers_server_intern": 586, "charreaderbui": 587, "transform": [587, 604], "char_t": 587, "msg": [587, 619], "websocket_handl": 587, "closecod": 587, "knormalclosur": 587, "parsing_success": 587, "kinvalidmessag": 587, "guard_amdinfer_servers_websocket_serv": 588, "ws_path_list": 588, "ws_path_list_end": 588, "4096": 589, "in_length": 589, "base64_decodest": 589, "base64_init_decodest": 589, "out_length": 589, "base64_decode_block": 589, "length_error": 589, "base64_encodest": 589, "base64_init_encodest": 589, "code_length": 589, "base64_encode_block": 589, "base64_encode_blockend": 589, "guard_amdinfer_util_base64": 590, "z_stream": 591, "inflateend": 591, "z_ok": 591, "z_no_flush": 591, "memset": 591, "chunk_siz": [591, 596], "768": 591, "null": [591, 596, 755], "z": 591, "next_in": 591, "const_cast": 591, "bytef": 591, "avail_in": 591, "inflateinit": 591, "out_buff": [591, 596], "out_str": 591, "next_out": 591, "avail_out": 591, "total_out": 591, "z_stream_end": 591, "guard_amdinfer_helpers_compress": 592, "guard_amdinfer_util_contain": 593, "value_typ": [593, 594], "iterator_trait": 593, "is_arithmetic_v": 593, "arithmet": 593, "accumul": 593, "multipli": 593, "2014": [594, 595], "vitalii": [594, 595], "vitsentii": [594, 595], "__alloc_trait": [594, 613, 622, 625], "q_": [594, 595], "idl": [594, 595, 765], "waiting_": [594, 595], "interleav": [594, 595], "stop_": [594, 595], "done_": [594, 595], "old_thread_num": 594, "increas": [594, 761], "flags_": [594, 595], "setthread": [594, 595], "decreas": 594, "detach": [594, 761], "unique_lock": [594, 595], "cv_": [594, 595], "notify_al": 594, "f_new": [594, 595], "try_dequeu": 594, "paus": [594, 595], "functor": [594, 595], "ctplpool": 594, "flag_ref": 594, "is_pop": 594, "anyth": 594, "guard_amdinfer_util_ctpl": 595, "_1": 595, "packaged_task": 595, "other_param": 595, "nthread": 595, "pck": 595, "placehold": 595, "tidi": [595, 747], "think": 595, "leak": 595, "newdeleteleak": 595, "notify_on": 595, "rethrow": 595, "std_out_": 596, "std_e": 596, "basic_istream": 596, "__istream_typ": 596, "bp": 596, "somewher": [596, 749, 750, 755], "nonnullparamcheck": 596, "ipstream": 596, "stderr": 596, "redirect": 596, "std_out": 596, "std_err": 596, "chunk": 596, "been": [596, 761], "whatev": 596, "left": [596, 645, 753], "gcount": 596, "guard_amdinfer_util_exec": 597, "guard_amdinfer_util_memori": 598, "dst": 598, "is_pointer_v": [598, 617], "_glibcxx_use_cxx11_abi": 599, "match_result": 599, "_base_typ": 599, "rege": 599, "basic_str": [599, 611, 617, 621], "smatch": 599, "regex_search": 599, "var": 599, "cxx11": 599, "abi": 599, "distanc": 599, "guard_amdinfer_helpers_parse_env": 600, "guard_amdinfer_util_queu": 601, "ifstream": [602, 619], "default_line_length": 602, "getlin": 602, "guard_amdinfer_util_read_nth_lin": 603, "guard_amdinfer_helpers_str": 604, "0ul": 604, "str_lower": 604, "all_of": 604, "ostringstream": 604, "guard_amdinfer_helpers_thread": 605, "__linux__": 605, "sy": 605, "prctl": 605, "pr_set_nam": 605, "times_": [606, 607], "guard_amdinfer_util_tim": 607, "stop_tim": 607, "duration_cast": 607, "guard_amdinfer_util_trait": 608, "disjunct": [608, 643], "is_sam": [608, 643], "guard_amdinfer_version_hpp": 609, "create_data_typ": [610, 611, 613, 621, 622], "batchp": [610, 611, 613, 621, 623], "inferencer": [610, 611, 613, 614, 615, 616, 617, 618, 621, 622], "autoexpandenvironmentva": [610, 611, 613, 621, 622], "aigraph": [610, 611, 613, 621, 622], "doacquir": [610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "doreleas": [610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "dodestroi": [610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "sys_manager_": [610, 611, 613, 621, 622], "graph_": [610, 611, 613, 621, 622, 625], "default_batch_s": [610, 611, 619, 621, 623], "graph_zoo": [610, 611, 613, 621, 622], "graph_add": 610, "aks_graph": [610, 611, 613, 621, 622], "loadgraph": [610, 611, 613, 621, 622], "graph_nam": [610, 611, 613, 621], "getgraph": [610, 611, 613, 621, 622], "0f": 610, "data_in_ptr": 610, "enqueuejob": [610, 611, 613, 621, 622], "out_data_descriptor": [610, 611, 613, 621, 622], "manual": [610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625, 750, 761], "imdecod": [611, 617, 621], "imread_unchang": [611, 617, 621], "base64_decod": [611, 617, 621], "graph_name_": [611, 621, 622], "yolov3": [611, 613], "aks_graph_nam": [611, 613, 621], "1920": [611, 613, 617, 618, 621, 698, 718], "1080": [611, 613, 617, 618, 621, 697, 716], "graph_yolov3_u200_u250_amdinf": [611, 613], "tensor_count": [611, 621, 623], "input_shap": [611, 617, 619, 620, 621, 625], "input_dtyp": [611, 617, 621], "idata": [611, 613, 617, 618, 621, 622], "decoded_str": [611, 617, 621], "top_k_data": [611, 613, 621, 622], "my_data_2": 611, "batch_id": [611, 613], "output_nam": [611, 614, 615, 616, 617, 619, 620, 621, 623, 625], "guard_amdinfer_workers_aks_detect": 612, "class_id": [612, 613, 644], "score": [612, 644], "y": [612, 613, 622, 644], "future_statu": [613, 622], "imencod": [613, 617, 618, 622], "videocaptur": [613, 618, 622], "videocapt": [613, 622], "to_": [613, 619, 620], "base64_encod": [613, 618, 622], "kbatchsiz": [613, 614, 615, 616, 617, 618, 620, 622], "isopen": [613, 618, 622], "succeed": [613, 618, 622], "videocaptureproperti": [613, 618, 622], "cap_prop_frame_count": [613, 618, 622], "requested_count": [613, 622], "min": [613, 622], "fp": [613, 618, 622, 760], "cap_prop_fp": [613, 618, 622], "video_width": [613, 622], "cap_prop_frame_width": [613, 622], "video_height": [613, 622], "cap_prop_frame_height": [613, 622], "round": [613, 622], "nearest": [613, 622], "count_adjust": [613, 622], "frame_num": 613, "enqueue_batch": 613, "buf": [613, 617, 618, 622], "jpg": [613, 617, 618, 622, 747, 766], "enc_msg": [613, 617, 618, 622], "wait_for": [613, 622], "detect_respons": 613, "trim": [613, 622], "comma": [613, 622], "startfollowspan": [614, 615, 616, 617, 618], "spanptr": [614, 615, 616, 617, 618], "handle_": 614, "input_tensors_": 614, "output_tensors_": 614, "_model": 614, "input_ptr": [614, 615], "output_ptr": [614, 615], "run_ptr": 614, "runmodel": 614, "dlclose": 614, "dynamic_cast": [615, 624, 625], "output_arg": 616, "char_bit": 617, "bitwise_not": [617, 618], "imr": 617, "base64_": 617, "kalphapres": 617, "ibuf": 617, "obuf": 617, "odata": 617, "largest": 617, "255": 617, "1ull": 617, "incr": 617, "hd": [617, 618], "output_data": 617, "cv_cap_pro": 618, "num_fram": [618, 622], "progra": 619, "runt": 619, "input_file_": 619, "prog_": 619, "pad": 619, "dummi": 619, "uniniti": 619, "crash": 619, "pad_batch_": 619, "input_sizes_": 619, "migraphx_shape_visit_typ": 619, "tuple_typ": 619, "migraphx_shape_bool_typ": 619, "migraphx_shape_half_typ": 619, "migraphx_shape_float_typ": 619, "migraphx_shape_double_typ": 619, "migraphx_shape_uint8_typ": 619, "migraphx_shape_int8_typ": 619, "migraphx_shape_uint16_typ": 619, "migraphx_shape_int16_typ": 619, "migraphx_shape_int32_typ": 619, "migraphx_shape_int64_typ": 619, "migraphx_shape_uint32_typ": 619, "migraphx_shape_uint64_typ": 619, "smsg": 619, "filepath": [619, 763], "pad_batch": 619, "lifetim": 619, "compiled_path": 619, "onnx_path": 619, "bake": 619, "tack": 619, "onto": 619, "eg": 619, "7_b64": 619, "replace_extens": [619, 620], "_b": 619, "messagepack": 619, "file_opt": 619, "set_file_format": 619, "msgpack": 619, "hip": [619, 747], "cryptic": 619, "gpu": [619, 747, 749, 754, 755, 762, 764, 765, 766, 768], "emsg": 619, "parse_onnx": 619, "onnx_opt": 619, "set_default_dim_valu": 619, "param_shap": 619, "get_parameter_shap": 619, "program_parameter_shap": 619, "offload_copi": 619, "compile_opt": 619, "comp_opt": 619, "set_offload_copi": 619, "fallback": 619, "use_gpu": 619, "target_str": 619, "ref": [619, 761], "targ": 619, "Not": [619, 767], "imposs": 619, "fetch": 619, "input_nam": 619, "output_shap": [619, 625], "get_output_shap": 619, "anam": 619, "ashap": 619, "llen": 619, "asiz": 619, "divid": 619, "batch_start": 619, "eval": [619, 620], "th": 619, "req0": 619, "inputs0": 619, "program_paramet": 619, "aninput": 619, "modelshap": 619, "migraph": 619, "bpickrel": 619, "inconsist": 619, "yolo": [619, 747], "reject": 619, "hello_migraphx": 619, "py": [619, 747, 748, 750, 759, 763, 765, 766, 770, 771], "av_shap": 619, "ii": 619, "a_data": 619, "fewer": 619, "real": [619, 758, 769], "req_idx": 619, "eval_start": 619, "migraphx_output": 619, "eval_end": 619, "eval_duration_u": 619, "eval_duration_": 619, "mega": 619, "elaps": 619, "sec": [619, 760], "portion": [619, 751], "request_output": 619, "blob": 619, "master": 619, "required_api": 619, "md": 619, "etc": 619, "result_s": 619, "resnet": [619, 622, 764, 766], "bert": [619, 747], "output_typ": 619, "output_dt": 619, "this_output": 619, "num_result": 619, "size_of_result": 619, "batch_tim": 619, "request_lat": 619, "outer": 619, "req_": 619, "batch_stop": 619, "file_no": 620, "ivalu": 620, "1000": [620, 623, 732, 749, 764], "jit": 620, "modul": [620, 747], "image_width_": [620, 623], "image_height_": [620, 623], "image_channels_": [620, 623], "image_size_": [620, 623], "output_classes_": [620, 623], "input_dt_": [620, 623], "has_extens": 620, "torch_modul": 620, "kcpu": 620, "c10": 620, "onlin": [620, 747, 748, 758, 770], "optimize_for_infer": 620, "ensur": [620, 759, 761, 765, 766], "gradient": 620, "nogradguard": 620, "no_grad": 620, "inferencemod": 620, "guard": 620, "input_vec": 620, "kf32": 620, "vec_siz": [620, 623], "ptmodel": 620, "float_buff": [620, 623], "infer_start": [620, 623], "suport": 620, "infer_stop": [620, 623], "istupl": 620, "totensor": 620, "inceptionv3": 620, "googlenet": 620, "totupl": 620, "response_s": [620, 621, 623], "total": [620, 623], "dpucadf8h": 621, "graph_tf_resnet_v1_50_u200_u250_amdinf": [621, 622], "exclud": [621, 771], "rtld": 623, "tf_version": 623, "graphdef": 623, "tensorshap": 623, "ttype": 623, "flat": 623, "dt_float": 623, "readbinaryproto": 623, "configproto": 623, "newsess": 623, "sessionopt": 623, "opera": 623, "amdinfer_enabl": 623, "dat": 623, "inferenceresp": 623, "prote": 623, "metr": 623, "knumb": 623, "session_": 623, "graph_def_": 623, "input_node_": 623, "output_node_": 623, "logmsg": 623, "set_use_per_session_thread": 623, "default_inter_op": 623, "default_intra_op": 623, "inter_op": 623, "intra_op": 623, "set_intra_op_parallelism_thread": 623, "set_inter_op_parallelism_thread": 623, "tfmodel": 623, "debugstr": 623, "input_pair": 623, "tostr": 623, "tensorflow_cc": 623, "omp": 623, "unexpectedli": 623, "preload": 623, "iomp": 623, "libiomp5": 623, "tensorflow_framework": 623, "libtensorflow_cc": 623, "rtld_global": 623, "guard_amdinfer_workers_work": 624, "atomic_int32_t": 625, "runnerext": 625, "amdinfer_enable_m": 625, "autoexpandenvironm": 625, "knumbuff": 625, "getrunn": 625, "subgraph_": 625, "kernel_": 625, "runner_": 625, "output_type_": 625, "output_size_": 625, "thread_pool_": 625, "aks_xmodel_root": 625, "default_path": 625, "u200_u250": 625, "resnet_v1_50_tf": [625, 747, 764], "get_root_subgraph": 625, "children_topological_sort": 625, "dpu_graph": 625, "has_attr": 625, "get_attr": 625, "chain": 625, "dpu_fingerprint": 625, "fingerprint": 625, "kthread": 625, "create_runn": 625, "get_input_tensor": 625, "input_typ": 625, "get_data_typ": 625, "get_output_tensor": 625, "thread_pool_s": 625, "max_thread_pool_s": 625, "thread_pool_delai": 625, "inputs_ptr": 625, "get_nam": 625, "outputs_ptr": 625, "get_output": 625, "get_element_num": 625, "sync_for_writ": 625, "execute_async": 625, "job_id": 625, "sync_for_read": 625, "num_batch": 625, "num_output": 625, "doxygenstruct": [629, 646], "integ": [640, 740, 742, 743, 752], "caller": 640, "endlessli": 640, "variad": 643, "comparison": 645, "hand": 645, "doxygentypedef": [652, 661, 667, 668, 669, 670, 672, 673, 674, 675, 676, 685, 691], "subdirectori": 694, "maximum": [702, 704, 705, 761], "usabl": 702, "20mib": 704, "mib": 705, "400mib": 705, "doxygenvari": [720, 738], "major": 740, "minor": 743, "catalogu": 747, "conflict": 747, "preced": 747, "deploy": [747, 755, 759, 770, 771], "larger": [747, 752], "contrast": 747, "subset": [747, 752], "flavor": 747, "tabl": 747, "both": [747, 749, 750, 754, 755, 766, 768, 771], "apt": 747, "bash": [747, 748, 755, 765], "1ubuntu1": 747, "gpl": 747, "4ubuntu1": 747, "llvm": 747, "appli": [747, 755], "curl": 747, "68": [747, 760], "1ubuntu2": 747, "0ubuntu2": 747, "qt": 747, "0ubuntu1": 747, "lgpl": 747, "25": 747, "1ubuntu3": 747, "gnupg2": 747, "19": 747, "3ubuntu2": 747, "sign": 747, "graphviz": 747, "42": [747, 760], "3build2": 747, "epl": 747, "libboost1": 747, "6ubuntu6": 747, "libboost": 747, "filesystem1": 747, "serialization1": 747, "system1": 747, "thread1": 747, "libbrotli": 747, "6ubuntu0": 747, "mit": 747, "libgoogl": 747, "glog": 747, "1build1": 747, "bsd": 747, "libnuma1": 747, "12": [747, 760, 761, 763], "libssl": 747, "1f": 747, "dual": 747, "openssl": 747, "ssleai": 747, "local": [747, 748, 749, 750, 752, 754, 758], "31": 747, "0ubuntu9": 747, "60": [747, 760], "git20180626": 747, "aebd88": 747, "openssh": 747, "2p1": 747, "4ubuntu0": 747, "remot": 747, "pkg": 747, "0ubuntu4": 747, "unilog": 747, "python3": [747, 748, 759, 765, 766, 770, 771], "psf": 747, "sudo": [747, 765], "isc": 747, "grant": 747, "elev": 747, "symlink": 747, "freeli": 747, "absolut": [747, 760], "tzdata": 747, "2022f": 747, "0ubuntu0": 747, "domain": 747, "timezon": 747, "uuid": 747, "1ubuntu9": 747, "valgrind": 747, "15": 747, "vim": 747, "2269": 747, "1ubuntu5": 747, "edit": [747, 753, 763], "wget": [747, 758, 764, 766, 769], "internet": 747, "zlib1g": 747, "11": [747, 763], "dfsg": 747, "2ubuntu1": 747, "archiv": [747, 755, 765], "50401": 747, "84": 747, "miopen": 747, "rocbla": 747, "46": [747, 760], "pip": [747, 763, 765, 766], "black": 747, "breath": 747, "sphinx": 747, "cmakelang": 747, "linter": 747, "formatt": 747, "cpplint": 747, "fastcov": 747, "numpi": [747, 750, 752, 763], "scientif": 747, "opencv": 747, "headless": 747, "pybind11_mkdoc": 747, "stubgen": 747, "infrastructur": 747, "plugin": [747, 755, 770], "xprocess": 747, "rich": 747, "setuptool": 747, "argpars": 747, "cli": 747, "copybutton": 747, "button": 747, "tracker": 747, "tab": 747, "sphinxcontrib": 747, "confluencebuild": 747, "confluenc": 747, "kitwar": 747, "cameron314": 747, "jarro2783": 747, "gdraheim": 747, "systemctl": 747, "4505": 747, "eupl": 747, "pyinstal": 747, "xrm": [747, 770], "drogonframework": 747, "spartanj": 747, "ffmpeg": 747, "tschaub": 747, "gh": 747, "page": [747, 749, 750, 753], "publish": [747, 748, 759, 764, 770], "branch": 747, "lf": [747, 765], "13": [747, 760], "tianon": 747, "gosu": 747, "googletest": 747, "44": 747, "jemalloc": 747, "libb64": 747, "codec": 747, "lcov": 747, "telemetri": 747, "pybind": 747, "jupp0r": 747, "protocolbuff": 747, "fpagliughi": 747, "e5c51b5": 747, "gabim": 747, "wg": 747, "xrt": [747, 751, 770], "427": 747, "pt_v1": [747, 771], "0_zendnn_v4": 747, "0_c": [747, 771], "_api": [747, 771], "zip": [747, 750, 755, 764, 771], "eula": [747, 771], "tf_v2": [747, 771], "10_zendnn_v4": [747, 771], "bicycl": 747, "384566_640": 747, "pixabai": 747, "codecoverag": 747, "bilk": 747, "crowd": 747, "flickr": 747, "2306189268_88cc86b30f_z": 747, "cc": 747, "BY": 747, "vit": 747, "dog": [747, 766], "3619020_640": [747, 766], "nine_9273": 747, "kera": 747, "mnist": [747, 755], "dataset": [747, 766], "sa": 747, "migraphx_bert": 747, "rocmsoftwareplatform": 747, "amdmigraphx": 747, "squad": 747, "yolov4": 747, "migraphx_yolo": 747, "yolov4_infer": 747, "ipynb": 747, "sport": 747, "1284275_640": 747, "yolo_image_process": 747, "image_process": 747, "physicswork": 747, "ogv": 747, "wikimedia": 747, "unport": 747, "girl": 747, "1867092_640": 747, "vitis_ai_runtime_r1": 747, "0_image_video": 747, "tar": [747, 755, 758, 764, 769], "gz": [747, 755, 758, 764, 769], "densebox_320_320": 747, "u200": [747, 764], "u250": [747, 764, 770], "r1": 747, "yolov3_voc": 747, "pt_resnet50_imagenet_224_224_8": 747, "2g_2": 747, "5_1": 747, "0_z3": 747, "tf_resnetv1_50_imagenet_224_224_6": [747, 764], "97g_2": [747, 764], "val": 747, "yolov4_anchor": 747, "coco": 747, "bertsquad": 747, "run_onnx_squad": 747, "inputs_amd": 747, "deploi": [748, 751, 753, 754, 755, 764], "power": [748, 770], "easier": [748, 768], "quicker": [748, 764], "oppos": 748, "shell": [748, 755, 765], "overridden": [748, 765], "instruct": [748, 755, 759, 763, 770, 771], "secur": 748, "5000": 748, "whoami": [748, 759, 763, 770, 771], "snippet": [748, 761], "verifi": [748, 749, 750, 755, 771], "cluster": [748, 755], "sha": 748, "lookup": 748, "yaml": [748, 755], "sha256": 748, "inspect": 748, "repodigest": 748, "somevari": 748, "somevalu": 748, "your": [748, 749, 750, 752, 753, 754, 755, 758, 759, 761, 763, 764, 765, 766, 769, 770], "altern": [748, 768, 770], "volum": [748, 759, 764, 770], "talk": [748, 750, 754], "ahead": 748, "walk": [749, 750, 752], "counterpart": [749, 750], "example_resnet50_python": 749, "demonstr": [749, 750, 752, 766], "stai": [749, 750, 752], "aliv": [749, 750], "remain": [749, 750, 752], "ip": [749, 750, 766], "server_addr": [749, 750], "reachabl": 749, "http_port_str": 749, "grpc_port_str": 749, "path_to_model": 749, "timeout_m": 749, "coalesc": 749, "possibli": [749, 750], "resolveimagepath": 749, "path_to_imag": 749, "probabl": [749, 750], "human": [749, 750], "simplest": [749, 750], "top_indic": [749, 750], "printlabel": 749, "path_to_label": 749, "image_path": [749, 750], "wrap": [749, 750], "submodul": 750, "autocomplet": 750, "resolve_image_path": 750, "pathlib": 750, "imageinferencerequest": [750, 752, 763], "def": [750, 752], "construct_request": 750, "ndarrai": [750, 763], "print_label": 750, "facilit": 751, "reconfigur": 751, "pcie": [751, 770], "alveo": [751, 770], "card": [751, 770], "zynq": 751, "7000": 751, "ultrascal": 751, "mpsoc": 751, "versal": 751, "acap": 751, "sleep": 752, "np": [752, 763], "start_serv": 752, "make_request": 752, "input_0": [752, 766], "input0": 752, "setuint32data": [752, 763], "erron": 752, "recv_data": 752, "getuint32data": [752, 763], "persist": [752, 770], "shown": [752, 765], "overview": [752, 753], "behind": 752, "scene": 752, "sophist": 752, "welcom": [753, 754], "offici": [753, 768], "introduct": 753, "sidebar": 753, "navig": 753, "panel": 753, "bottom": 753, "land": 753, "simplifi": 754, "bypass": 754, "integr": [754, 768, 771], "gate": 754, "remaind": 754, "roadmap": 754, "changelog": 754, "quickstart": 754, "quick": 754, "goe": 754, "commentari": 754, "depth": 754, "question": [754, 768], "contribut": 754, "propos": 754, "guidelin": 754, "serverless": 755, "reach": 755, "respect": [755, 764, 765], "kube": 755, "kubectl": 755, "crd": 755, "recommend": [755, 763], "servingruntim": 755, "model_a": [755, 764], "among": [755, 764], "images_in": 755, "28": [755, 760], "flatten": [755, 766], "reshap": 755, "signific": [755, 764, 766], "gc": 755, "s3": 755, "wherev": 755, "uri": 755, "clusterservingruntim": 755, "apivers": 755, "v1alpha1": 755, "amdserv": 755, "supportedmodelformat": 755, "protocolvers": 755, "assumpt": 755, "9000": 755, "8080": 755, "schedul": 755, "2gi": [755, 770], "v1beta1": 755, "inferenceservic": 755, "annot": 755, "autosc": 755, "scale": [755, 760], "concurr": 755, "exce": 755, "knativ": 755, "k8": 755, "isvc": 755, "predictor": 755, "modelformat": 755, "storageuri": 755, "older": 755, "trainedmodel": 755, "precursor": 755, "modelmesh": 755, "multi_model_serv": 755, "containerport": 755, "tcp": 755, "becom": [755, 768], "1gi": 755, "ingress_host": 755, "ingress_port": 755, "balanc": 755, "dn": 755, "rout": 755, "alon": 755, "pod_nam": 755, "prompt": 755, "whose": 755, "knob": 757, "affect": [757, 768], "captur": 757, "xxx": 757, "spdlog_level_debug": 757, "spdlog_level_warn": 757, "spdlog_level_error": 757, "spdlog_level_crit": 757, "spdlog_level_off": 757, "ktrace": 757, "kdebug": 757, "kinfo": 757, "kerror": 757, "binari": [758, 769], "instrument": [758, 769], "cd": [758, 765, 766, 769], "amd64": [758, 769], "xzf": [758, 764, 769], "cp": 758, "amdinfer_root": 758, "9090": 758, "browser": [758, 760, 769], "setup": [759, 765, 770], "recogn": 759, "kfd": [759, 764], "dri": [759, 764, 770], "2x": 760, "intel": 760, "xeon": 760, "gold": 760, "6252": 760, "10ghz": 760, "ram": [760, 761], "12x": 760, "gb": 760, "2666": 760, "mhz": 760, "ddr4": 760, "bin": [760, 764, 770], "t32": 760, "c400": 760, "d10": 760, "8501": 760, "400": [760, 767], "stat": 760, "avg": 760, "stdev": 760, "13m": 760, "321": 760, "66u": 760, "19m": 760, "80": 760, "64k": 760, "41k": 760, "23": 760, "01k": 760, "82": 760, "3417779": 760, "655": 760, "15mb": 760, "338412": 760, "87mb": 760, "cat": 760, "lua": 760, "hello_world": [760, 765], "key3": 760, "value3": 760, "key2": 760, "value2": 760, "56m": 760, "09m": 760, "198": 760, "78m": 760, "196": 760, "22k": 760, "09": 760, "323168": 760, "53": 760, "63mb": 760, "32002": 760, "39": 760, "31mb": 760, "weak": 760, "trend": 760, "seem": 760, "120": 760, "stress": 760, "linearli": 760, "deliv": 760, "amdinfer_thread": 760, "wrk_thread": 760, "wrk_connect": 760, "wrk_time": 760, "38": 760, "00": 760, "36": 760, "114": 760, "116": 760, "03": 760, "117": 760, "118": 760, "96": 760, "63": 760, "37": 760, "83": 760, "45": 760, "77": 760, "86": 760, "142": 760, "140": 760, "239": 760, "236": 760, "220": 760, "50": 760, "maxim": 761, "grade": 761, "adequ": 761, "32gb": 761, "minim": 761, "sever": 761, "area": 761, "improv": [761, 768], "demand": 761, "overlap": 761, "sequenti": 761, "aiohttp": 761, "principl": 761, "higher": 761, "One": 761, "futurequeu": 761, "workernam": 761, "my_queu": 761, "noth": 761, "unspecifi": 761, "physic": 761, "cu": 761, "necessarili": 761, "funnel": 761, "fast": 761, "submiss": 761, "outsid": 763, "precompil": [763, 764], "fresh": 763, "x86_64": 763, "cpython": 763, "quai": 763, "pypa": 763, "manylinux2014_x86_64": 763, "yum": 763, "differenti": 763, "ci": 763, "upload": 763, "cibw_manylinux_x86_64_imag": 763, "pyproject": 763, "toml": 763, "wheelhous": 763, "cp37": 763, "conda": 763, "bare": 763, "badstatu": 763, "__init__": 763, "kwarg": 763, "connectionerror": 763, "float32": 763, "float64": 763, "_amdinf": 763, "arg0": 763, "environmentnotseterror": 763, "externalerror": 763, "filenotfounderror": 763, "filereaderror": 763, "dict": 763, "astensor": 763, "typeerror": 763, "capsul": 763, "getfp16data": 763, "getfp32data": [763, 766], "getfp64data": 763, "getint16data": 763, "getint32data": 763, "getint64data": 763, "getint8data": 763, "getstringdata": 763, "getuint16data": 763, "getuint64data": 763, "getuint8data": 763, "setfp16data": 763, "setfp32data": 763, "setfp64data": 763, "setint16data": 763, "setint32data": 763, "setint64data": [763, 766], "setint8data": 763, "setstringdata": 763, "setuint16data": 763, "setuint64data": 763, "setuint8data": 763, "invalidargumenterror": 763, "arg1": 763, "arg2": 763, "getbool": 763, "getfloat": 763, "getint": 763, "getstr": 763, "runtimeerror": 763, "pathlik": 763, "inference_request_to_dict": 763, "parallel_inf": 763, "start_http_client_serv": 763, "stringtoarrai": 763, "administr": [764, 766], "model_b": 764, "opendownload": 764, "unzip": 764, "resnet_v1_50_baseline_6": 764, "96b_922": 764, "mkdir": 764, "mv": 764, "vision": 764, "r2": 764, "resnet_v1_50": 764, "reshape_1": 764, "capabl": 764, "yourself": 764, "amdih": 764, "uif1": 764, "1_zendnn_amdinfer_0": 764, "1_migraphx_amdinfer_0": 764, "rw": 764, "xclmgmt": [764, 770], "deepli": 765, "driver": 765, "veri": 765, "small": 765, "300": 765, "enter": 765, "usernam": 765, "preset": 765, "splash": 765, "screen": 765, "stale": 765, "cach": 765, "mix": 765, "grep": [765, 766], "abid": 765, "agreement": [765, 771], "recent": 765, "ctrl": 765, "dive": 765, "easili": 766, "confirm": [766, 770], "nint": 766, "train": 766, "imagenet": 766, "imagenet_class": 766, "ip_address": 766, "http_server_addr": 766, "grpc_server_addr": 766, "http_client": 766, "grpc_client": 766, "interchang": 766, "driven": 767, "adopt": 767, "200": 767, "404": 767, "abl": 767, "livenessprob": 767, "inferenc": 767, "readinessprob": 767, "polici": 767, "html": 767, "tent": 768, "exhaust": 768, "Of": 768, "cours": 768, "assess": 768, "feedback": 768, "prioriti": 768, "ongo": 768, "websit": 768, "179": 768, "eas": 768, "prong": 768, "engag": 768, "big": 768, "inevit": 768, "ask": 768, "reliabl": 768, "manner": 768, "qualiti": 768, "zoo": 768, "jaegertrac": 769, "16686": 769, "vck5000": 770, "essenc": 770, "flash": 770, "act": 770, "intermedi": 770, "reprogram": 770, "secondari": 770, "xbutil": 770, "xlnx_vart_firmwar": 770, "achiev": 770, "xilinx_u250_gen3x16_xdma_shell_3_1": 770, "epyc": 771, "12_zendnn_v4": 771, "dockerignor": 771, "meet": 771, "criteria": 771, "eager": 771, "torchscript": 771}, "objects": {"": [[111, 0, 1, "c.AMDINFER_BUILD_TESTING", "AMDINFER_BUILD_TESTING"], [118, 0, 1, "c.AMDINFER_ENABLE_AKS", "AMDINFER_ENABLE_AKS"], [120, 0, 1, "c.AMDINFER_ENABLE_GRPC", "AMDINFER_ENABLE_GRPC"], [119, 0, 1, "c.AMDINFER_ENABLE_HTTP", "AMDINFER_ENABLE_HTTP"], [116, 0, 1, "c.AMDINFER_ENABLE_LOGGING", "AMDINFER_ENABLE_LOGGING"], [113, 0, 1, "c.AMDINFER_ENABLE_METRICS", "AMDINFER_ENABLE_METRICS"], [110, 0, 1, "c.AMDINFER_ENABLE_MIGRAPHX", "AMDINFER_ENABLE_MIGRAPHX"], [114, 0, 1, "c.AMDINFER_ENABLE_PTZENDNN", "AMDINFER_ENABLE_PTZENDNN"], [112, 0, 1, "c.AMDINFER_ENABLE_TFZENDNN", "AMDINFER_ENABLE_TFZENDNN"], [117, 0, 1, "c.AMDINFER_ENABLE_TRACING", "AMDINFER_ENABLE_TRACING"], [121, 0, 1, "c.AMDINFER_ENABLE_VITIS", "AMDINFER_ENABLE_VITIS"], [127, 0, 1, "c.AMDINFER_IF_LOGGING", "AMDINFER_IF_LOGGING"], [129, 0, 1, "c.AMDINFER_LOG_DEBUG", "AMDINFER_LOG_DEBUG"], [128, 0, 1, "c.AMDINFER_LOG_ERROR", "AMDINFER_LOG_ERROR"], [125, 0, 1, "c.AMDINFER_LOG_INFO", "AMDINFER_LOG_INFO"], [126, 0, 1, "c.AMDINFER_LOG_TRACE", "AMDINFER_LOG_TRACE"], [124, 0, 1, "c.AMDINFER_LOG_WARN", "AMDINFER_LOG_WARN"], [130, 0, 1, "c.GUARD_AMDINFER_CORE_PARAMETERS", "GUARD_AMDINFER_CORE_PARAMETERS"], [746, 1, 1, "_CPPv48amdinfer", "amdinfer"], [626, 2, 1, "_CPPv4N8amdinfer15AddDataToTensorE", "amdinfer::AddDataToTensor"], [626, 3, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()"], [626, 4, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::T"], [626, 4, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::Tensor"], [626, 5, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::observer"], [626, 5, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::size"], [626, 5, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::source_data"], [626, 5, 1, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer", "amdinfer::AddDataToTensor::operator()::tensor"], [671, 1, 1, "_CPPv4N8amdinfer12AsyncServiceE", "amdinfer::AsyncService"], [7, 2, 1, "_CPPv4N8amdinfer5BatchE", "amdinfer::Batch"], [7, 3, 1, "_CPPv4N8amdinfer5Batch10addRequestE19InferenceRequestPtr", "amdinfer::Batch::addRequest"], [7, 5, 1, "_CPPv4N8amdinfer5Batch10addRequestE19InferenceRequestPtr", "amdinfer::Batch::addRequest::request"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch5beginEv", "amdinfer::Batch::begin"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch5emptyEv", "amdinfer::Batch::empty"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch3endEv", "amdinfer::Batch::end"], [7, 3, 1, "_CPPv4N8amdinfer5Batch15getInputBuffersEv", "amdinfer::Batch::getInputBuffers"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch12getInputSizeEv", "amdinfer::Batch::getInputSize"], [7, 3, 1, "_CPPv4N8amdinfer5Batch16getOutputBuffersEv", "amdinfer::Batch::getOutputBuffers"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch13getOutputSizeEv", "amdinfer::Batch::getOutputSize"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch18getRawInputBuffersEv", "amdinfer::Batch::getRawInputBuffers"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch19getRawOutputBuffersEv", "amdinfer::Batch::getRawOutputBuffers"], [7, 3, 1, "_CPPv4N8amdinfer5Batch10getRequestE6size_t", "amdinfer::Batch::getRequest"], [7, 5, 1, "_CPPv4N8amdinfer5Batch10getRequestE6size_t", "amdinfer::Batch::getRequest::index"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch11getRequestsEv", "amdinfer::Batch::getRequests"], [7, 3, 1, "_CPPv4N8amdinfer5Batch10setBuffersE10BufferPtrs10BufferPtrs", "amdinfer::Batch::setBuffers"], [7, 5, 1, "_CPPv4N8amdinfer5Batch10setBuffersE10BufferPtrs10BufferPtrs", "amdinfer::Batch::setBuffers::inputs"], [7, 5, 1, "_CPPv4N8amdinfer5Batch10setBuffersE10BufferPtrs10BufferPtrs", "amdinfer::Batch::setBuffers::outputs"], [7, 3, 1, "_CPPv4NK8amdinfer5Batch4sizeEv", "amdinfer::Batch::size"], [647, 1, 1, "_CPPv4N8amdinfer8BatchPtrE", "amdinfer::BatchPtr"], [648, 1, 1, "_CPPv4N8amdinfer8BatchPtrE", "amdinfer::BatchPtr"], [649, 1, 1, "_CPPv4N8amdinfer13BatchPtrQueueE", "amdinfer::BatchPtrQueue"], [8, 2, 1, "_CPPv4N8amdinfer7BatcherE", "amdinfer::Batcher"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPool", "amdinfer::Batcher::Batcher"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::Batcher::Batcher"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher7BatcherERK7Batcher", "amdinfer::Batcher::Batcher"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher7BatcherERR7Batcher", "amdinfer::Batcher::Batcher"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7BatcherERK7Batcher", "amdinfer::Batcher::Batcher::batcher"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7BatcherERR7Batcher", "amdinfer::Batcher::Batcher::other"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::Batcher::Batcher::parameters"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPool", "amdinfer::Batcher::Batcher::pool"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::Batcher::Batcher::pool"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher11batch_size_E", "amdinfer::Batcher::batch_size_"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher3endEv", "amdinfer::Batcher::end"], [8, 3, 1, "_CPPv4NK8amdinfer7Batcher7enqueueE19RequestContainerPtr", "amdinfer::Batcher::enqueue"], [8, 5, 1, "_CPPv4NK8amdinfer7Batcher7enqueueE19RequestContainerPtr", "amdinfer::Batcher::enqueue::request"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher13getInputQueueEv", "amdinfer::Batcher::getInputQueue"], [8, 3, 1, "_CPPv4NK8amdinfer7Batcher7getNameEv", "amdinfer::Batcher::getName"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher14getOutputQueueEv", "amdinfer::Batcher::getOutputQueue"], [8, 3, 1, "_CPPv4NK8amdinfer7Batcher9getStatusEv", "amdinfer::Batcher::getStatus"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher12input_queue_E", "amdinfer::Batcher::input_queue_"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher6model_E", "amdinfer::Batcher::model_"], [8, 3, 1, "_CPPv4N8amdinfer7BatcheraSERK7Batcher", "amdinfer::Batcher::operator="], [8, 3, 1, "_CPPv4N8amdinfer7BatcheraSERR7Batcher", "amdinfer::Batcher::operator="], [8, 5, 1, "_CPPv4N8amdinfer7BatcheraSERR7Batcher", "amdinfer::Batcher::operator=::other"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher13output_queue_E", "amdinfer::Batcher::output_queue_"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher11parameters_E", "amdinfer::Batcher::parameters_"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher5pool_E", "amdinfer::Batcher::pool_"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher3runERKNSt6vectorI16MemoryAllocatorsEE", "amdinfer::Batcher::run"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher3runERKNSt6vectorI16MemoryAllocatorsEE", "amdinfer::Batcher::run::allocators"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher12setBatchSizeE6size_t", "amdinfer::Batcher::setBatchSize"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher12setBatchSizeE6size_t", "amdinfer::Batcher::setBatchSize::batch_size"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher7setNameERKNSt6stringE", "amdinfer::Batcher::setName"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher7setNameERKNSt6stringE", "amdinfer::Batcher::setName::name"], [8, 3, 1, "_CPPv4N8amdinfer7Batcher5startERKNSt6vectorI16MemoryAllocatorsEE", "amdinfer::Batcher::start"], [8, 5, 1, "_CPPv4N8amdinfer7Batcher5startERKNSt6vectorI16MemoryAllocatorsEE", "amdinfer::Batcher::start::allocator"], [8, 6, 1, "_CPPv4N8amdinfer7Batcher7thread_E", "amdinfer::Batcher::thread_"], [8, 3, 1, "_CPPv4N8amdinfer7BatcherD0Ev", "amdinfer::Batcher::~Batcher"], [149, 7, 1, "_CPPv4N8amdinfer13BatcherStatusE", "amdinfer::BatcherStatus"], [149, 8, 1, "_CPPv4N8amdinfer13BatcherStatus4DeadE", "amdinfer::BatcherStatus::Dead"], [149, 8, 1, "_CPPv4N8amdinfer13BatcherStatus8InactiveE", "amdinfer::BatcherStatus::Inactive"], [149, 8, 1, "_CPPv4N8amdinfer13BatcherStatus3NewE", "amdinfer::BatcherStatus::New"], [149, 8, 1, "_CPPv4N8amdinfer13BatcherStatus3RunE", "amdinfer::BatcherStatus::Run"], [688, 1, 1, "_CPPv4I0EN8amdinfer13BlockingQueueE", "amdinfer::BlockingQueue"], [688, 4, 1, "_CPPv4I0EN8amdinfer13BlockingQueueE", "amdinfer::BlockingQueue::T"], [9, 2, 1, "_CPPv4N8amdinfer6BufferE", "amdinfer::Buffer"], [9, 3, 1, "_CPPv4N8amdinfer6Buffer6BufferE16MemoryAllocators", "amdinfer::Buffer::Buffer"], [9, 5, 1, "_CPPv4N8amdinfer6Buffer6BufferE16MemoryAllocators", "amdinfer::Buffer::Buffer::allocator"], [9, 3, 1, "_CPPv4N8amdinfer6Buffer4dataE6size_t", "amdinfer::Buffer::data"], [9, 5, 1, "_CPPv4N8amdinfer6Buffer4dataE6size_t", "amdinfer::Buffer::data::offset"], [9, 3, 1, "_CPPv4NK8amdinfer6Buffer12getAllocatorEv", "amdinfer::Buffer::getAllocator"], [9, 3, 1, "_CPPv4I0EN8amdinfer6Buffer5writeE6size_t1T6size_t", "amdinfer::Buffer::write"], [9, 3, 1, "_CPPv4N8amdinfer6Buffer5writeEPv6size_t6size_t", "amdinfer::Buffer::write"], [9, 4, 1, "_CPPv4I0EN8amdinfer6Buffer5writeE6size_t1T6size_t", "amdinfer::Buffer::write::T"], [9, 5, 1, "_CPPv4N8amdinfer6Buffer5writeEPv6size_t6size_t", "amdinfer::Buffer::write::data"], [9, 5, 1, "_CPPv4I0EN8amdinfer6Buffer5writeE6size_t1T6size_t", "amdinfer::Buffer::write::offset"], [9, 5, 1, "_CPPv4N8amdinfer6Buffer5writeEPv6size_t6size_t", "amdinfer::Buffer::write::offset"], [9, 5, 1, "_CPPv4N8amdinfer6Buffer5writeEPv6size_t6size_t", "amdinfer::Buffer::write::size"], [9, 5, 1, "_CPPv4I0EN8amdinfer6Buffer5writeE6size_t1T6size_t", "amdinfer::Buffer::write::value"], [9, 3, 1, "_CPPv4N8amdinfer6BufferD0Ev", "amdinfer::Buffer::~Buffer"], [664, 1, 1, "_CPPv4N8amdinfer9BufferPtrE", "amdinfer::BufferPtr"], [662, 1, 1, "_CPPv4N8amdinfer10BufferPtrsE", "amdinfer::BufferPtrs"], [690, 1, 1, "_CPPv4N8amdinfer15BufferPtrsQueueE", "amdinfer::BufferPtrsQueue"], [689, 1, 1, "_CPPv4N8amdinfer18BufferPtrsQueuePtrE", "amdinfer::BufferPtrsQueuePtr"], [654, 1, 1, "_CPPv4N8amdinfer13BufferRawPtrsE", "amdinfer::BufferRawPtrs"], [665, 1, 1, "_CPPv4N8amdinfer13BufferRawPtrsE", "amdinfer::BufferRawPtrs"], [10, 2, 1, "_CPPv4I00EN8amdinfer8CallDataE", "amdinfer::CallData"], [10, 3, 1, "_CPPv4N8amdinfer8CallData8CallDataEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallData::CallData"], [10, 5, 1, "_CPPv4N8amdinfer8CallData8CallDataEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallData::CallData::cq"], [10, 5, 1, "_CPPv4N8amdinfer8CallData8CallDataEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallData::CallData::service"], [10, 7, 1, "_CPPv4N8amdinfer8CallData10CallStatusE", "amdinfer::CallData::CallStatus"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus6CreateE", "amdinfer::CallData::CallStatus::Create"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus6FinishE", "amdinfer::CallData::CallStatus::Finish"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus7ProcessE", "amdinfer::CallData::CallStatus::Process"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus4WaitE", "amdinfer::CallData::CallStatus::Wait"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus6CreateE", "amdinfer::CallData::Create"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus6FinishE", "amdinfer::CallData::Finish"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus7ProcessE", "amdinfer::CallData::Process"], [10, 4, 1, "_CPPv4I00EN8amdinfer8CallDataE", "amdinfer::CallData::ReplyType"], [10, 4, 1, "_CPPv4I00EN8amdinfer8CallDataE", "amdinfer::CallData::RequestType"], [10, 8, 1, "_CPPv4N8amdinfer8CallData10CallStatus4WaitE", "amdinfer::CallData::Wait"], [10, 3, 1, "_CPPv4N8amdinfer8CallData14addNewCallDataEv", "amdinfer::CallData::addNewCallData"], [10, 6, 1, "_CPPv4N8amdinfer8CallData3cq_E", "amdinfer::CallData::cq_"], [10, 6, 1, "_CPPv4N8amdinfer8CallData4ctx_E", "amdinfer::CallData::ctx_"], [10, 3, 1, "_CPPv4N8amdinfer8CallData6finishERKN4grpc6StatusE", "amdinfer::CallData::finish"], [10, 5, 1, "_CPPv4N8amdinfer8CallData6finishERKN4grpc6StatusE", "amdinfer::CallData::finish::status"], [10, 3, 1, "_CPPv4N8amdinfer8CallData13handleRequestEv", "amdinfer::CallData::handleRequest"], [10, 3, 1, "_CPPv4N8amdinfer8CallData7proceedEv", "amdinfer::CallData::proceed"], [10, 6, 1, "_CPPv4N8amdinfer8CallData6reply_E", "amdinfer::CallData::reply_"], [10, 6, 1, "_CPPv4N8amdinfer8CallData8request_E", "amdinfer::CallData::request_"], [10, 6, 1, "_CPPv4N8amdinfer8CallData8service_E", "amdinfer::CallData::service_"], [10, 6, 1, "_CPPv4N8amdinfer8CallData7status_E", "amdinfer::CallData::status_"], [10, 3, 1, "_CPPv4N8amdinfer8CallData14waitForRequestEv", "amdinfer::CallData::waitForRequest"], [10, 3, 1, "_CPPv4N8amdinfer8CallDataD0Ev", "amdinfer::CallData::~CallData"], [11, 2, 1, "_CPPv4N8amdinfer12CallDataBaseE", "amdinfer::CallDataBase"], [11, 3, 1, "_CPPv4N8amdinfer12CallDataBase7proceedEv", "amdinfer::CallDataBase::proceed"], [12, 2, 1, "_CPPv4N8amdinfer19CallDataHasHardwareE", "amdinfer::CallDataHasHardware"], [12, 3, 1, "_CPPv4N8amdinfer19CallDataHasHardware19CallDataHasHardwareEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataHasHardware::CallDataHasHardware"], [12, 5, 1, "_CPPv4N8amdinfer19CallDataHasHardware19CallDataHasHardwareEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataHasHardware::CallDataHasHardware::cq"], [12, 5, 1, "_CPPv4N8amdinfer19CallDataHasHardware19CallDataHasHardwareEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataHasHardware::CallDataHasHardware::service"], [12, 5, 1, "_CPPv4N8amdinfer19CallDataHasHardware19CallDataHasHardwareEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataHasHardware::CallDataHasHardware::state"], [12, 3, 1, "_CPPv4N8amdinfer19CallDataHasHardware14addNewCallDataEv", "amdinfer::CallDataHasHardware::addNewCallData"], [12, 3, 1, "_CPPv4N8amdinfer19CallDataHasHardware13handleRequestEv", "amdinfer::CallDataHasHardware::handleRequest"], [12, 3, 1, "_CPPv4N8amdinfer19CallDataHasHardware14waitForRequestEv", "amdinfer::CallDataHasHardware::waitForRequest"], [13, 2, 1, "_CPPv4N8amdinfer18CallDataModelInferE", "amdinfer::CallDataModelInfer"], [13, 3, 1, "_CPPv4N8amdinfer18CallDataModelInfer18CallDataModelInferEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelInfer::CallDataModelInfer"], [13, 5, 1, "_CPPv4N8amdinfer18CallDataModelInfer18CallDataModelInferEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelInfer::CallDataModelInfer::cq"], [13, 5, 1, "_CPPv4N8amdinfer18CallDataModelInfer18CallDataModelInferEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelInfer::CallDataModelInfer::service"], [13, 5, 1, "_CPPv4N8amdinfer18CallDataModelInfer18CallDataModelInferEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelInfer::CallDataModelInfer::state"], [13, 3, 1, "_CPPv4N8amdinfer18CallDataModelInfer14addNewCallDataEv", "amdinfer::CallDataModelInfer::addNewCallData"], [13, 3, 1, "_CPPv4N8amdinfer18CallDataModelInfer8getReplyEv", "amdinfer::CallDataModelInfer::getReply"], [13, 3, 1, "_CPPv4NK8amdinfer18CallDataModelInfer10getRequestEv", "amdinfer::CallDataModelInfer::getRequest"], [13, 3, 1, "_CPPv4N8amdinfer18CallDataModelInfer13handleRequestEv", "amdinfer::CallDataModelInfer::handleRequest"], [13, 3, 1, "_CPPv4N8amdinfer18CallDataModelInfer14waitForRequestEv", "amdinfer::CallDataModelInfer::waitForRequest"], [14, 2, 1, "_CPPv4N8amdinfer17CallDataModelListE", "amdinfer::CallDataModelList"], [14, 3, 1, "_CPPv4N8amdinfer17CallDataModelList17CallDataModelListEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelList::CallDataModelList"], [14, 5, 1, "_CPPv4N8amdinfer17CallDataModelList17CallDataModelListEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelList::CallDataModelList::cq"], [14, 5, 1, "_CPPv4N8amdinfer17CallDataModelList17CallDataModelListEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelList::CallDataModelList::service"], [14, 5, 1, "_CPPv4N8amdinfer17CallDataModelList17CallDataModelListEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelList::CallDataModelList::state"], [14, 3, 1, "_CPPv4N8amdinfer17CallDataModelList14addNewCallDataEv", "amdinfer::CallDataModelList::addNewCallData"], [14, 3, 1, "_CPPv4N8amdinfer17CallDataModelList13handleRequestEv", "amdinfer::CallDataModelList::handleRequest"], [14, 3, 1, "_CPPv4N8amdinfer17CallDataModelList14waitForRequestEv", "amdinfer::CallDataModelList::waitForRequest"], [15, 2, 1, "_CPPv4N8amdinfer17CallDataModelLoadE", "amdinfer::CallDataModelLoad"], [15, 3, 1, "_CPPv4N8amdinfer17CallDataModelLoad17CallDataModelLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelLoad::CallDataModelLoad"], [15, 5, 1, "_CPPv4N8amdinfer17CallDataModelLoad17CallDataModelLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelLoad::CallDataModelLoad::cq"], [15, 5, 1, "_CPPv4N8amdinfer17CallDataModelLoad17CallDataModelLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelLoad::CallDataModelLoad::service"], [15, 5, 1, "_CPPv4N8amdinfer17CallDataModelLoad17CallDataModelLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelLoad::CallDataModelLoad::state"], [15, 3, 1, "_CPPv4N8amdinfer17CallDataModelLoad14addNewCallDataEv", "amdinfer::CallDataModelLoad::addNewCallData"], [15, 3, 1, "_CPPv4N8amdinfer17CallDataModelLoad13handleRequestEv", "amdinfer::CallDataModelLoad::handleRequest"], [15, 3, 1, "_CPPv4N8amdinfer17CallDataModelLoad14waitForRequestEv", "amdinfer::CallDataModelLoad::waitForRequest"], [16, 2, 1, "_CPPv4N8amdinfer21CallDataModelMetadataE", "amdinfer::CallDataModelMetadata"], [16, 3, 1, "_CPPv4N8amdinfer21CallDataModelMetadata21CallDataModelMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelMetadata::CallDataModelMetadata"], [16, 5, 1, "_CPPv4N8amdinfer21CallDataModelMetadata21CallDataModelMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelMetadata::CallDataModelMetadata::cq"], [16, 5, 1, "_CPPv4N8amdinfer21CallDataModelMetadata21CallDataModelMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelMetadata::CallDataModelMetadata::service"], [16, 5, 1, "_CPPv4N8amdinfer21CallDataModelMetadata21CallDataModelMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelMetadata::CallDataModelMetadata::state"], [16, 3, 1, "_CPPv4N8amdinfer21CallDataModelMetadata14addNewCallDataEv", "amdinfer::CallDataModelMetadata::addNewCallData"], [16, 3, 1, "_CPPv4N8amdinfer21CallDataModelMetadata13handleRequestEv", "amdinfer::CallDataModelMetadata::handleRequest"], [16, 3, 1, "_CPPv4N8amdinfer21CallDataModelMetadata14waitForRequestEv", "amdinfer::CallDataModelMetadata::waitForRequest"], [17, 2, 1, "_CPPv4N8amdinfer18CallDataModelReadyE", "amdinfer::CallDataModelReady"], [17, 3, 1, "_CPPv4N8amdinfer18CallDataModelReady18CallDataModelReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelReady::CallDataModelReady"], [17, 5, 1, "_CPPv4N8amdinfer18CallDataModelReady18CallDataModelReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelReady::CallDataModelReady::cq"], [17, 5, 1, "_CPPv4N8amdinfer18CallDataModelReady18CallDataModelReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelReady::CallDataModelReady::service"], [17, 5, 1, "_CPPv4N8amdinfer18CallDataModelReady18CallDataModelReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelReady::CallDataModelReady::state"], [17, 3, 1, "_CPPv4N8amdinfer18CallDataModelReady14addNewCallDataEv", "amdinfer::CallDataModelReady::addNewCallData"], [17, 3, 1, "_CPPv4N8amdinfer18CallDataModelReady13handleRequestEv", "amdinfer::CallDataModelReady::handleRequest"], [17, 3, 1, "_CPPv4N8amdinfer18CallDataModelReady14waitForRequestEv", "amdinfer::CallDataModelReady::waitForRequest"], [18, 2, 1, "_CPPv4N8amdinfer19CallDataModelUnloadE", "amdinfer::CallDataModelUnload"], [18, 3, 1, "_CPPv4N8amdinfer19CallDataModelUnload19CallDataModelUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelUnload::CallDataModelUnload"], [18, 5, 1, "_CPPv4N8amdinfer19CallDataModelUnload19CallDataModelUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelUnload::CallDataModelUnload::cq"], [18, 5, 1, "_CPPv4N8amdinfer19CallDataModelUnload19CallDataModelUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelUnload::CallDataModelUnload::service"], [18, 5, 1, "_CPPv4N8amdinfer19CallDataModelUnload19CallDataModelUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataModelUnload::CallDataModelUnload::state"], [18, 3, 1, "_CPPv4N8amdinfer19CallDataModelUnload14addNewCallDataEv", "amdinfer::CallDataModelUnload::addNewCallData"], [18, 3, 1, "_CPPv4N8amdinfer19CallDataModelUnload13handleRequestEv", "amdinfer::CallDataModelUnload::handleRequest"], [18, 3, 1, "_CPPv4N8amdinfer19CallDataModelUnload14waitForRequestEv", "amdinfer::CallDataModelUnload::waitForRequest"], [19, 2, 1, "_CPPv4N8amdinfer18CallDataServerLiveE", "amdinfer::CallDataServerLive"], [19, 3, 1, "_CPPv4N8amdinfer18CallDataServerLive18CallDataServerLiveEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerLive::CallDataServerLive"], [19, 5, 1, "_CPPv4N8amdinfer18CallDataServerLive18CallDataServerLiveEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerLive::CallDataServerLive::cq"], [19, 5, 1, "_CPPv4N8amdinfer18CallDataServerLive18CallDataServerLiveEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerLive::CallDataServerLive::service"], [19, 5, 1, "_CPPv4N8amdinfer18CallDataServerLive18CallDataServerLiveEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerLive::CallDataServerLive::state"], [19, 3, 1, "_CPPv4N8amdinfer18CallDataServerLive14addNewCallDataEv", "amdinfer::CallDataServerLive::addNewCallData"], [19, 3, 1, "_CPPv4N8amdinfer18CallDataServerLive13handleRequestEv", "amdinfer::CallDataServerLive::handleRequest"], [19, 3, 1, "_CPPv4N8amdinfer18CallDataServerLive14waitForRequestEv", "amdinfer::CallDataServerLive::waitForRequest"], [20, 2, 1, "_CPPv4N8amdinfer22CallDataServerMetadataE", "amdinfer::CallDataServerMetadata"], [20, 3, 1, "_CPPv4N8amdinfer22CallDataServerMetadata22CallDataServerMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerMetadata::CallDataServerMetadata"], [20, 5, 1, "_CPPv4N8amdinfer22CallDataServerMetadata22CallDataServerMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerMetadata::CallDataServerMetadata::cq"], [20, 5, 1, "_CPPv4N8amdinfer22CallDataServerMetadata22CallDataServerMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerMetadata::CallDataServerMetadata::service"], [20, 5, 1, "_CPPv4N8amdinfer22CallDataServerMetadata22CallDataServerMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerMetadata::CallDataServerMetadata::state"], [20, 3, 1, "_CPPv4N8amdinfer22CallDataServerMetadata14addNewCallDataEv", "amdinfer::CallDataServerMetadata::addNewCallData"], [20, 3, 1, "_CPPv4N8amdinfer22CallDataServerMetadata13handleRequestEv", "amdinfer::CallDataServerMetadata::handleRequest"], [20, 3, 1, "_CPPv4N8amdinfer22CallDataServerMetadata14waitForRequestEv", "amdinfer::CallDataServerMetadata::waitForRequest"], [21, 2, 1, "_CPPv4N8amdinfer19CallDataServerReadyE", "amdinfer::CallDataServerReady"], [21, 3, 1, "_CPPv4N8amdinfer19CallDataServerReady19CallDataServerReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerReady::CallDataServerReady"], [21, 5, 1, "_CPPv4N8amdinfer19CallDataServerReady19CallDataServerReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerReady::CallDataServerReady::cq"], [21, 5, 1, "_CPPv4N8amdinfer19CallDataServerReady19CallDataServerReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerReady::CallDataServerReady::service"], [21, 5, 1, "_CPPv4N8amdinfer19CallDataServerReady19CallDataServerReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataServerReady::CallDataServerReady::state"], [21, 3, 1, "_CPPv4N8amdinfer19CallDataServerReady14addNewCallDataEv", "amdinfer::CallDataServerReady::addNewCallData"], [21, 3, 1, "_CPPv4N8amdinfer19CallDataServerReady13handleRequestEv", "amdinfer::CallDataServerReady::handleRequest"], [21, 3, 1, "_CPPv4N8amdinfer19CallDataServerReady14waitForRequestEv", "amdinfer::CallDataServerReady::waitForRequest"], [22, 2, 1, "_CPPv4I00EN8amdinfer20CallDataServerStreamE", "amdinfer::CallDataServerStream"], [22, 3, 1, "_CPPv4N8amdinfer20CallDataServerStream20CallDataServerStreamEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataServerStream::CallDataServerStream"], [22, 5, 1, "_CPPv4N8amdinfer20CallDataServerStream20CallDataServerStreamEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataServerStream::CallDataServerStream::cq"], [22, 5, 1, "_CPPv4N8amdinfer20CallDataServerStream20CallDataServerStreamEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataServerStream::CallDataServerStream::service"], [22, 4, 1, "_CPPv4I00EN8amdinfer20CallDataServerStreamE", "amdinfer::CallDataServerStream::ReplyType"], [22, 4, 1, "_CPPv4I00EN8amdinfer20CallDataServerStreamE", "amdinfer::CallDataServerStream::RequestType"], [22, 3, 1, "_CPPv4N8amdinfer20CallDataServerStream6finishERKN4grpc6StatusE", "amdinfer::CallDataServerStream::finish"], [22, 5, 1, "_CPPv4N8amdinfer20CallDataServerStream6finishERKN4grpc6StatusE", "amdinfer::CallDataServerStream::finish::status"], [22, 6, 1, "_CPPv4N8amdinfer20CallDataServerStream10responder_E", "amdinfer::CallDataServerStream::responder_"], [22, 3, 1, "_CPPv4N8amdinfer20CallDataServerStream5writeERK9ReplyType", "amdinfer::CallDataServerStream::write"], [22, 5, 1, "_CPPv4N8amdinfer20CallDataServerStream5writeERK9ReplyType", "amdinfer::CallDataServerStream::write::response"], [23, 2, 1, "_CPPv4I00EN8amdinfer13CallDataUnaryE", "amdinfer::CallDataUnary"], [23, 3, 1, "_CPPv4N8amdinfer13CallDataUnary13CallDataUnaryEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataUnary::CallDataUnary"], [23, 5, 1, "_CPPv4N8amdinfer13CallDataUnary13CallDataUnaryEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataUnary::CallDataUnary::cq"], [23, 5, 1, "_CPPv4N8amdinfer13CallDataUnary13CallDataUnaryEP12AsyncServicePN4grpc21ServerCompletionQueueE", "amdinfer::CallDataUnary::CallDataUnary::service"], [23, 4, 1, "_CPPv4I00EN8amdinfer13CallDataUnaryE", "amdinfer::CallDataUnary::ReplyType"], [23, 4, 1, "_CPPv4I00EN8amdinfer13CallDataUnaryE", "amdinfer::CallDataUnary::RequestType"], [23, 3, 1, "_CPPv4N8amdinfer13CallDataUnary6finishERKN4grpc6StatusE", "amdinfer::CallDataUnary::finish"], [23, 5, 1, "_CPPv4N8amdinfer13CallDataUnary6finishERKN4grpc6StatusE", "amdinfer::CallDataUnary::finish::status"], [23, 6, 1, "_CPPv4N8amdinfer13CallDataUnary10responder_E", "amdinfer::CallDataUnary::responder_"], [24, 2, 1, "_CPPv4N8amdinfer18CallDataWorkerLoadE", "amdinfer::CallDataWorkerLoad"], [24, 3, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad18CallDataWorkerLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerLoad::CallDataWorkerLoad"], [24, 5, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad18CallDataWorkerLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerLoad::CallDataWorkerLoad::cq"], [24, 5, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad18CallDataWorkerLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerLoad::CallDataWorkerLoad::service"], [24, 5, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad18CallDataWorkerLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerLoad::CallDataWorkerLoad::state"], [24, 3, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad14addNewCallDataEv", "amdinfer::CallDataWorkerLoad::addNewCallData"], [24, 3, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad13handleRequestEv", "amdinfer::CallDataWorkerLoad::handleRequest"], [24, 3, 1, "_CPPv4N8amdinfer18CallDataWorkerLoad14waitForRequestEv", "amdinfer::CallDataWorkerLoad::waitForRequest"], [25, 2, 1, "_CPPv4N8amdinfer20CallDataWorkerUnloadE", "amdinfer::CallDataWorkerUnload"], [25, 3, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload20CallDataWorkerUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerUnload::CallDataWorkerUnload"], [25, 5, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload20CallDataWorkerUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerUnload::CallDataWorkerUnload::cq"], [25, 5, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload20CallDataWorkerUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerUnload::CallDataWorkerUnload::service"], [25, 5, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload20CallDataWorkerUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState", "amdinfer::CallDataWorkerUnload::CallDataWorkerUnload::state"], [25, 3, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload14addNewCallDataEv", "amdinfer::CallDataWorkerUnload::addNewCallData"], [25, 3, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload13handleRequestEv", "amdinfer::CallDataWorkerUnload::handleRequest"], [25, 3, 1, "_CPPv4N8amdinfer20CallDataWorkerUnload14waitForRequestEv", "amdinfer::CallDataWorkerUnload::waitForRequest"], [651, 1, 1, "_CPPv4N8amdinfer8CallbackE", "amdinfer::Callback"], [683, 1, 1, "_CPPv4N8amdinfer8CallbackE", "amdinfer::Callback"], [26, 2, 1, "_CPPv4N8amdinfer6ClientE", "amdinfer::Client"], [26, 3, 1, "_CPPv4N8amdinfer6Client6ClientEv", "amdinfer::Client::Client"], [26, 3, 1, "_CPPv4NK8amdinfer6Client11hasHardwareERKNSt6stringEi", "amdinfer::Client::hasHardware"], [26, 5, 1, "_CPPv4NK8amdinfer6Client11hasHardwareERKNSt6stringEi", "amdinfer::Client::hasHardware::name"], [26, 5, 1, "_CPPv4NK8amdinfer6Client11hasHardwareERKNSt6stringEi", "amdinfer::Client::hasHardware::num"], [26, 3, 1, "_CPPv4NK8amdinfer6Client10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInfer"], [26, 5, 1, "_CPPv4NK8amdinfer6Client10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInfer::model"], [26, 5, 1, "_CPPv4NK8amdinfer6Client10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInfer::request"], [26, 3, 1, "_CPPv4NK8amdinfer6Client15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInferAsync"], [26, 5, 1, "_CPPv4NK8amdinfer6Client15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInferAsync::model"], [26, 5, 1, "_CPPv4NK8amdinfer6Client15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::Client::modelInferAsync::request"], [26, 3, 1, "_CPPv4NK8amdinfer6Client9modelListEv", "amdinfer::Client::modelList"], [26, 3, 1, "_CPPv4NK8amdinfer6Client9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::modelLoad"], [26, 5, 1, "_CPPv4NK8amdinfer6Client9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::modelLoad::model"], [26, 5, 1, "_CPPv4NK8amdinfer6Client9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::modelLoad::parameters"], [26, 3, 1, "_CPPv4NK8amdinfer6Client13modelMetadataERKNSt6stringE", "amdinfer::Client::modelMetadata"], [26, 5, 1, "_CPPv4NK8amdinfer6Client13modelMetadataERKNSt6stringE", "amdinfer::Client::modelMetadata::model"], [26, 3, 1, "_CPPv4NK8amdinfer6Client10modelReadyERKNSt6stringE", "amdinfer::Client::modelReady"], [26, 5, 1, "_CPPv4NK8amdinfer6Client10modelReadyERKNSt6stringE", "amdinfer::Client::modelReady::model"], [26, 3, 1, "_CPPv4NK8amdinfer6Client11modelUnloadERKNSt6stringE", "amdinfer::Client::modelUnload"], [26, 5, 1, "_CPPv4NK8amdinfer6Client11modelUnloadERKNSt6stringE", "amdinfer::Client::modelUnload::model"], [26, 3, 1, "_CPPv4NK8amdinfer6Client10serverLiveEv", "amdinfer::Client::serverLive"], [26, 3, 1, "_CPPv4NK8amdinfer6Client14serverMetadataEv", "amdinfer::Client::serverMetadata"], [26, 3, 1, "_CPPv4NK8amdinfer6Client11serverReadyEv", "amdinfer::Client::serverReady"], [26, 3, 1, "_CPPv4NK8amdinfer6Client10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::workerLoad"], [26, 5, 1, "_CPPv4NK8amdinfer6Client10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::workerLoad::parameters"], [26, 5, 1, "_CPPv4NK8amdinfer6Client10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::Client::workerLoad::worker"], [26, 3, 1, "_CPPv4NK8amdinfer6Client12workerUnloadERKNSt6stringE", "amdinfer::Client::workerUnload"], [26, 5, 1, "_CPPv4NK8amdinfer6Client12workerUnloadERKNSt6stringE", "amdinfer::Client::workerUnload::worker"], [26, 3, 1, "_CPPv4N8amdinfer6ClientD0Ev", "amdinfer::Client::~Client"], [28, 2, 1, "_CPPv4N8amdinfer12CpuAllocatorE", "amdinfer::CpuAllocator"], [28, 3, 1, "_CPPv4N8amdinfer12CpuAllocator12CpuAllocatorE6size_t6size_t", "amdinfer::CpuAllocator::CpuAllocator"], [28, 5, 1, "_CPPv4N8amdinfer12CpuAllocator12CpuAllocatorE6size_t6size_t", "amdinfer::CpuAllocator::CpuAllocator::block_size"], [28, 5, 1, "_CPPv4N8amdinfer12CpuAllocator12CpuAllocatorE6size_t6size_t", "amdinfer::CpuAllocator::CpuAllocator::max_allocated"], [28, 3, 1, "_CPPv4N8amdinfer12CpuAllocator3getERK6Tensor6size_t", "amdinfer::CpuAllocator::get"], [28, 5, 1, "_CPPv4N8amdinfer12CpuAllocator3getERK6Tensor6size_t", "amdinfer::CpuAllocator::get::batch_size"], [28, 5, 1, "_CPPv4N8amdinfer12CpuAllocator3getERK6Tensor6size_t", "amdinfer::CpuAllocator::get::tensor"], [28, 3, 1, "_CPPv4N8amdinfer12CpuAllocator3putEPKv", "amdinfer::CpuAllocator::put"], [28, 5, 1, "_CPPv4N8amdinfer12CpuAllocator3putEPKv", "amdinfer::CpuAllocator::put::address"], [29, 2, 1, "_CPPv4N8amdinfer9CpuBufferE", "amdinfer::CpuBuffer"], [29, 3, 1, "_CPPv4N8amdinfer9CpuBuffer9CpuBufferEPv16MemoryAllocators", "amdinfer::CpuBuffer::CpuBuffer"], [29, 5, 1, "_CPPv4N8amdinfer9CpuBuffer9CpuBufferEPv16MemoryAllocators", "amdinfer::CpuBuffer::CpuBuffer::allocator"], [29, 5, 1, "_CPPv4N8amdinfer9CpuBuffer9CpuBufferEPv16MemoryAllocators", "amdinfer::CpuBuffer::CpuBuffer::data"], [29, 3, 1, "_CPPv4N8amdinfer9CpuBuffer4dataE6size_t", "amdinfer::CpuBuffer::data"], [29, 5, 1, "_CPPv4N8amdinfer9CpuBuffer4dataE6size_t", "amdinfer::CpuBuffer::data::offset"], [30, 2, 1, "_CPPv4N8amdinfer8DataTypeE", "amdinfer::DataType"], [746, 2, 1, "_CPPv4N8amdinfer8DataTypeE", "amdinfer::DataType"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4BoolE", "amdinfer::DataType::Bool"], [30, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE", "amdinfer::DataType::DataType"], [30, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEPKc", "amdinfer::DataType::DataType"], [30, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEv", "amdinfer::DataType::DataType"], [746, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE", "amdinfer::DataType::DataType"], [746, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEPKc", "amdinfer::DataType::DataType"], [746, 3, 1, "_CPPv4N8amdinfer8DataType8DataTypeEv", "amdinfer::DataType::DataType"], [30, 5, 1, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE", "amdinfer::DataType::DataType::value"], [30, 5, 1, "_CPPv4N8amdinfer8DataType8DataTypeEPKc", "amdinfer::DataType::DataType::value"], [746, 5, 1, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE", "amdinfer::DataType::DataType::value"], [746, 5, 1, "_CPPv4N8amdinfer8DataType8DataTypeEPKc", "amdinfer::DataType::DataType::value"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP16E", "amdinfer::DataType::FP16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP32E", "amdinfer::DataType::FP32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP64E", "amdinfer::DataType::FP64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp16E", "amdinfer::DataType::Fp16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp32E", "amdinfer::DataType::Fp32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp64E", "amdinfer::DataType::Fp64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int16E", "amdinfer::DataType::Int16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int32E", "amdinfer::DataType::Int32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int64E", "amdinfer::DataType::Int64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Int8E", "amdinfer::DataType::Int8"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6StringE", "amdinfer::DataType::String"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint16E", "amdinfer::DataType::Uint16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint32E", "amdinfer::DataType::Uint32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint64E", "amdinfer::DataType::Uint64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Uint8E", "amdinfer::DataType::Uint8"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value7UnknownE", "amdinfer::DataType::Unknown"], [30, 7, 1, "_CPPv4N8amdinfer8DataType5ValueE", "amdinfer::DataType::Value"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4BoolE", "amdinfer::DataType::Value::Bool"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP16E", "amdinfer::DataType::Value::FP16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP32E", "amdinfer::DataType::Value::FP32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4FP64E", "amdinfer::DataType::Value::FP64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp16E", "amdinfer::DataType::Value::Fp16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp32E", "amdinfer::DataType::Value::Fp32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Fp64E", "amdinfer::DataType::Value::Fp64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int16E", "amdinfer::DataType::Value::Int16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int32E", "amdinfer::DataType::Value::Int32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Int64E", "amdinfer::DataType::Value::Int64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value4Int8E", "amdinfer::DataType::Value::Int8"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6StringE", "amdinfer::DataType::Value::String"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint16E", "amdinfer::DataType::Value::Uint16"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint32E", "amdinfer::DataType::Value::Uint32"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value6Uint64E", "amdinfer::DataType::Value::Uint64"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value5Uint8E", "amdinfer::DataType::Value::Uint8"], [30, 8, 1, "_CPPv4N8amdinfer8DataType5Value7UnknownE", "amdinfer::DataType::Value::Unknown"], [30, 3, 1, "_CPPv4NK8amdinfer8DataTypecv5ValueEv", "amdinfer::DataType::operator Value"], [746, 3, 1, "_CPPv4NK8amdinfer8DataTypecv5ValueEv", "amdinfer::DataType::operator Value"], [30, 3, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;"], [746, 3, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;"], [30, 5, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;::os"], [746, 5, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;::os"], [30, 5, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;::value"], [746, 5, 1, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType", "amdinfer::DataType::operator&lt;&lt;::value"], [30, 3, 1, "_CPPv4NK8amdinfer8DataType4sizeEv", "amdinfer::DataType::size"], [746, 3, 1, "_CPPv4NK8amdinfer8DataType4sizeEv", "amdinfer::DataType::size"], [30, 3, 1, "_CPPv4NK8amdinfer8DataType3strEv", "amdinfer::DataType::str"], [746, 3, 1, "_CPPv4NK8amdinfer8DataType3strEv", "amdinfer::DataType::str"], [677, 1, 1, "_CPPv4N8amdinfer14DrogonCallbackE", "amdinfer::DrogonCallback"], [678, 1, 1, "_CPPv4N8amdinfer14DrogonCallbackE", "amdinfer::DrogonCallback"], [32, 2, 1, "_CPPv4N8amdinfer9EndpointsE", "amdinfer::Endpoints"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints9EndpointsEv", "amdinfer::Endpoints::Endpoints"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints6existsERKNSt6stringE", "amdinfer::Endpoints::exists"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints6existsERKNSt6stringE", "amdinfer::Endpoints::exists::endpoint"], [32, 3, 1, "_CPPv4NK8amdinfer9Endpoints7getPoolEv", "amdinfer::Endpoints::getPool"], [32, 3, 1, "_CPPv4NK8amdinfer9Endpoints5inferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::Endpoints::infer"], [32, 5, 1, "_CPPv4NK8amdinfer9Endpoints5inferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::Endpoints::infer::endpoint"], [32, 5, 1, "_CPPv4NK8amdinfer9Endpoints5inferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::Endpoints::infer::request"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints4listEv", "amdinfer::Endpoints::list"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints4loadERKNSt6stringE12ParameterMap", "amdinfer::Endpoints::load"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints4loadERKNSt6stringE12ParameterMap", "amdinfer::Endpoints::load::parameters"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints4loadERKNSt6stringE12ParameterMap", "amdinfer::Endpoints::load::worker"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints8metadataERKNSt6stringE", "amdinfer::Endpoints::metadata"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints8metadataERKNSt6stringE", "amdinfer::Endpoints::metadata::endpoint"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints5readyERKNSt6stringE", "amdinfer::Endpoints::ready"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints5readyERKNSt6stringE", "amdinfer::Endpoints::ready::endpoint"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints8shutdownEv", "amdinfer::Endpoints::shutdown"], [32, 3, 1, "_CPPv4N8amdinfer9Endpoints6unloadERKNSt6stringE", "amdinfer::Endpoints::unload"], [32, 5, 1, "_CPPv4N8amdinfer9Endpoints6unloadERKNSt6stringE", "amdinfer::Endpoints::unload::endpoint"], [32, 3, 1, "_CPPv4N8amdinfer9EndpointsD0Ev", "amdinfer::Endpoints::~Endpoints"], [34, 2, 1, "_CPPv4N8amdinfer10GrpcClientE", "amdinfer::GrpcClient"], [746, 2, 1, "_CPPv4N8amdinfer10GrpcClientE", "amdinfer::GrpcClient"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERK10GrpcClient", "amdinfer::GrpcClient::GrpcClient"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClient"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE", "amdinfer::GrpcClient::GrpcClient"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient", "amdinfer::GrpcClient::GrpcClient"], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERK10GrpcClient", "amdinfer::GrpcClient::GrpcClient"], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClient"], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE", "amdinfer::GrpcClient::GrpcClient"], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient", "amdinfer::GrpcClient::GrpcClient"], [34, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE", "amdinfer::GrpcClient::GrpcClient::address"], [746, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE", "amdinfer::GrpcClient::GrpcClient::address"], [34, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClient::channel"], [746, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClient::channel"], [34, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient", "amdinfer::GrpcClient::GrpcClient::other"], [746, 5, 1, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient", "amdinfer::GrpcClient::GrpcClient::other"], [34, 2, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE", "amdinfer::GrpcClient::GrpcClientImpl"], [35, 2, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE", "amdinfer::GrpcClient::GrpcClientImpl"], [746, 2, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE", "amdinfer::GrpcClient::GrpcClientImpl"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClientImpl::GrpcClientImpl"], [35, 3, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClientImpl::GrpcClientImpl"], [34, 5, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClientImpl::GrpcClientImpl::channel"], [35, 5, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE", "amdinfer::GrpcClient::GrpcClientImpl::GrpcClientImpl::channel"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl7getStubEv", "amdinfer::GrpcClient::GrpcClientImpl::getStub"], [35, 3, 1, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl7getStubEv", "amdinfer::GrpcClient::GrpcClientImpl::getStub"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware::name"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware::name"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware::num"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi", "amdinfer::GrpcClient::hasHardware::num"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer::model"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer::request"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInfer::request"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync::model"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync::request"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::GrpcClient::modelInferAsync::request"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient9modelListEv", "amdinfer::GrpcClient::modelList"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient9modelListEv", "amdinfer::GrpcClient::modelList"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad::model"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::modelLoad::parameters"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE", "amdinfer::GrpcClient::modelMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE", "amdinfer::GrpcClient::modelMetadata"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE", "amdinfer::GrpcClient::modelMetadata::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE", "amdinfer::GrpcClient::modelMetadata::model"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE", "amdinfer::GrpcClient::modelReady"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE", "amdinfer::GrpcClient::modelReady"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE", "amdinfer::GrpcClient::modelReady::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE", "amdinfer::GrpcClient::modelReady::model"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE", "amdinfer::GrpcClient::modelUnload"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE", "amdinfer::GrpcClient::modelUnload"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE", "amdinfer::GrpcClient::modelUnload::model"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE", "amdinfer::GrpcClient::modelUnload::model"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClientaSERK10GrpcClient", "amdinfer::GrpcClient::operator="], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient", "amdinfer::GrpcClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClientaSERK10GrpcClient", "amdinfer::GrpcClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient", "amdinfer::GrpcClient::operator="], [34, 5, 1, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient", "amdinfer::GrpcClient::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient", "amdinfer::GrpcClient::operator=::other"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10serverLiveEv", "amdinfer::GrpcClient::serverLive"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10serverLiveEv", "amdinfer::GrpcClient::serverLive"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient14serverMetadataEv", "amdinfer::GrpcClient::serverMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient14serverMetadataEv", "amdinfer::GrpcClient::serverMetadata"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11serverReadyEv", "amdinfer::GrpcClient::serverReady"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient11serverReadyEv", "amdinfer::GrpcClient::serverReady"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad::parameters"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad::worker"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::GrpcClient::workerLoad::worker"], [34, 3, 1, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE", "amdinfer::GrpcClient::workerUnload"], [746, 3, 1, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE", "amdinfer::GrpcClient::workerUnload"], [34, 5, 1, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE", "amdinfer::GrpcClient::workerUnload::worker"], [746, 5, 1, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE", "amdinfer::GrpcClient::workerUnload::worker"], [34, 3, 1, "_CPPv4N8amdinfer10GrpcClientD0Ev", "amdinfer::GrpcClient::~GrpcClient"], [746, 3, 1, "_CPPv4N8amdinfer10GrpcClientD0Ev", "amdinfer::GrpcClient::~GrpcClient"], [36, 2, 1, "_CPPv4N8amdinfer10GrpcServerE", "amdinfer::GrpcServer"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServer10GrpcServerERK10GrpcServer", "amdinfer::GrpcServer::GrpcServer"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServer10GrpcServerERR10GrpcServer", "amdinfer::GrpcServer::GrpcServer"], [36, 5, 1, "_CPPv4N8amdinfer10GrpcServer10GrpcServerERR10GrpcServer", "amdinfer::GrpcServer::GrpcServer::other"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServer6createERKNSt6stringEKiP11SharedState", "amdinfer::GrpcServer::create"], [36, 5, 1, "_CPPv4N8amdinfer10GrpcServer6createERKNSt6stringEKiP11SharedState", "amdinfer::GrpcServer::create::address"], [36, 5, 1, "_CPPv4N8amdinfer10GrpcServer6createERKNSt6stringEKiP11SharedState", "amdinfer::GrpcServer::create::cq_count"], [36, 5, 1, "_CPPv4N8amdinfer10GrpcServer6createERKNSt6stringEKiP11SharedState", "amdinfer::GrpcServer::create::state"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServer11getInstanceEv", "amdinfer::GrpcServer::getInstance"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServeraSERK10GrpcServer", "amdinfer::GrpcServer::operator="], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServeraSERR10GrpcServer", "amdinfer::GrpcServer::operator="], [36, 5, 1, "_CPPv4N8amdinfer10GrpcServeraSERR10GrpcServer", "amdinfer::GrpcServer::operator=::other"], [36, 3, 1, "_CPPv4N8amdinfer10GrpcServerD0Ev", "amdinfer::GrpcServer::~GrpcServer"], [37, 2, 1, "_CPPv4N8amdinfer11HardBatcherE", "amdinfer::HardBatcher"], [37, 3, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPool", "amdinfer::HardBatcher::Batcher"], [37, 3, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::HardBatcher::Batcher"], [37, 3, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherERK7Batcher", "amdinfer::HardBatcher::Batcher"], [37, 3, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherERR7Batcher", "amdinfer::HardBatcher::Batcher"], [37, 5, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherERK7Batcher", "amdinfer::HardBatcher::Batcher::batcher"], [37, 5, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherERR7Batcher", "amdinfer::HardBatcher::Batcher::other"], [37, 5, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::HardBatcher::Batcher::parameters"], [37, 5, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPool", "amdinfer::HardBatcher::Batcher::pool"], [37, 5, 1, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::HardBatcher::Batcher::pool"], [38, 2, 1, "_CPPv4N8amdinfer10HttpClientE", "amdinfer::HttpClient"], [746, 2, 1, "_CPPv4N8amdinfer10HttpClientE", "amdinfer::HttpClient"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERK10HttpClient", "amdinfer::HttpClient::HttpClient"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE", "amdinfer::HttpClient::HttpClient"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient", "amdinfer::HttpClient::HttpClient"], [746, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERK10HttpClient", "amdinfer::HttpClient::HttpClient"], [746, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE", "amdinfer::HttpClient::HttpClient"], [746, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient"], [746, 3, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient", "amdinfer::HttpClient::HttpClient"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE", "amdinfer::HttpClient::HttpClient::address"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::address"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE", "amdinfer::HttpClient::HttpClient::address"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::address"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::headers"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::headers"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient", "amdinfer::HttpClient::HttpClient::other"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient", "amdinfer::HttpClient::HttpClient::other"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::parallelism"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi", "amdinfer::HttpClient::HttpClient::parallelism"], [38, 2, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE", "amdinfer::HttpClient::HttpClientImpl"], [39, 2, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE", "amdinfer::HttpClient::HttpClientImpl"], [746, 2, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE", "amdinfer::HttpClient::HttpClientImpl"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl"], [39, 3, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::address"], [39, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::address"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::headers"], [39, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::headers"], [38, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::parallelism"], [39, 5, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi", "amdinfer::HttpClient::HttpClientImpl::HttpClientImpl::parallelism"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl9getClientEv", "amdinfer::HttpClient::HttpClientImpl::getClient"], [39, 3, 1, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl9getClientEv", "amdinfer::HttpClient::HttpClientImpl::getClient"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl12getClientNumEv", "amdinfer::HttpClient::HttpClientImpl::getClientNum"], [39, 3, 1, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl12getClientNumEv", "amdinfer::HttpClient::HttpClientImpl::getClientNum"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl10getHeadersEv", "amdinfer::HttpClient::HttpClientImpl::getHeaders"], [39, 3, 1, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl10getHeadersEv", "amdinfer::HttpClient::HttpClientImpl::getHeaders"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware::name"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware::name"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware::num"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi", "amdinfer::HttpClient::hasHardware::num"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer::model"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer::request"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInfer::request"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync::model"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync::request"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::HttpClient::modelInferAsync::request"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient9modelListEv", "amdinfer::HttpClient::modelList"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient9modelListEv", "amdinfer::HttpClient::modelList"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad::model"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::modelLoad::parameters"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE", "amdinfer::HttpClient::modelMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE", "amdinfer::HttpClient::modelMetadata"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE", "amdinfer::HttpClient::modelMetadata::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE", "amdinfer::HttpClient::modelMetadata::model"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE", "amdinfer::HttpClient::modelReady"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE", "amdinfer::HttpClient::modelReady"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE", "amdinfer::HttpClient::modelReady::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE", "amdinfer::HttpClient::modelReady::model"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE", "amdinfer::HttpClient::modelUnload"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE", "amdinfer::HttpClient::modelUnload"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE", "amdinfer::HttpClient::modelUnload::model"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE", "amdinfer::HttpClient::modelUnload::model"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClientaSERK10HttpClient", "amdinfer::HttpClient::operator="], [38, 3, 1, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient", "amdinfer::HttpClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer10HttpClientaSERK10HttpClient", "amdinfer::HttpClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient", "amdinfer::HttpClient::operator="], [38, 5, 1, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient", "amdinfer::HttpClient::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient", "amdinfer::HttpClient::operator=::other"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient10serverLiveEv", "amdinfer::HttpClient::serverLive"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient10serverLiveEv", "amdinfer::HttpClient::serverLive"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient14serverMetadataEv", "amdinfer::HttpClient::serverMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient14serverMetadataEv", "amdinfer::HttpClient::serverMetadata"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient11serverReadyEv", "amdinfer::HttpClient::serverReady"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient11serverReadyEv", "amdinfer::HttpClient::serverReady"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad::parameters"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad::worker"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::HttpClient::workerLoad::worker"], [38, 3, 1, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE", "amdinfer::HttpClient::workerUnload"], [746, 3, 1, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE", "amdinfer::HttpClient::workerUnload"], [38, 5, 1, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE", "amdinfer::HttpClient::workerUnload::worker"], [746, 5, 1, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE", "amdinfer::HttpClient::workerUnload::worker"], [38, 3, 1, "_CPPv4N8amdinfer10HttpClientD0Ev", "amdinfer::HttpClient::~HttpClient"], [746, 3, 1, "_CPPv4N8amdinfer10HttpClientD0Ev", "amdinfer::HttpClient::~HttpClient"], [40, 2, 1, "_CPPv4N8amdinfer16InferenceRequestE", "amdinfer::InferenceRequest"], [746, 2, 1, "_CPPv4N8amdinfer16InferenceRequestE", "amdinfer::InferenceRequest"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest16InferenceRequestEv", "amdinfer::InferenceRequest::InferenceRequest"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput", "amdinfer::InferenceRequest::addInputTensor"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput", "amdinfer::InferenceRequest::addInputTensor"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::data"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::data"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::data_type"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::data_type"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput", "amdinfer::InferenceRequest::addInputTensor::input"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput", "amdinfer::InferenceRequest::addInputTensor::input"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::name"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::name"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::shape"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE", "amdinfer::InferenceRequest::addInputTensor::shape"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput", "amdinfer::InferenceRequest::addOutputTensor"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput", "amdinfer::InferenceRequest::addOutputTensor"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput", "amdinfer::InferenceRequest::addOutputTensor::output"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput", "amdinfer::InferenceRequest::addOutputTensor::output"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11getCallbackEv", "amdinfer::InferenceRequest::getCallback"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11getCallbackEv", "amdinfer::InferenceRequest::getCallback"], [40, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest5getIDEv", "amdinfer::InferenceRequest::getID"], [746, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest5getIDEv", "amdinfer::InferenceRequest::getID"], [40, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv", "amdinfer::InferenceRequest::getInputSize"], [746, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv", "amdinfer::InferenceRequest::getInputSize"], [40, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest9getInputsEv", "amdinfer::InferenceRequest::getInputs"], [746, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest9getInputsEv", "amdinfer::InferenceRequest::getInputs"], [40, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv", "amdinfer::InferenceRequest::getOutputs"], [746, 3, 1, "_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv", "amdinfer::InferenceRequest::getOutputs"], [40, 3, 1, "_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv", "amdinfer::InferenceRequest::getParameters"], [40, 3, 1, "_CPPv4NO8amdinfer16InferenceRequest13getParametersEv", "amdinfer::InferenceRequest::getParameters"], [746, 3, 1, "_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv", "amdinfer::InferenceRequest::getParameters"], [746, 3, 1, "_CPPv4NO8amdinfer16InferenceRequest13getParametersEv", "amdinfer::InferenceRequest::getParameters"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse", "amdinfer::InferenceRequest::runCallback"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse", "amdinfer::InferenceRequest::runCallback"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse", "amdinfer::InferenceRequest::runCallback::response"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse", "amdinfer::InferenceRequest::runCallback::response"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE", "amdinfer::InferenceRequest::runCallbackError"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE", "amdinfer::InferenceRequest::runCallbackError"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE", "amdinfer::InferenceRequest::runCallbackError::error_msg"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE", "amdinfer::InferenceRequest::runCallbackError::error_msg"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse", "amdinfer::InferenceRequest::runCallbackOnce"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse", "amdinfer::InferenceRequest::runCallbackOnce"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse", "amdinfer::InferenceRequest::runCallbackOnce::response"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse", "amdinfer::InferenceRequest::runCallbackOnce::response"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback", "amdinfer::InferenceRequest::setCallback"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback", "amdinfer::InferenceRequest::setCallback"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback", "amdinfer::InferenceRequest::setCallback::callback"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback", "amdinfer::InferenceRequest::setCallback::callback"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE", "amdinfer::InferenceRequest::setID"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE", "amdinfer::InferenceRequest::setID"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE", "amdinfer::InferenceRequest::setID::id"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE", "amdinfer::InferenceRequest::setID::id"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData::data"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData::data"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData::index"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv", "amdinfer::InferenceRequest::setInputTensorData::index"], [40, 3, 1, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap", "amdinfer::InferenceRequest::setParameters"], [746, 3, 1, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap", "amdinfer::InferenceRequest::setParameters"], [40, 5, 1, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap", "amdinfer::InferenceRequest::setParameters::parameters"], [746, 5, 1, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap", "amdinfer::InferenceRequest::setParameters::parameters"], [45, 2, 1, "_CPPv4N8amdinfer21InferenceRequestInputE", "amdinfer::InferenceRequestInput"], [746, 2, 1, "_CPPv4N8amdinfer21InferenceRequestInputE", "amdinfer::InferenceRequestInput"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEv", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEv", "amdinfer::InferenceRequestInput::InferenceRequestInput"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::data"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::data"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::data_type"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::data_type"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::name"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::name"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::shape"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE", "amdinfer::InferenceRequestInput::InferenceRequestInput::shape"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor", "amdinfer::InferenceRequestInput::InferenceRequestInput::tensor"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor", "amdinfer::InferenceRequestInput::InferenceRequestInput::tensor"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor", "amdinfer::InferenceRequestInput::InferenceRequestInput::tensor"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor", "amdinfer::InferenceRequestInput::InferenceRequestInput::tensor"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE", "amdinfer::InferenceRequestInput::deserialize"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE", "amdinfer::InferenceRequestInput::deserialize"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE", "amdinfer::InferenceRequestInput::deserialize::data_in"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE", "amdinfer::InferenceRequestInput::deserialize::data_in"], [45, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput7getDataEv", "amdinfer::InferenceRequestInput::getData"], [746, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput7getDataEv", "amdinfer::InferenceRequestInput::getData"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;::my_class"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;::my_class"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;::os"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::InferenceRequestInput::operator&lt;&lt;::os"], [45, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE", "amdinfer::InferenceRequestInput::serialize"], [746, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE", "amdinfer::InferenceRequestInput::serialize"], [45, 5, 1, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE", "amdinfer::InferenceRequestInput::serialize::data_out"], [746, 5, 1, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE", "amdinfer::InferenceRequestInput::serialize::data_out"], [45, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput13serializeSizeEv", "amdinfer::InferenceRequestInput::serializeSize"], [746, 3, 1, "_CPPv4NK8amdinfer21InferenceRequestInput13serializeSizeEv", "amdinfer::InferenceRequestInput::serializeSize"], [45, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv", "amdinfer::InferenceRequestInput::setData"], [746, 3, 1, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv", "amdinfer::InferenceRequestInput::setData"], [45, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv", "amdinfer::InferenceRequestInput::setData::buffer"], [746, 5, 1, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv", "amdinfer::InferenceRequestInput::setData::buffer"], [627, 2, 1, "_CPPv4N8amdinfer26InferenceRequestInputSizesE", "amdinfer::InferenceRequestInputSizes"], [627, 6, 1, "_CPPv4N8amdinfer26InferenceRequestInputSizes4dataE", "amdinfer::InferenceRequestInputSizes::data"], [50, 2, 1, "_CPPv4N8amdinfer22InferenceRequestOutputE", "amdinfer::InferenceRequestOutput"], [746, 2, 1, "_CPPv4N8amdinfer22InferenceRequestOutputE", "amdinfer::InferenceRequestOutput"], [50, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput22InferenceRequestOutputEv", "amdinfer::InferenceRequestOutput::InferenceRequestOutput"], [746, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput22InferenceRequestOutputEv", "amdinfer::InferenceRequestOutput::InferenceRequestOutput"], [50, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7getDataEv", "amdinfer::InferenceRequestOutput::getData"], [746, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7getDataEv", "amdinfer::InferenceRequestOutput::getData"], [50, 3, 1, "_CPPv4NK8amdinfer22InferenceRequestOutput7getNameEv", "amdinfer::InferenceRequestOutput::getName"], [746, 3, 1, "_CPPv4NK8amdinfer22InferenceRequestOutput7getNameEv", "amdinfer::InferenceRequestOutput::getName"], [50, 3, 1, "_CPPv4NKR8amdinfer22InferenceRequestOutput13getParametersEv", "amdinfer::InferenceRequestOutput::getParameters"], [50, 3, 1, "_CPPv4NO8amdinfer22InferenceRequestOutput13getParametersEv", "amdinfer::InferenceRequestOutput::getParameters"], [746, 3, 1, "_CPPv4NKR8amdinfer22InferenceRequestOutput13getParametersEv", "amdinfer::InferenceRequestOutput::getParameters"], [746, 3, 1, "_CPPv4NO8amdinfer22InferenceRequestOutput13getParametersEv", "amdinfer::InferenceRequestOutput::getParameters"], [50, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv", "amdinfer::InferenceRequestOutput::setData"], [746, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv", "amdinfer::InferenceRequestOutput::setData"], [50, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv", "amdinfer::InferenceRequestOutput::setData::buffer"], [746, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv", "amdinfer::InferenceRequestOutput::setData::buffer"], [50, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE", "amdinfer::InferenceRequestOutput::setName"], [746, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE", "amdinfer::InferenceRequestOutput::setName"], [50, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE", "amdinfer::InferenceRequestOutput::setName::name"], [746, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE", "amdinfer::InferenceRequestOutput::setName::name"], [50, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap", "amdinfer::InferenceRequestOutput::setParameters"], [746, 3, 1, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap", "amdinfer::InferenceRequestOutput::setParameters"], [50, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap", "amdinfer::InferenceRequestOutput::setParameters::parameters"], [746, 5, 1, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap", "amdinfer::InferenceRequestOutput::setParameters::parameters"], [653, 1, 1, "_CPPv4N8amdinfer19InferenceRequestPtrE", "amdinfer::InferenceRequestPtr"], [687, 1, 1, "_CPPv4N8amdinfer24InferenceRequestPtrQueueE", "amdinfer::InferenceRequestPtrQueue"], [53, 2, 1, "_CPPv4N8amdinfer17InferenceResponseE", "amdinfer::InferenceResponse"], [746, 2, 1, "_CPPv4N8amdinfer17InferenceResponseE", "amdinfer::InferenceResponse"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE", "amdinfer::InferenceResponse::InferenceResponse"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseEv", "amdinfer::InferenceResponse::InferenceResponse"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE", "amdinfer::InferenceResponse::InferenceResponse"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseEv", "amdinfer::InferenceResponse::InferenceResponse"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE", "amdinfer::InferenceResponse::InferenceResponse::error"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE", "amdinfer::InferenceResponse::InferenceResponse::error"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput", "amdinfer::InferenceResponse::addOutput"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput", "amdinfer::InferenceResponse::addOutput"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput", "amdinfer::InferenceResponse::addOutput::output"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput", "amdinfer::InferenceResponse::addOutput::output"], [53, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse8getErrorEv", "amdinfer::InferenceResponse::getError"], [746, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse8getErrorEv", "amdinfer::InferenceResponse::getError"], [53, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse5getIDEv", "amdinfer::InferenceResponse::getID"], [746, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse5getIDEv", "amdinfer::InferenceResponse::getID"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse8getModelEv", "amdinfer::InferenceResponse::getModel"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse8getModelEv", "amdinfer::InferenceResponse::getModel"], [53, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse10getOutputsEv", "amdinfer::InferenceResponse::getOutputs"], [746, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse10getOutputsEv", "amdinfer::InferenceResponse::getOutputs"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse13getParametersEv", "amdinfer::InferenceResponse::getParameters"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse13getParametersEv", "amdinfer::InferenceResponse::getParameters"], [53, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse7isErrorEv", "amdinfer::InferenceResponse::isError"], [746, 3, 1, "_CPPv4NK8amdinfer17InferenceResponse7isErrorEv", "amdinfer::InferenceResponse::isError"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;::my_class"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;::my_class"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;::os"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse", "amdinfer::InferenceResponse::operator&lt;&lt;::os"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE", "amdinfer::InferenceResponse::setID"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE", "amdinfer::InferenceResponse::setID"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE", "amdinfer::InferenceResponse::setID::id"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE", "amdinfer::InferenceResponse::setID::id"], [53, 3, 1, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE", "amdinfer::InferenceResponse::setModel"], [746, 3, 1, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE", "amdinfer::InferenceResponse::setModel"], [53, 5, 1, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE", "amdinfer::InferenceResponse::setModel::model"], [746, 5, 1, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE", "amdinfer::InferenceResponse::setModel::model"], [657, 1, 1, "_CPPv4N8amdinfer23InferenceResponseFutureE", "amdinfer::InferenceResponseFuture"], [658, 1, 1, "_CPPv4N8amdinfer23InferenceResponseFutureE", "amdinfer::InferenceResponseFuture"], [54, 2, 1, "_CPPv4N8amdinfer23InferenceResponseOutputE", "amdinfer::InferenceResponseOutput"], [54, 3, 1, "_CPPv4N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv", "amdinfer::InferenceResponseOutput::InferenceResponseOutput"], [54, 3, 1, "_CPPv4N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE", "amdinfer::InferenceResponseOutput::deserialize"], [54, 5, 1, "_CPPv4N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE", "amdinfer::InferenceResponseOutput::deserialize::data_in"], [54, 3, 1, "_CPPv4NK8amdinfer23InferenceResponseOutput7getDataEv", "amdinfer::InferenceResponseOutput::getData"], [54, 3, 1, "_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::InferenceResponseOutput::operator&lt;&lt;"], [54, 5, 1, "_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::InferenceResponseOutput::operator&lt;&lt;::my_class"], [54, 5, 1, "_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::InferenceResponseOutput::operator&lt;&lt;::os"], [54, 3, 1, "_CPPv4NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE", "amdinfer::InferenceResponseOutput::serialize"], [54, 5, 1, "_CPPv4NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE", "amdinfer::InferenceResponseOutput::serialize::data_out"], [54, 3, 1, "_CPPv4NK8amdinfer23InferenceResponseOutput13serializeSizeEv", "amdinfer::InferenceResponseOutput::serializeSize"], [54, 3, 1, "_CPPv4N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE", "amdinfer::InferenceResponseOutput::setData"], [54, 5, 1, "_CPPv4N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE", "amdinfer::InferenceResponseOutput::setData::buffer"], [628, 2, 1, "_CPPv4N8amdinfer28InferenceResponseOutputSizesE", "amdinfer::InferenceResponseOutputSizes"], [628, 6, 1, "_CPPv4N8amdinfer28InferenceResponseOutputSizes4dataE", "amdinfer::InferenceResponseOutputSizes::data"], [660, 1, 1, "_CPPv4N8amdinfer27InferenceResponsePromisePtrE", "amdinfer::InferenceResponsePromisePtr"], [684, 1, 1, "_CPPv4N8amdinfer27InferenceResponsePromisePtrE", "amdinfer::InferenceResponsePromisePtr"], [55, 2, 1, "_CPPv4N8amdinfer15InferenceTensorE", "amdinfer::InferenceTensor"], [55, 3, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::InferenceTensor::InferenceTensor"], [55, 3, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor", "amdinfer::InferenceTensor::InferenceTensor"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::InferenceTensor::InferenceTensor::data_type"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::InferenceTensor::InferenceTensor::name"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::InferenceTensor::InferenceTensor::shape"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor", "amdinfer::InferenceTensor::InferenceTensor::tensor"], [55, 3, 1, "_CPPv4N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE", "amdinfer::InferenceTensor::deserialize"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE", "amdinfer::InferenceTensor::deserialize::data_in"], [55, 3, 1, "_CPPv4NKR8amdinfer15InferenceTensor13getParametersEv", "amdinfer::InferenceTensor::getParameters"], [55, 3, 1, "_CPPv4NO8amdinfer15InferenceTensor13getParametersEv", "amdinfer::InferenceTensor::getParameters"], [55, 3, 1, "_CPPv4NK8amdinfer15InferenceTensor9serializeEPNSt4byteE", "amdinfer::InferenceTensor::serialize"], [55, 5, 1, "_CPPv4NK8amdinfer15InferenceTensor9serializeEPNSt4byteE", "amdinfer::InferenceTensor::serialize::data_out"], [55, 3, 1, "_CPPv4NK8amdinfer15InferenceTensor13serializeSizeEv", "amdinfer::InferenceTensor::serializeSize"], [55, 3, 1, "_CPPv4N8amdinfer15InferenceTensor13setParametersE12ParameterMap", "amdinfer::InferenceTensor::setParameters"], [55, 5, 1, "_CPPv4N8amdinfer15InferenceTensor13setParametersE12ParameterMap", "amdinfer::InferenceTensor::setParameters::parameters"], [663, 1, 1, "_CPPv4N8amdinfer7KernelsE", "amdinfer::Kernels"], [60, 2, 1, "_CPPv4N8amdinfer15MemoryAllocatorE", "amdinfer::MemoryAllocator"], [60, 3, 1, "_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t", "amdinfer::MemoryAllocator::get"], [60, 5, 1, "_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t", "amdinfer::MemoryAllocator::get::batch_size"], [60, 5, 1, "_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t", "amdinfer::MemoryAllocator::get::tensor"], [60, 3, 1, "_CPPv4N8amdinfer15MemoryAllocator3putEPKv", "amdinfer::MemoryAllocator::put"], [60, 5, 1, "_CPPv4N8amdinfer15MemoryAllocator3putEPKv", "amdinfer::MemoryAllocator::put::address"], [60, 3, 1, "_CPPv4N8amdinfer15MemoryAllocatorD0Ev", "amdinfer::MemoryAllocator::~MemoryAllocator"], [157, 7, 1, "_CPPv4N8amdinfer16MemoryAllocatorsE", "amdinfer::MemoryAllocators"], [157, 8, 1, "_CPPv4N8amdinfer16MemoryAllocators3CpuE", "amdinfer::MemoryAllocators::Cpu"], [157, 8, 1, "_CPPv4N8amdinfer16MemoryAllocators10VartTensorE", "amdinfer::MemoryAllocators::VartTensor"], [630, 2, 1, "_CPPv4N8amdinfer12MemoryHeaderE", "amdinfer::MemoryHeader"], [630, 3, 1, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t", "amdinfer::MemoryHeader::MemoryHeader"], [630, 5, 1, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t", "amdinfer::MemoryHeader::MemoryHeader::address"], [630, 5, 1, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t", "amdinfer::MemoryHeader::MemoryHeader::block_id"], [630, 5, 1, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t", "amdinfer::MemoryHeader::MemoryHeader::free"], [630, 5, 1, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t", "amdinfer::MemoryHeader::MemoryHeader::size"], [630, 6, 1, "_CPPv4N8amdinfer12MemoryHeader7addressE", "amdinfer::MemoryHeader::address"], [630, 6, 1, "_CPPv4N8amdinfer12MemoryHeader8block_idE", "amdinfer::MemoryHeader::block_id"], [630, 6, 1, "_CPPv4N8amdinfer12MemoryHeader4freeE", "amdinfer::MemoryHeader::free"], [630, 6, 1, "_CPPv4N8amdinfer12MemoryHeader4sizeE", "amdinfer::MemoryHeader::size"], [61, 2, 1, "_CPPv4N8amdinfer10MemoryPoolE", "amdinfer::MemoryPool"], [61, 3, 1, "_CPPv4N8amdinfer10MemoryPool10MemoryPoolEv", "amdinfer::MemoryPool::MemoryPool"], [61, 3, 1, "_CPPv4NK8amdinfer10MemoryPool3getERKNSt6vectorI16MemoryAllocatorsEERK6Tensor6size_t", "amdinfer::MemoryPool::get"], [61, 5, 1, "_CPPv4NK8amdinfer10MemoryPool3getERKNSt6vectorI16MemoryAllocatorsEERK6Tensor6size_t", "amdinfer::MemoryPool::get::allocators"], [61, 5, 1, "_CPPv4NK8amdinfer10MemoryPool3getERKNSt6vectorI16MemoryAllocatorsEERK6Tensor6size_t", "amdinfer::MemoryPool::get::batch_size"], [61, 5, 1, "_CPPv4NK8amdinfer10MemoryPool3getERKNSt6vectorI16MemoryAllocatorsEERK6Tensor6size_t", "amdinfer::MemoryPool::get::tensor"], [61, 3, 1, "_CPPv4NK8amdinfer10MemoryPool3putENSt10unique_ptrI6BufferEE", "amdinfer::MemoryPool::put"], [61, 5, 1, "_CPPv4NK8amdinfer10MemoryPool3putENSt10unique_ptrI6BufferEE", "amdinfer::MemoryPool::put::memory"], [62, 2, 1, "_CPPv4N8amdinfer13ModelMetadataE", "amdinfer::ModelMetadata"], [746, 2, 1, "_CPPv4N8amdinfer13ModelMetadataE", "amdinfer::ModelMetadata"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata::name"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata::platform"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE", "amdinfer::ModelMetadata::ModelMetadata::platform"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor", "amdinfer::ModelMetadata::addInputTensor"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor", "amdinfer::ModelMetadata::addInputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::datatype"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::datatype"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::datatype"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::datatype"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::name"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::name"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::shape"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::shape"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addInputTensor::shape"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addInputTensor::shape"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor", "amdinfer::ModelMetadata::addInputTensor::tensor"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor", "amdinfer::ModelMetadata::addInputTensor::tensor"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor", "amdinfer::ModelMetadata::addOutputTensor"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor", "amdinfer::ModelMetadata::addOutputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::datatype"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::datatype"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::datatype"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::datatype"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::name"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::name"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::shape"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::shape"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::shape"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType", "amdinfer::ModelMetadata::addOutputTensor::shape"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor", "amdinfer::ModelMetadata::addOutputTensor::tensor"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor", "amdinfer::ModelMetadata::addOutputTensor::tensor"], [62, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata9getInputsEv", "amdinfer::ModelMetadata::getInputs"], [746, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata9getInputsEv", "amdinfer::ModelMetadata::getInputs"], [62, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata7getNameEv", "amdinfer::ModelMetadata::getName"], [746, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata7getNameEv", "amdinfer::ModelMetadata::getName"], [62, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata10getOutputsEv", "amdinfer::ModelMetadata::getOutputs"], [746, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata10getOutputsEv", "amdinfer::ModelMetadata::getOutputs"], [62, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata11getPlatformEv", "amdinfer::ModelMetadata::getPlatform"], [62, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata7isReadyEv", "amdinfer::ModelMetadata::isReady"], [746, 3, 1, "_CPPv4NK8amdinfer13ModelMetadata7isReadyEv", "amdinfer::ModelMetadata::isReady"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE", "amdinfer::ModelMetadata::setName"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE", "amdinfer::ModelMetadata::setName"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE", "amdinfer::ModelMetadata::setName::name"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE", "amdinfer::ModelMetadata::setName::name"], [62, 3, 1, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb", "amdinfer::ModelMetadata::setReady"], [746, 3, 1, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb", "amdinfer::ModelMetadata::setReady"], [62, 5, 1, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb", "amdinfer::ModelMetadata::setReady::ready"], [746, 5, 1, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb", "amdinfer::ModelMetadata::setReady::ready"], [680, 1, 1, "_CPPv4N8amdinfer19ModelMetadataTensorE", "amdinfer::ModelMetadataTensor"], [64, 2, 1, "_CPPv4N8amdinfer15ModelRepositoryE", "amdinfer::ModelRepository"], [64, 3, 1, "_CPPv4N8amdinfer15ModelRepository16enableMonitoringEb", "amdinfer::ModelRepository::enableMonitoring"], [64, 5, 1, "_CPPv4N8amdinfer15ModelRepository16enableMonitoringEb", "amdinfer::ModelRepository::enableMonitoring::use_polling"], [64, 3, 1, "_CPPv4NK8amdinfer15ModelRepository13getRepositoryEv", "amdinfer::ModelRepository::getRepository"], [64, 3, 1, "_CPPv4N8amdinfer15ModelRepository12setEndpointsEP9Endpoints", "amdinfer::ModelRepository::setEndpoints"], [64, 5, 1, "_CPPv4N8amdinfer15ModelRepository12setEndpointsEP9Endpoints", "amdinfer::ModelRepository::setEndpoints::endpoints"], [64, 3, 1, "_CPPv4N8amdinfer15ModelRepository13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::ModelRepository::setRepository"], [64, 5, 1, "_CPPv4N8amdinfer15ModelRepository13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::ModelRepository::setRepository::load_existing"], [64, 5, 1, "_CPPv4N8amdinfer15ModelRepository13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::ModelRepository::setRepository::repository_path"], [66, 2, 1, "_CPPv4N8amdinfer12NativeClientE", "amdinfer::NativeClient"], [746, 2, 1, "_CPPv4N8amdinfer12NativeClientE", "amdinfer::NativeClient"], [66, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server", "amdinfer::NativeClient::NativeClient"], [66, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERK12NativeClient", "amdinfer::NativeClient::NativeClient"], [66, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient", "amdinfer::NativeClient::NativeClient"], [746, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server", "amdinfer::NativeClient::NativeClient"], [746, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERK12NativeClient", "amdinfer::NativeClient::NativeClient"], [746, 3, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient", "amdinfer::NativeClient::NativeClient"], [66, 5, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient", "amdinfer::NativeClient::NativeClient::other"], [746, 5, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient", "amdinfer::NativeClient::NativeClient::other"], [66, 5, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server", "amdinfer::NativeClient::NativeClient::server"], [746, 5, 1, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server", "amdinfer::NativeClient::NativeClient::server"], [66, 2, 1, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE", "amdinfer::NativeClient::NativeClientImpl"], [631, 2, 1, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE", "amdinfer::NativeClient::NativeClientImpl"], [746, 2, 1, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE", "amdinfer::NativeClient::NativeClientImpl"], [66, 6, 1, "_CPPv4N8amdinfer12NativeClient16NativeClientImpl5stateE", "amdinfer::NativeClient::NativeClientImpl::state"], [631, 6, 1, "_CPPv4N8amdinfer12NativeClient16NativeClientImpl5stateE", "amdinfer::NativeClient::NativeClientImpl::state"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware::name"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware::name"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware::num"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi", "amdinfer::NativeClient::hasHardware::num"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer::model"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer::request"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInfer::request"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync::model"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync::request"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::NativeClient::modelInferAsync::request"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient9modelListEv", "amdinfer::NativeClient::modelList"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient9modelListEv", "amdinfer::NativeClient::modelList"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad::model"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::modelLoad::parameters"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE", "amdinfer::NativeClient::modelMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE", "amdinfer::NativeClient::modelMetadata"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE", "amdinfer::NativeClient::modelMetadata::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE", "amdinfer::NativeClient::modelMetadata::model"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE", "amdinfer::NativeClient::modelReady"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE", "amdinfer::NativeClient::modelReady"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE", "amdinfer::NativeClient::modelReady::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE", "amdinfer::NativeClient::modelReady::model"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE", "amdinfer::NativeClient::modelUnload"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE", "amdinfer::NativeClient::modelUnload"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE", "amdinfer::NativeClient::modelUnload::model"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE", "amdinfer::NativeClient::modelUnload::model"], [66, 3, 1, "_CPPv4N8amdinfer12NativeClientaSERK12NativeClient", "amdinfer::NativeClient::operator="], [66, 3, 1, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient", "amdinfer::NativeClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer12NativeClientaSERK12NativeClient", "amdinfer::NativeClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient", "amdinfer::NativeClient::operator="], [66, 5, 1, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient", "amdinfer::NativeClient::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient", "amdinfer::NativeClient::operator=::other"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient10serverLiveEv", "amdinfer::NativeClient::serverLive"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient10serverLiveEv", "amdinfer::NativeClient::serverLive"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient14serverMetadataEv", "amdinfer::NativeClient::serverMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient14serverMetadataEv", "amdinfer::NativeClient::serverMetadata"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient11serverReadyEv", "amdinfer::NativeClient::serverReady"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient11serverReadyEv", "amdinfer::NativeClient::serverReady"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad::parameters"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad::worker"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::NativeClient::workerLoad::worker"], [66, 3, 1, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE", "amdinfer::NativeClient::workerUnload"], [746, 3, 1, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE", "amdinfer::NativeClient::workerUnload"], [66, 5, 1, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE", "amdinfer::NativeClient::workerUnload::worker"], [746, 5, 1, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE", "amdinfer::NativeClient::workerUnload::worker"], [66, 3, 1, "_CPPv4N8amdinfer12NativeClientD0Ev", "amdinfer::NativeClient::~NativeClient"], [746, 3, 1, "_CPPv4N8amdinfer12NativeClientD0Ev", "amdinfer::NativeClient::~NativeClient"], [632, 2, 1, "_CPPv4N8amdinfer8ObserverE", "amdinfer::Observer"], [633, 2, 1, "_CPPv4IDpEN8amdinfer10OverloadedE", "amdinfer::Overloaded"], [362, 3, 1, "_CPPv4IDpEN8amdinfer10OverloadedE10OverloadedIDp2TsEDp2Ts", "amdinfer::Overloaded"], [362, 4, 1, "_CPPv4IDpEN8amdinfer10OverloadedE10OverloadedIDp2TsEDp2Ts", "amdinfer::Overloaded::Ts"], [633, 4, 1, "_CPPv4IDpEN8amdinfer10OverloadedE", "amdinfer::Overloaded::Ts"], [682, 1, 1, "_CPPv4N8amdinfer9ParameterE", "amdinfer::Parameter"], [686, 1, 1, "_CPPv4N8amdinfer9ParameterE", "amdinfer::Parameter"], [67, 2, 1, "_CPPv4N8amdinfer12ParameterMapE", "amdinfer::ParameterMap"], [746, 2, 1, "_CPPv4N8amdinfer12ParameterMapE", "amdinfer::ParameterMap"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap5beginEv", "amdinfer::ParameterMap::begin"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap5beginEv", "amdinfer::ParameterMap::begin"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap5beginEv", "amdinfer::ParameterMap::begin"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap5beginEv", "amdinfer::ParameterMap::begin"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap6cbeginEv", "amdinfer::ParameterMap::cbegin"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap6cbeginEv", "amdinfer::ParameterMap::cbegin"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4cendEv", "amdinfer::ParameterMap::cend"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4cendEv", "amdinfer::ParameterMap::cend"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4dataEv", "amdinfer::ParameterMap::data"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4dataEv", "amdinfer::ParameterMap::data"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE", "amdinfer::ParameterMap::deserialize"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE", "amdinfer::ParameterMap::deserialize"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE", "amdinfer::ParameterMap::deserialize::data_in"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE", "amdinfer::ParameterMap::deserialize::data_in"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap5emptyEv", "amdinfer::ParameterMap::empty"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap5emptyEv", "amdinfer::ParameterMap::empty"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3endEv", "amdinfer::ParameterMap::end"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap3endEv", "amdinfer::ParameterMap::end"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3endEv", "amdinfer::ParameterMap::end"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap3endEv", "amdinfer::ParameterMap::end"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE", "amdinfer::ParameterMap::erase"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE", "amdinfer::ParameterMap::erase"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE", "amdinfer::ParameterMap::erase::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE", "amdinfer::ParameterMap::erase::key"], [67, 3, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get"], [746, 3, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get"], [67, 4, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get::T"], [746, 4, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get::T"], [67, 5, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get::key"], [746, 5, 1, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE", "amdinfer::ParameterMap::get::key"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE", "amdinfer::ParameterMap::has"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE", "amdinfer::ParameterMap::has"], [67, 5, 1, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE", "amdinfer::ParameterMap::has::key"], [746, 5, 1, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE", "amdinfer::ParameterMap::has::key"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;::os"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;::os"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;::self"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap", "amdinfer::ParameterMap::operator&lt;&lt;::self"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put::value"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put::value"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put::value"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put::value"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put::value"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t", "amdinfer::ParameterMap::put::value"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc", "amdinfer::ParameterMap::put::value"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::put::value"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb", "amdinfer::ParameterMap::put::value"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd", "amdinfer::ParameterMap::put::value"], [67, 3, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename"], [746, 3, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename::key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename::key"], [67, 5, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename::new_key"], [746, 5, 1, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE", "amdinfer::ParameterMap::rename::new_key"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE", "amdinfer::ParameterMap::serialize"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE", "amdinfer::ParameterMap::serialize"], [67, 5, 1, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE", "amdinfer::ParameterMap::serialize::data_out"], [746, 5, 1, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE", "amdinfer::ParameterMap::serialize::data_out"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap13serializeSizeEv", "amdinfer::ParameterMap::serializeSize"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap13serializeSizeEv", "amdinfer::ParameterMap::serializeSize"], [67, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4sizeEv", "amdinfer::ParameterMap::size"], [746, 3, 1, "_CPPv4NK8amdinfer12ParameterMap4sizeEv", "amdinfer::ParameterMap::size"], [681, 1, 1, "_CPPv4N8amdinfer15ParameterMapPtrE", "amdinfer::ParameterMapPtr"], [634, 2, 1, "_CPPv4N8amdinfer16RequestContainerE", "amdinfer::RequestContainer"], [634, 6, 1, "_CPPv4N8amdinfer16RequestContainer7requestE", "amdinfer::RequestContainer::request"], [655, 1, 1, "_CPPv4N8amdinfer19RequestContainerPtrE", "amdinfer::RequestContainerPtr"], [69, 2, 1, "_CPPv4N8amdinfer12SerializableE", "amdinfer::Serializable"], [69, 3, 1, "_CPPv4N8amdinfer12Serializable11deserializeEPKNSt4byteE", "amdinfer::Serializable::deserialize"], [69, 5, 1, "_CPPv4N8amdinfer12Serializable11deserializeEPKNSt4byteE", "amdinfer::Serializable::deserialize::data_in"], [69, 3, 1, "_CPPv4NK8amdinfer12Serializable9serializeEPNSt4byteE", "amdinfer::Serializable::serialize"], [69, 5, 1, "_CPPv4NK8amdinfer12Serializable9serializeEPNSt4byteE", "amdinfer::Serializable::serialize::data_out"], [69, 3, 1, "_CPPv4NK8amdinfer12Serializable13serializeSizeEv", "amdinfer::Serializable::serializeSize"], [69, 3, 1, "_CPPv4N8amdinfer12SerializableD0Ev", "amdinfer::Serializable::~Serializable"], [70, 2, 1, "_CPPv4N8amdinfer6ServerE", "amdinfer::Server"], [746, 2, 1, "_CPPv4N8amdinfer6ServerE", "amdinfer::Server"], [70, 3, 1, "_CPPv4N8amdinfer6Server6ServerERK6Server", "amdinfer::Server::Server"], [70, 3, 1, "_CPPv4N8amdinfer6Server6ServerERR6Server", "amdinfer::Server::Server"], [70, 3, 1, "_CPPv4N8amdinfer6Server6ServerEv", "amdinfer::Server::Server"], [746, 3, 1, "_CPPv4N8amdinfer6Server6ServerERK6Server", "amdinfer::Server::Server"], [746, 3, 1, "_CPPv4N8amdinfer6Server6ServerERR6Server", "amdinfer::Server::Server"], [746, 3, 1, "_CPPv4N8amdinfer6Server6ServerEv", "amdinfer::Server::Server"], [70, 5, 1, "_CPPv4N8amdinfer6Server6ServerERR6Server", "amdinfer::Server::Server::other"], [746, 5, 1, "_CPPv4N8amdinfer6Server6ServerERR6Server", "amdinfer::Server::Server::other"], [70, 2, 1, "_CPPv4N8amdinfer6Server10ServerImplE", "amdinfer::Server::ServerImpl"], [636, 2, 1, "_CPPv4N8amdinfer6Server10ServerImplE", "amdinfer::Server::ServerImpl"], [746, 2, 1, "_CPPv4N8amdinfer6Server10ServerImplE", "amdinfer::Server::ServerImpl"], [70, 6, 1, "_CPPv4N8amdinfer6Server10ServerImpl5stateE", "amdinfer::Server::ServerImpl::state"], [636, 6, 1, "_CPPv4N8amdinfer6Server10ServerImpl5stateE", "amdinfer::Server::ServerImpl::state"], [70, 3, 1, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb", "amdinfer::Server::enableRepositoryMonitoring"], [746, 3, 1, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb", "amdinfer::Server::enableRepositoryMonitoring"], [70, 5, 1, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb", "amdinfer::Server::enableRepositoryMonitoring::use_polling"], [746, 5, 1, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb", "amdinfer::Server::enableRepositoryMonitoring::use_polling"], [70, 3, 1, "_CPPv4N8amdinfer6ServeraSERK6Server", "amdinfer::Server::operator="], [70, 3, 1, "_CPPv4N8amdinfer6ServeraSERR6Server", "amdinfer::Server::operator="], [746, 3, 1, "_CPPv4N8amdinfer6ServeraSERK6Server", "amdinfer::Server::operator="], [746, 3, 1, "_CPPv4N8amdinfer6ServeraSERR6Server", "amdinfer::Server::operator="], [70, 5, 1, "_CPPv4N8amdinfer6ServeraSERR6Server", "amdinfer::Server::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer6ServeraSERR6Server", "amdinfer::Server::operator=::other"], [70, 3, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository"], [746, 3, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository"], [70, 5, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository::load_existing"], [746, 5, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository::load_existing"], [70, 5, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository::repository_path"], [746, 5, 1, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb", "amdinfer::Server::setModelRepository::repository_path"], [70, 3, 1, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t", "amdinfer::Server::startGrpc"], [746, 3, 1, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t", "amdinfer::Server::startGrpc"], [70, 5, 1, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t", "amdinfer::Server::startGrpc::port"], [746, 5, 1, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t", "amdinfer::Server::startGrpc::port"], [70, 3, 1, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t", "amdinfer::Server::startHttp"], [746, 3, 1, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t", "amdinfer::Server::startHttp"], [70, 5, 1, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t", "amdinfer::Server::startHttp::port"], [746, 5, 1, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t", "amdinfer::Server::startHttp::port"], [70, 3, 1, "_CPPv4NK8amdinfer6Server8stopGrpcEv", "amdinfer::Server::stopGrpc"], [746, 3, 1, "_CPPv4NK8amdinfer6Server8stopGrpcEv", "amdinfer::Server::stopGrpc"], [70, 3, 1, "_CPPv4NK8amdinfer6Server8stopHttpEv", "amdinfer::Server::stopHttp"], [746, 3, 1, "_CPPv4NK8amdinfer6Server8stopHttpEv", "amdinfer::Server::stopHttp"], [70, 3, 1, "_CPPv4N8amdinfer6ServerD0Ev", "amdinfer::Server::~Server"], [746, 3, 1, "_CPPv4N8amdinfer6ServerD0Ev", "amdinfer::Server::~Server"], [635, 2, 1, "_CPPv4N8amdinfer14ServerMetadataE", "amdinfer::ServerMetadata"], [746, 2, 1, "_CPPv4N8amdinfer14ServerMetadataE", "amdinfer::ServerMetadata"], [635, 6, 1, "_CPPv4N8amdinfer14ServerMetadata10extensionsE", "amdinfer::ServerMetadata::extensions"], [746, 6, 1, "_CPPv4N8amdinfer14ServerMetadata10extensionsE", "amdinfer::ServerMetadata::extensions"], [635, 6, 1, "_CPPv4N8amdinfer14ServerMetadata4nameE", "amdinfer::ServerMetadata::name"], [746, 6, 1, "_CPPv4N8amdinfer14ServerMetadata4nameE", "amdinfer::ServerMetadata::name"], [635, 6, 1, "_CPPv4N8amdinfer14ServerMetadata7versionE", "amdinfer::ServerMetadata::version"], [746, 6, 1, "_CPPv4N8amdinfer14ServerMetadata7versionE", "amdinfer::ServerMetadata::version"], [637, 2, 1, "_CPPv4N8amdinfer12SetInputDataE", "amdinfer::SetInputData"], [637, 3, 1, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t", "amdinfer::SetInputData::operator()"], [637, 4, 1, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t", "amdinfer::SetInputData::operator()::T"], [637, 5, 1, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t", "amdinfer::SetInputData::operator()::json"], [637, 5, 1, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t", "amdinfer::SetInputData::operator()::src_data"], [637, 5, 1, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t", "amdinfer::SetInputData::operator()::src_size"], [638, 2, 1, "_CPPv4N8amdinfer13SetOutputDataE", "amdinfer::SetOutputData"], [638, 3, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()"], [638, 3, 1, "_CPPv4I0ENK8amdinfer13SetOutputDataclEvRKN4Json5ValueEP23InferenceResponseOutput", "amdinfer::SetOutputData::operator()"], [638, 4, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::T"], [638, 4, 1, "_CPPv4I0ENK8amdinfer13SetOutputDataclEvRKN4Json5ValueEP23InferenceResponseOutput", "amdinfer::SetOutputData::operator()::T"], [638, 4, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::Tensor"], [638, 5, 1, "_CPPv4I0ENK8amdinfer13SetOutputDataclEvRKN4Json5ValueEP23InferenceResponseOutput", "amdinfer::SetOutputData::operator()::json"], [638, 5, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::observer"], [638, 5, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::output"], [638, 5, 1, "_CPPv4I0ENK8amdinfer13SetOutputDataclEvRKN4Json5ValueEP23InferenceResponseOutput", "amdinfer::SetOutputData::operator()::output"], [638, 5, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::size"], [638, 5, 1, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer", "amdinfer::SetOutputData::operator()::tensor"], [71, 2, 1, "_CPPv4N8amdinfer11SharedStateE", "amdinfer::SharedState"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState26enableRepositoryMonitoringEb", "amdinfer::SharedState::enableRepositoryMonitoring"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState26enableRepositoryMonitoringEb", "amdinfer::SharedState::enableRepositoryMonitoring::use_polling"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState11getHardwareEv", "amdinfer::SharedState::getHardware"], [71, 3, 1, "_CPPv4NK8amdinfer11SharedState7getPoolEv", "amdinfer::SharedState::getPool"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState11hasHardwareERKNSt6stringEi", "amdinfer::SharedState::hasHardware"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState11hasHardwareERKNSt6stringEi", "amdinfer::SharedState::hasHardware::name"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState11hasHardwareERKNSt6stringEi", "amdinfer::SharedState::hasHardware::num"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState10modelInferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::SharedState::modelInfer"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState10modelInferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::SharedState::modelInfer::model"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState10modelInferERKNSt6stringENSt10unique_ptrI16RequestContainerEE", "amdinfer::SharedState::modelInfer::request"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState9modelListEv", "amdinfer::SharedState::modelList"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::modelLoad"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::modelLoad::model"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::modelLoad::parameters"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState13modelMetadataERKNSt6stringE", "amdinfer::SharedState::modelMetadata"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState13modelMetadataERKNSt6stringE", "amdinfer::SharedState::modelMetadata::model"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState10modelReadyERKNSt6stringE", "amdinfer::SharedState::modelReady"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState10modelReadyERKNSt6stringE", "amdinfer::SharedState::modelReady::model"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState11modelUnloadERKNSt6stringE", "amdinfer::SharedState::modelUnload"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState11modelUnloadERKNSt6stringE", "amdinfer::SharedState::modelUnload::model"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState14serverMetadataEv", "amdinfer::SharedState::serverMetadata"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::SharedState::setRepository"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::SharedState::setRepository::load_existing"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState13setRepositoryERKNSt10filesystem4pathEb", "amdinfer::SharedState::setRepository::repository_path"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::workerLoad"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::workerLoad::parameters"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::SharedState::workerLoad::worker"], [71, 3, 1, "_CPPv4N8amdinfer11SharedState12workerUnloadERKNSt6stringE", "amdinfer::SharedState::workerUnload"], [71, 5, 1, "_CPPv4N8amdinfer11SharedState12workerUnloadERKNSt6stringE", "amdinfer::SharedState::workerUnload::worker"], [72, 2, 1, "_CPPv4N8amdinfer11SoftBatcherE", "amdinfer::SoftBatcher"], [72, 3, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPool", "amdinfer::SoftBatcher::Batcher"], [72, 3, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::SoftBatcher::Batcher"], [72, 3, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherERK7Batcher", "amdinfer::SoftBatcher::Batcher"], [72, 3, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherERR7Batcher", "amdinfer::SoftBatcher::Batcher"], [72, 5, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherERK7Batcher", "amdinfer::SoftBatcher::Batcher::batcher"], [72, 5, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherERR7Batcher", "amdinfer::SoftBatcher::Batcher::other"], [72, 5, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::SoftBatcher::Batcher::parameters"], [72, 5, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPool", "amdinfer::SoftBatcher::Batcher::pool"], [72, 5, 1, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPoolP12ParameterMap", "amdinfer::SoftBatcher::Batcher::pool"], [158, 7, 1, "_CPPv4N8amdinfer6StatusE", "amdinfer::Status"], [158, 8, 1, "_CPPv4N8amdinfer6Status8NotFoundE", "amdinfer::Status::NotFound"], [158, 8, 1, "_CPPv4N8amdinfer6Status14NotImplementedE", "amdinfer::Status::NotImplemented"], [158, 8, 1, "_CPPv4N8amdinfer6Status2OKE", "amdinfer::Status::OK"], [659, 1, 1, "_CPPv4N8amdinfer9StringMapE", "amdinfer::StringMap"], [73, 2, 1, "_CPPv4N8amdinfer6TensorE", "amdinfer::Tensor"], [73, 3, 1, "_CPPv4N8amdinfer6Tensor6TensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::Tensor::Tensor"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor6TensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::Tensor::Tensor::data_type"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor6TensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::Tensor::Tensor::name"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor6TensorENSt6stringENSt6vectorI8uint64_tEE8DataType", "amdinfer::Tensor::Tensor::shape"], [73, 3, 1, "_CPPv4N8amdinfer6Tensor11deserializeEPKNSt4byteE", "amdinfer::Tensor::deserialize"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor11deserializeEPKNSt4byteE", "amdinfer::Tensor::deserialize::data_in"], [73, 3, 1, "_CPPv4NK8amdinfer6Tensor11getDatatypeEv", "amdinfer::Tensor::getDatatype"], [73, 3, 1, "_CPPv4NKR8amdinfer6Tensor7getNameEv", "amdinfer::Tensor::getName"], [73, 3, 1, "_CPPv4NO8amdinfer6Tensor7getNameEv", "amdinfer::Tensor::getName"], [73, 3, 1, "_CPPv4NKR8amdinfer6Tensor8getShapeEv", "amdinfer::Tensor::getShape"], [73, 3, 1, "_CPPv4NO8amdinfer6Tensor8getShapeEv", "amdinfer::Tensor::getShape"], [73, 3, 1, "_CPPv4NK8amdinfer6Tensor7getSizeEv", "amdinfer::Tensor::getSize"], [73, 3, 1, "_CPPv4NK8amdinfer6Tensor9serializeEPNSt4byteE", "amdinfer::Tensor::serialize"], [73, 5, 1, "_CPPv4NK8amdinfer6Tensor9serializeEPNSt4byteE", "amdinfer::Tensor::serialize::data_out"], [73, 3, 1, "_CPPv4NK8amdinfer6Tensor13serializeSizeEv", "amdinfer::Tensor::serializeSize"], [73, 3, 1, "_CPPv4N8amdinfer6Tensor11setDatatypeE8DataType", "amdinfer::Tensor::setDatatype"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor11setDatatypeE8DataType", "amdinfer::Tensor::setDatatype::data_type"], [73, 3, 1, "_CPPv4N8amdinfer6Tensor7setNameENSt6stringE", "amdinfer::Tensor::setName"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor7setNameENSt6stringE", "amdinfer::Tensor::setName::name"], [73, 3, 1, "_CPPv4N8amdinfer6Tensor8setShapeENSt6vectorI8uint64_tEE", "amdinfer::Tensor::setShape"], [73, 5, 1, "_CPPv4N8amdinfer6Tensor8setShapeENSt6vectorI8uint64_tEE", "amdinfer::Tensor::setShape::shape"], [639, 2, 1, "_CPPv4N8amdinfer11TensorSizesE", "amdinfer::TensorSizes"], [639, 6, 1, "_CPPv4N8amdinfer11TensorSizes9data_typeE", "amdinfer::TensorSizes::data_type"], [639, 6, 1, "_CPPv4N8amdinfer11TensorSizes4nameE", "amdinfer::TensorSizes::name"], [639, 6, 1, "_CPPv4N8amdinfer11TensorSizes5shapeE", "amdinfer::TensorSizes::shape"], [656, 1, 1, "_CPPv4N8amdinfer8TracePtrE", "amdinfer::TracePtr"], [640, 2, 1, "_CPPv4N8amdinfer13UpdateCommandE", "amdinfer::UpdateCommand"], [640, 3, 1, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv", "amdinfer::UpdateCommand::UpdateCommand"], [640, 5, 1, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv", "amdinfer::UpdateCommand::UpdateCommand::cmd"], [640, 5, 1, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv", "amdinfer::UpdateCommand::UpdateCommand::key"], [640, 5, 1, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv", "amdinfer::UpdateCommand::UpdateCommand::object"], [640, 5, 1, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv", "amdinfer::UpdateCommand::UpdateCommand::retval"], [640, 6, 1, "_CPPv4N8amdinfer13UpdateCommand3cmdE", "amdinfer::UpdateCommand::cmd"], [640, 6, 1, "_CPPv4N8amdinfer13UpdateCommand4eptrE", "amdinfer::UpdateCommand::eptr"], [640, 6, 1, "_CPPv4N8amdinfer13UpdateCommand3keyE", "amdinfer::UpdateCommand::key"], [640, 6, 1, "_CPPv4N8amdinfer13UpdateCommand6objectE", "amdinfer::UpdateCommand::object"], [640, 6, 1, "_CPPv4N8amdinfer13UpdateCommand6retvalE", "amdinfer::UpdateCommand::retval"], [666, 1, 1, "_CPPv4N8amdinfer18UpdateCommandQueueE", "amdinfer::UpdateCommandQueue"], [679, 1, 1, "_CPPv4N8amdinfer18UpdateCommandQueueE", "amdinfer::UpdateCommandQueue"], [150, 7, 1, "_CPPv4N8amdinfer17UpdateCommandTypeE", "amdinfer::UpdateCommandType"], [156, 7, 1, "_CPPv4N8amdinfer17UpdateCommandTypeE", "amdinfer::UpdateCommandType"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType6ExistsE", "amdinfer::UpdateCommandType::Exists"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType6ExistsE", "amdinfer::UpdateCommandType::Exists"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType4ListE", "amdinfer::UpdateCommandType::List"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType4ListE", "amdinfer::UpdateCommandType::List"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType4LoadE", "amdinfer::UpdateCommandType::Load"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType4LoadE", "amdinfer::UpdateCommandType::Load"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType8MetadataE", "amdinfer::UpdateCommandType::Metadata"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType8MetadataE", "amdinfer::UpdateCommandType::Metadata"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType5ReadyE", "amdinfer::UpdateCommandType::Ready"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType5ReadyE", "amdinfer::UpdateCommandType::Ready"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType8ShutdownE", "amdinfer::UpdateCommandType::Shutdown"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType8ShutdownE", "amdinfer::UpdateCommandType::Shutdown"], [150, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType6UnloadE", "amdinfer::UpdateCommandType::Unload"], [156, 8, 1, "_CPPv4N8amdinfer17UpdateCommandType6UnloadE", "amdinfer::UpdateCommandType::Unload"], [74, 2, 1, "_CPPv4N8amdinfer14UpdateListenerE", "amdinfer::UpdateListener"], [74, 3, 1, "_CPPv4N8amdinfer14UpdateListener14UpdateListenerERKNSt10filesystem4pathEP9Endpoints", "amdinfer::UpdateListener::UpdateListener"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener14UpdateListenerERKNSt10filesystem4pathEP9Endpoints", "amdinfer::UpdateListener::UpdateListener::endpoints"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener14UpdateListenerERKNSt10filesystem4pathEP9Endpoints", "amdinfer::UpdateListener::UpdateListener::repository"], [74, 3, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction::action"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction::dir"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction::filename"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction::old_filename"], [74, 5, 1, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE", "amdinfer::UpdateListener::handleFileAction::watch_id"], [75, 2, 1, "_CPPv4N8amdinfer16VartTensorBufferE", "amdinfer::VartTensorBuffer"], [75, 3, 1, "_CPPv4N8amdinfer16VartTensorBuffer16VartTensorBufferEPv16MemoryAllocators", "amdinfer::VartTensorBuffer::VartTensorBuffer"], [75, 5, 1, "_CPPv4N8amdinfer16VartTensorBuffer16VartTensorBufferEPv16MemoryAllocators", "amdinfer::VartTensorBuffer::VartTensorBuffer::allocator"], [75, 5, 1, "_CPPv4N8amdinfer16VartTensorBuffer16VartTensorBufferEPv16MemoryAllocators", "amdinfer::VartTensorBuffer::VartTensorBuffer::data"], [75, 3, 1, "_CPPv4N8amdinfer16VartTensorBuffer4dataE6size_t", "amdinfer::VartTensorBuffer::data"], [75, 5, 1, "_CPPv4N8amdinfer16VartTensorBuffer4dataE6size_t", "amdinfer::VartTensorBuffer::data::offset"], [75, 3, 1, "_CPPv4N8amdinfer16VartTensorBuffer15getTensorBufferEv", "amdinfer::VartTensorBuffer::getTensorBuffer"], [77, 2, 1, "_CPPv4N8amdinfer15WebSocketClientE", "amdinfer::WebSocketClient"], [746, 2, 1, "_CPPv4N8amdinfer15WebSocketClientE", "amdinfer::WebSocketClient"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERK15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERK15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient::http_address"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient::http_address"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient::other"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient", "amdinfer::WebSocketClient::WebSocketClient::other"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient::ws_address"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClient::ws_address"], [77, 2, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE", "amdinfer::WebSocketClient::WebSocketClientImpl"], [78, 2, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE", "amdinfer::WebSocketClient::WebSocketClientImpl"], [746, 2, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE", "amdinfer::WebSocketClient::WebSocketClientImpl"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::http_address"], [78, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::http_address"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::other"], [78, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::other"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::other"], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::ws_address"], [78, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE", "amdinfer::WebSocketClient::WebSocketClientImpl::WebSocketClientImpl::ws_address"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl7connectEv", "amdinfer::WebSocketClient::WebSocketClientImpl::connect"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl7connectEv", "amdinfer::WebSocketClient::WebSocketClientImpl::connect"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl13getHttpClientEv", "amdinfer::WebSocketClient::WebSocketClientImpl::getHttpClient"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl13getHttpClientEv", "amdinfer::WebSocketClient::WebSocketClientImpl::getHttpClient"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl11getWsClientEv", "amdinfer::WebSocketClient::WebSocketClientImpl::getWsClient"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl11getWsClientEv", "amdinfer::WebSocketClient::WebSocketClientImpl::getWsClient"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator="], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator=::other"], [78, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl", "amdinfer::WebSocketClient::WebSocketClientImpl::operator=::other"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl4recvEv", "amdinfer::WebSocketClient::WebSocketClientImpl::recv"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl4recvEv", "amdinfer::WebSocketClient::WebSocketClientImpl::recv"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplD0Ev", "amdinfer::WebSocketClient::WebSocketClientImpl::~WebSocketClientImpl"], [78, 3, 1, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplD0Ev", "amdinfer::WebSocketClient::WebSocketClientImpl::~WebSocketClientImpl"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient5closeEv", "amdinfer::WebSocketClient::close"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient5closeEv", "amdinfer::WebSocketClient::close"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware::name"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware::name"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware::num"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi", "amdinfer::WebSocketClient::hasHardware::num"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer::model"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer::request"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInfer::request"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync::model"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync::request"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferAsync::request"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs::model"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs::request"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest", "amdinfer::WebSocketClient::modelInferWs::request"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelListEv", "amdinfer::WebSocketClient::modelList"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelListEv", "amdinfer::WebSocketClient::modelList"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad::model"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::modelLoad::parameters"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE", "amdinfer::WebSocketClient::modelMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE", "amdinfer::WebSocketClient::modelMetadata"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE", "amdinfer::WebSocketClient::modelMetadata::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE", "amdinfer::WebSocketClient::modelMetadata::model"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE", "amdinfer::WebSocketClient::modelReady"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE", "amdinfer::WebSocketClient::modelReady"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE", "amdinfer::WebSocketClient::modelReady::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE", "amdinfer::WebSocketClient::modelReady::model"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelRecvEv", "amdinfer::WebSocketClient::modelRecv"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient9modelRecvEv", "amdinfer::WebSocketClient::modelRecv"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE", "amdinfer::WebSocketClient::modelUnload"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE", "amdinfer::WebSocketClient::modelUnload"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE", "amdinfer::WebSocketClient::modelUnload::model"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE", "amdinfer::WebSocketClient::modelUnload::model"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClientaSERK15WebSocketClient", "amdinfer::WebSocketClient::operator="], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient", "amdinfer::WebSocketClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClientaSERK15WebSocketClient", "amdinfer::WebSocketClient::operator="], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient", "amdinfer::WebSocketClient::operator="], [77, 5, 1, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient", "amdinfer::WebSocketClient::operator=::other"], [746, 5, 1, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient", "amdinfer::WebSocketClient::operator=::other"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10serverLiveEv", "amdinfer::WebSocketClient::serverLive"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10serverLiveEv", "amdinfer::WebSocketClient::serverLive"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient14serverMetadataEv", "amdinfer::WebSocketClient::serverMetadata"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient14serverMetadataEv", "amdinfer::WebSocketClient::serverMetadata"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11serverReadyEv", "amdinfer::WebSocketClient::serverReady"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient11serverReadyEv", "amdinfer::WebSocketClient::serverReady"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad::parameters"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad::parameters"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad::worker"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap", "amdinfer::WebSocketClient::workerLoad::worker"], [77, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE", "amdinfer::WebSocketClient::workerUnload"], [746, 3, 1, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE", "amdinfer::WebSocketClient::workerUnload"], [77, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE", "amdinfer::WebSocketClient::workerUnload::worker"], [746, 5, 1, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE", "amdinfer::WebSocketClient::workerUnload::worker"], [77, 3, 1, "_CPPv4N8amdinfer15WebSocketClientD0Ev", "amdinfer::WebSocketClient::~WebSocketClient"], [746, 3, 1, "_CPPv4N8amdinfer15WebSocketClientD0Ev", "amdinfer::WebSocketClient::~WebSocketClient"], [79, 2, 1, "_CPPv4N8amdinfer10WorkerInfoE", "amdinfer::WorkerInfo"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERK10WorkerInfo", "amdinfer::WorkerInfo::WorkerInfo"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::WorkerInfo"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERR10WorkerInfo", "amdinfer::WorkerInfo::WorkerInfo"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::WorkerInfo::name"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERR10WorkerInfo", "amdinfer::WorkerInfo::WorkerInfo::other"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::WorkerInfo::parameters"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::WorkerInfo::pool"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo17addAndStartWorkerERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::addAndStartWorker"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo17addAndStartWorkerERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::addAndStartWorker::name"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo17addAndStartWorkerERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::addAndStartWorker::parameters"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo17addAndStartWorkerERKNSt6stringEP12ParameterMapP10MemoryPool", "amdinfer::WorkerInfo::addAndStartWorker::pool"], [79, 3, 1, "_CPPv4NK8amdinfer10WorkerInfo12getBatchSizeEv", "amdinfer::WorkerInfo::getBatchSize"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo10getBatcherEv", "amdinfer::WorkerInfo::getBatcher"], [79, 3, 1, "_CPPv4NK8amdinfer10WorkerInfo12getGroupSizeEv", "amdinfer::WorkerInfo::getGroupSize"], [79, 3, 1, "_CPPv4NK8amdinfer10WorkerInfo11getMetadataEv", "amdinfer::WorkerInfo::getMetadata"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo4joinENSt6thread2idE", "amdinfer::WorkerInfo::join"], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfo4joinENSt6thread2idE", "amdinfer::WorkerInfo::join::id"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo7joinAllEv", "amdinfer::WorkerInfo::joinAll"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfoaSERK10WorkerInfo", "amdinfer::WorkerInfo::operator="], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfoaSERR10WorkerInfo", "amdinfer::WorkerInfo::operator="], [79, 5, 1, "_CPPv4N8amdinfer10WorkerInfoaSERR10WorkerInfo", "amdinfer::WorkerInfo::operator=::other"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo8shutdownEv", "amdinfer::WorkerInfo::shutdown"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfo6unloadEv", "amdinfer::WorkerInfo::unload"], [79, 3, 1, "_CPPv4N8amdinfer10WorkerInfoD0Ev", "amdinfer::WorkerInfo::~WorkerInfo"], [641, 2, 1, "_CPPv4N8amdinfer9WriteDataE", "amdinfer::WriteData"], [641, 3, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()"], [641, 3, 1, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t", "amdinfer::WriteData::operator()"], [641, 4, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::T"], [641, 4, 1, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t", "amdinfer::WriteData::operator()::T"], [641, 4, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::Tensor"], [641, 5, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::buffer"], [641, 5, 1, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t", "amdinfer::WriteData::operator()::buffer"], [641, 5, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::observer"], [641, 5, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::offset"], [641, 5, 1, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t", "amdinfer::WriteData::operator()::offset"], [641, 5, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::size"], [641, 5, 1, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer", "amdinfer::WriteData::operator()::tensor"], [641, 5, 1, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t", "amdinfer::WriteData::operator()::value"], [375, 3, 1, "_CPPv4N8amdinfer10addHeadersERKN6drogon14HttpRequestPtrERK9StringMap", "amdinfer::addHeaders"], [375, 5, 1, "_CPPv4N8amdinfer10addHeadersERKN6drogon14HttpRequestPtrERK9StringMap", "amdinfer::addHeaders::headers"], [375, 5, 1, "_CPPv4N8amdinfer10addHeadersERKN6drogon14HttpRequestPtrERK9StringMap", "amdinfer::addHeaders::req"], [80, 2, 1, "_CPPv4N8amdinfer10bad_statusE", "amdinfer::bad_status"], [746, 2, 1, "_CPPv4N8amdinfer10bad_statusE", "amdinfer::bad_status"], [374, 3, 1, "_CPPv4N8amdinfer10checkErrorEN6drogon9ReqResultE", "amdinfer::checkError"], [374, 5, 1, "_CPPv4N8amdinfer10checkErrorEN6drogon9ReqResultE", "amdinfer::checkError::result"], [81, 2, 1, "_CPPv4N8amdinfer16connection_errorE", "amdinfer::connection_error"], [746, 2, 1, "_CPPv4N8amdinfer16connection_errorE", "amdinfer::connection_error"], [307, 3, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage"], [408, 3, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage"], [307, 5, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage::data"], [408, 5, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage::data"], [307, 5, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage::key"], [408, 5, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage::key"], [307, 5, 1, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringERKNSt6stringE", "amdinfer::constructMessage::labels"], [376, 3, 1, "_CPPv4N8amdinfer16createGetRequestERKNSt6stringERK9StringMap", "amdinfer::createGetRequest"], [376, 5, 1, "_CPPv4N8amdinfer16createGetRequestERKNSt6stringERK9StringMap", "amdinfer::createGetRequest::headers"], [376, 5, 1, "_CPPv4N8amdinfer16createGetRequestERKNSt6stringERK9StringMap", "amdinfer::createGetRequest::path"], [377, 3, 1, "_CPPv4N8amdinfer22createInferenceRequestERKNSt6stringERK16InferenceRequestRK9StringMap", "amdinfer::createInferenceRequest"], [377, 5, 1, "_CPPv4N8amdinfer22createInferenceRequestERKNSt6stringERK16InferenceRequestRK9StringMap", "amdinfer::createInferenceRequest::headers"], [377, 5, 1, "_CPPv4N8amdinfer22createInferenceRequestERKNSt6stringERK16InferenceRequestRK9StringMap", "amdinfer::createInferenceRequest::model"], [377, 5, 1, "_CPPv4N8amdinfer22createInferenceRequestERKNSt6stringERK16InferenceRequestRK9StringMap", "amdinfer::createInferenceRequest::request"], [373, 3, 1, "_CPPv4N8amdinfer17createPostRequestERKN4Json5ValueERKNSt6stringERK9StringMap", "amdinfer::createPostRequest"], [373, 5, 1, "_CPPv4N8amdinfer17createPostRequestERKN4Json5ValueERKNSt6stringERK9StringMap", "amdinfer::createPostRequest::headers"], [373, 5, 1, "_CPPv4N8amdinfer17createPostRequestERKN4Json5ValueERKNSt6stringERK9StringMap", "amdinfer::createPostRequest::json"], [373, 5, 1, "_CPPv4N8amdinfer17createPostRequestERKN4Json5ValueERKNSt6stringERK9StringMap", "amdinfer::createPostRequest::path"], [343, 3, 1, "_CPPv4N8amdinfer6detail4hashENSt11string_viewE", "amdinfer::detail::hash"], [343, 5, 1, "_CPPv4N8amdinfer6detail4hashENSt11string_viewE", "amdinfer::detail::hash::str"], [82, 2, 1, "_CPPv4N8amdinfer25environment_not_set_errorE", "amdinfer::environment_not_set_error"], [746, 2, 1, "_CPPv4N8amdinfer25environment_not_set_errorE", "amdinfer::environment_not_set_error"], [383, 3, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse"], [396, 3, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse"], [383, 5, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse::error"], [396, 5, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse::error"], [383, 5, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse::status_code"], [396, 5, 1, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi", "amdinfer::errorHttpResponse::status_code"], [432, 3, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType"], [434, 3, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType"], [432, 4, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType::Ts"], [434, 4, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType::Ts"], [432, 5, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType::i"], [434, 5, 1, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE", "amdinfer::expandType::i"], [83, 2, 1, "_CPPv4N8amdinfer14external_errorE", "amdinfer::external_error"], [746, 2, 1, "_CPPv4N8amdinfer14external_errorE", "amdinfer::external_error"], [84, 2, 1, "_CPPv4N8amdinfer20file_not_found_errorE", "amdinfer::file_not_found_error"], [746, 2, 1, "_CPPv4N8amdinfer20file_not_found_errorE", "amdinfer::file_not_found_error"], [85, 2, 1, "_CPPv4N8amdinfer15file_read_errorE", "amdinfer::file_read_error"], [746, 2, 1, "_CPPv4N8amdinfer15file_read_errorE", "amdinfer::file_read_error"], [458, 3, 1, "_CPPv4N8amdinfer8findFuncERKNSt6stringERKNSt6stringE", "amdinfer::findFunc"], [458, 5, 1, "_CPPv4N8amdinfer8findFuncERKNSt6stringERKNSt6stringE", "amdinfer::findFunc::func"], [458, 5, 1, "_CPPv4N8amdinfer8findFuncERKNSt6stringERKNSt6stringE", "amdinfer::findFunc::so_path"], [650, 1, 1, "_CPPv4N8amdinfer4fp16E", "amdinfer::fp16"], [327, 3, 1, "_CPPv4N8amdinfer11getFunctionEPvRKNSt6stringE", "amdinfer::getFunction"], [327, 5, 1, "_CPPv4N8amdinfer11getFunctionEPvRKNSt6stringE", "amdinfer::getFunction::function"], [327, 5, 1, "_CPPv4N8amdinfer11getFunctionEPvRKNSt6stringE", "amdinfer::getFunction::handle"], [370, 3, 1, "_CPPv4N8amdinfer8getInputERKN9inference34ModelInferRequest_InferInputTensorEPK10MemoryPool", "amdinfer::getInput"], [370, 5, 1, "_CPPv4N8amdinfer8getInputERKN9inference34ModelInferRequest_InferInputTensorEPK10MemoryPool", "amdinfer::getInput::pool"], [370, 5, 1, "_CPPv4N8amdinfer8getInputERKN9inference34ModelInferRequest_InferInputTensorEPK10MemoryPool", "amdinfer::getInput::req"], [410, 3, 1, "_CPPv4N8amdinfer8getLevelE8LogLevel", "amdinfer::getLevel"], [410, 5, 1, "_CPPv4N8amdinfer8getLevelE8LogLevel", "amdinfer::getLevel::level"], [411, 3, 1, "_CPPv4N8amdinfer15getLogDirectoryEv", "amdinfer::getLogDirectory"], [367, 3, 1, "_CPPv4N8amdinfer9getOutputERKN9inference44ModelInferRequest_InferRequestedOutputTensorE", "amdinfer::getOutput"], [367, 5, 1, "_CPPv4N8amdinfer9getOutputERKN9inference44ModelInferRequest_InferRequestedOutputTensorE", "amdinfer::getOutput::proto"], [368, 3, 1, "_CPPv4N8amdinfer10getRequestERKN9inference17ModelInferRequestEPK10MemoryPool", "amdinfer::getRequest"], [429, 3, 1, "_CPPv4N8amdinfer10getRequestERK16InferenceRequestPK10MemoryPool", "amdinfer::getRequest"], [368, 5, 1, "_CPPv4N8amdinfer10getRequestERKN9inference17ModelInferRequestEPK10MemoryPool", "amdinfer::getRequest::grpc_request"], [368, 5, 1, "_CPPv4N8amdinfer10getRequestERKN9inference17ModelInferRequestEPK10MemoryPool", "amdinfer::getRequest::pool"], [429, 5, 1, "_CPPv4N8amdinfer10getRequestERK16InferenceRequestPK10MemoryPool", "amdinfer::getRequest::pool"], [429, 5, 1, "_CPPv4N8amdinfer10getRequestERK16InferenceRequestPK10MemoryPool", "amdinfer::getRequest::req"], [363, 3, 1, "_CPPv4I00EN8amdinfer17getTensorContentsEPDaP6Tensor", "amdinfer::getTensorContents"], [363, 4, 1, "_CPPv4I00EN8amdinfer17getTensorContentsEPDaP6Tensor", "amdinfer::getTensorContents::T"], [363, 4, 1, "_CPPv4I00EN8amdinfer17getTensorContentsEPDaP6Tensor", "amdinfer::getTensorContents::Tensor"], [363, 5, 1, "_CPPv4I00EN8amdinfer17getTensorContentsEPDaP6Tensor", "amdinfer::getTensorContents::tensor"], [459, 3, 1, "_CPPv4N8amdinfer9getWorkerERKNSt6stringE", "amdinfer::getWorker"], [459, 5, 1, "_CPPv4N8amdinfer9getWorkerERKNSt6stringE", "amdinfer::getWorker::name"], [369, 3, 1, "_CPPv4N8amdinfer4grpc5startEP11SharedStatei", "amdinfer::grpc::start"], [369, 5, 1, "_CPPv4N8amdinfer4grpc5startEP11SharedStatei", "amdinfer::grpc::start::port"], [369, 5, 1, "_CPPv4N8amdinfer4grpc5startEP11SharedStatei", "amdinfer::grpc::start::state"], [365, 3, 1, "_CPPv4N8amdinfer4grpc4stopEv", "amdinfer::grpc::stop"], [366, 3, 1, "_CPPv4N8amdinfer17grpcUnaryCallbackEP18CallDataModelInferRK17InferenceResponse", "amdinfer::grpcUnaryCallback"], [366, 5, 1, "_CPPv4N8amdinfer17grpcUnaryCallbackEP18CallDataModelInferRK17InferenceResponse", "amdinfer::grpcUnaryCallback::calldata"], [366, 5, 1, "_CPPv4N8amdinfer17grpcUnaryCallbackEP18CallDataModelInferRK17InferenceResponse", "amdinfer::grpcUnaryCallback::response"], [87, 2, 1, "_CPPv4N8amdinfer4http15WebsocketServerE", "amdinfer::http::WebsocketServer"], [87, 3, 1, "_CPPv4N8amdinfer4http15WebsocketServer15WebsocketServerEP11SharedState", "amdinfer::http::WebsocketServer::WebsocketServer"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer15WebsocketServerEP11SharedState", "amdinfer::http::WebsocketServer::WebsocketServer::state"], [87, 3, 1, "_CPPv4N8amdinfer4http15WebsocketServer22handleConnectionClosedERKN6drogon22WebSocketConnectionPtrE", "amdinfer::http::WebsocketServer::handleConnectionClosed"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer22handleConnectionClosedERKN6drogon22WebSocketConnectionPtrE", "amdinfer::http::WebsocketServer::handleConnectionClosed::conn"], [87, 3, 1, "_CPPv4N8amdinfer4http15WebsocketServer19handleNewConnectionERKN6drogon14HttpRequestPtrERKN6drogon22WebSocketConnectionPtrE", "amdinfer::http::WebsocketServer::handleNewConnection"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer19handleNewConnectionERKN6drogon14HttpRequestPtrERKN6drogon22WebSocketConnectionPtrE", "amdinfer::http::WebsocketServer::handleNewConnection::conn"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer19handleNewConnectionERKN6drogon14HttpRequestPtrERKN6drogon22WebSocketConnectionPtrE", "amdinfer::http::WebsocketServer::handleNewConnection::req"], [87, 3, 1, "_CPPv4N8amdinfer4http15WebsocketServer16handleNewMessageERKN6drogon22WebSocketConnectionPtrERRNSt6stringERKN6drogon20WebSocketMessageTypeE", "amdinfer::http::WebsocketServer::handleNewMessage"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer16handleNewMessageERKN6drogon22WebSocketConnectionPtrERRNSt6stringERKN6drogon20WebSocketMessageTypeE", "amdinfer::http::WebsocketServer::handleNewMessage::conn"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer16handleNewMessageERKN6drogon22WebSocketConnectionPtrERRNSt6stringERKN6drogon20WebSocketMessageTypeE", "amdinfer::http::WebsocketServer::handleNewMessage::message"], [87, 5, 1, "_CPPv4N8amdinfer4http15WebsocketServer16handleNewMessageERKN6drogon22WebSocketConnectionPtrERRNSt6stringERKN6drogon20WebSocketMessageTypeE", "amdinfer::http::WebsocketServer::handleNewMessage::type"], [457, 3, 1, "_CPPv4N8amdinfer4http11setCallbackEP16InferenceRequestN6drogon22WebSocketConnectionPtrE", "amdinfer::http::setCallback"], [457, 5, 1, "_CPPv4N8amdinfer4http11setCallbackEP16InferenceRequestN6drogon22WebSocketConnectionPtrE", "amdinfer::http::setCallback::conn"], [457, 5, 1, "_CPPv4N8amdinfer4http11setCallbackEP16InferenceRequestN6drogon22WebSocketConnectionPtrE", "amdinfer::http::setCallback::request"], [395, 3, 1, "_CPPv4N8amdinfer4http5startEP11SharedState8uint16_t", "amdinfer::http::start"], [395, 5, 1, "_CPPv4N8amdinfer4http5startEP11SharedState8uint16_t", "amdinfer::http::start::port"], [395, 5, 1, "_CPPv4N8amdinfer4http5startEP11SharedState8uint16_t", "amdinfer::http::start::state"], [394, 3, 1, "_CPPv4N8amdinfer4http4stopEv", "amdinfer::http::stop"], [333, 3, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered"], [746, 3, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered"], [333, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::client"], [746, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::client"], [333, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::model"], [746, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::model"], [333, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::requests"], [746, 5, 1, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE", "amdinfer::inferAsyncOrdered::requests"], [330, 3, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched"], [746, 3, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched"], [330, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::batch_size"], [746, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::batch_size"], [330, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::client"], [746, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::client"], [330, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::model"], [746, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::model"], [330, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::requests"], [746, 5, 1, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t", "amdinfer::inferAsyncOrderedBatched::requests"], [409, 3, 1, "_CPPv4N8amdinfer10initLoggerERK10LogOptions", "amdinfer::initLogger"], [409, 5, 1, "_CPPv4N8amdinfer10initLoggerERK10LogOptions", "amdinfer::initLogger::options"], [332, 3, 1, "_CPPv4N8amdinfer23initializeClientLoggingEv", "amdinfer::initializeClientLogging"], [443, 3, 1, "_CPPv4N8amdinfer23initializeServerLoggingEv", "amdinfer::initializeServerLogging"], [88, 2, 1, "_CPPv4N8amdinfer16invalid_argumentE", "amdinfer::invalid_argument"], [746, 2, 1, "_CPPv4N8amdinfer16invalid_argumentE", "amdinfer::invalid_argument"], [392, 3, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType"], [393, 3, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType"], [392, 4, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType::T"], [393, 4, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType::T"], [392, 5, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType::datum"], [393, 5, 1, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE", "amdinfer::jsonValueToType::datum"], [729, 6, 1, "_CPPv4N8amdinfer20kDefaultCpuBlockSizeE", "amdinfer::kDefaultCpuBlockSize"], [707, 6, 1, "_CPPv4N8amdinfer13kInputLengthsE", "amdinfer::kInputLengths"], [714, 6, 1, "_CPPv4N8amdinfer13kInputLengthsE", "amdinfer::kInputLengths"], [727, 6, 1, "_CPPv4N8amdinfer13kInputLengthsE", "amdinfer::kInputLengths"], [708, 6, 1, "_CPPv4N8amdinfer13kInputTensorsE", "amdinfer::kInputTensors"], [712, 6, 1, "_CPPv4N8amdinfer13kInputTensorsE", "amdinfer::kInputTensors"], [725, 6, 1, "_CPPv4N8amdinfer13kInputTensorsE", "amdinfer::kInputTensors"], [745, 6, 1, "_CPPv4N8amdinfer14kNumBufferAutoE", "amdinfer::kNumBufferAuto"], [728, 6, 1, "_CPPv4N8amdinfer13kNumTraceDataE", "amdinfer::kNumTraceData"], [706, 6, 1, "_CPPv4N8amdinfer14kOutputLengthsE", "amdinfer::kOutputLengths"], [711, 6, 1, "_CPPv4N8amdinfer14kOutputLengthsE", "amdinfer::kOutputLengths"], [726, 6, 1, "_CPPv4N8amdinfer14kOutputLengthsE", "amdinfer::kOutputLengths"], [709, 6, 1, "_CPPv4N8amdinfer14kOutputTensorsE", "amdinfer::kOutputTensors"], [713, 6, 1, "_CPPv4N8amdinfer14kOutputTensorsE", "amdinfer::kOutputTensors"], [724, 6, 1, "_CPPv4N8amdinfer14kOutputTensorsE", "amdinfer::kOutputTensors"], [723, 6, 1, "_CPPv4N8amdinfer13kPercentile50E", "amdinfer::kPercentile50"], [721, 6, 1, "_CPPv4N8amdinfer13kPercentile90E", "amdinfer::kPercentile90"], [722, 6, 1, "_CPPv4N8amdinfer13kPercentile99E", "amdinfer::kPercentile99"], [381, 3, 1, "_CPPv4N8amdinfer22mapJsonToModelMetadataEPKN4Json5ValueE", "amdinfer::mapJsonToModelMetadata"], [381, 5, 1, "_CPPv4N8amdinfer22mapJsonToModelMetadataEPKN4Json5ValueE", "amdinfer::mapJsonToModelMetadata::json"], [380, 3, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters"], [386, 3, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters"], [390, 3, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters"], [380, 5, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters::json"], [386, 5, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters::json"], [390, 5, 1, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE", "amdinfer::mapJsonToParameters::json"], [382, 3, 1, "_CPPv4N8amdinfer17mapJsonToResponseEPN4Json5ValueE", "amdinfer::mapJsonToResponse"], [382, 5, 1, "_CPPv4N8amdinfer17mapJsonToResponseEPN4Json5ValueE", "amdinfer::mapJsonToResponse::json"], [355, 3, 1, "_CPPv4N8amdinfer23mapModelMetadataToProtoERK13ModelMetadataRN9inference21ModelMetadataResponseE", "amdinfer::mapModelMetadataToProto"], [355, 5, 1, "_CPPv4N8amdinfer23mapModelMetadataToProtoERK13ModelMetadataRN9inference21ModelMetadataResponseE", "amdinfer::mapModelMetadataToProto::metadata"], [355, 5, 1, "_CPPv4N8amdinfer23mapModelMetadataToProtoERK13ModelMetadataRN9inference21ModelMetadataResponseE", "amdinfer::mapModelMetadataToProto::resp"], [387, 3, 1, "_CPPv4N8amdinfer19mapParametersToJsonERK12ParameterMap", "amdinfer::mapParametersToJson"], [387, 5, 1, "_CPPv4N8amdinfer19mapParametersToJsonERK12ParameterMap", "amdinfer::mapParametersToJson::parameters"], [350, 3, 1, "_CPPv4N8amdinfer20mapParametersToProtoERKNSt3mapINSt6stringEN8amdinfer9ParameterENSt4lessIEEEEPN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapParametersToProto"], [350, 5, 1, "_CPPv4N8amdinfer20mapParametersToProtoERKNSt3mapINSt6stringEN8amdinfer9ParameterENSt4lessIEEEEPN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapParametersToProto::grpc_parameters"], [350, 5, 1, "_CPPv4N8amdinfer20mapParametersToProtoERKNSt3mapINSt6stringEN8amdinfer9ParameterENSt4lessIEEEEPN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapParametersToProto::parameters"], [349, 3, 1, "_CPPv4N8amdinfer23mapProtoToModelMetadataERKN9inference21ModelMetadataResponseE", "amdinfer::mapProtoToModelMetadata"], [349, 5, 1, "_CPPv4N8amdinfer23mapProtoToModelMetadataERKN9inference21ModelMetadataResponseE", "amdinfer::mapProtoToModelMetadata::resp"], [351, 3, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters"], [354, 3, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEER12ParameterMap", "amdinfer::mapProtoToParameters"], [358, 3, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters"], [359, 3, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters"], [420, 3, 1, "_CPPv4N8amdinfer21mapProtoToParameters2ERKN6google8protobuf3MapINSt6stringEN9inference15InferParameter2EEEP12ParameterMap", "amdinfer::mapProtoToParameters2"], [420, 5, 1, "_CPPv4N8amdinfer21mapProtoToParameters2ERKN6google8protobuf3MapINSt6stringEN9inference15InferParameter2EEEP12ParameterMap", "amdinfer::mapProtoToParameters2::parameters"], [420, 5, 1, "_CPPv4N8amdinfer21mapProtoToParameters2ERKN6google8protobuf3MapINSt6stringEN9inference15InferParameter2EEEP12ParameterMap", "amdinfer::mapProtoToParameters2::params"], [354, 5, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEER12ParameterMap", "amdinfer::mapProtoToParameters::parameters"], [351, 5, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters::params"], [354, 5, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEER12ParameterMap", "amdinfer::mapProtoToParameters::params"], [358, 5, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters::params"], [359, 5, 1, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE", "amdinfer::mapProtoToParameters::params"], [357, 3, 1, "_CPPv4N8amdinfer18mapProtoToResponseERKN9inference18ModelInferResponseER17InferenceResponseRK8Observer", "amdinfer::mapProtoToResponse"], [357, 5, 1, "_CPPv4N8amdinfer18mapProtoToResponseERKN9inference18ModelInferResponseER17InferenceResponseRK8Observer", "amdinfer::mapProtoToResponse::observer"], [357, 5, 1, "_CPPv4N8amdinfer18mapProtoToResponseERKN9inference18ModelInferResponseER17InferenceResponseRK8Observer", "amdinfer::mapProtoToResponse::reply"], [357, 5, 1, "_CPPv4N8amdinfer18mapProtoToResponseERKN9inference18ModelInferResponseER17InferenceResponseRK8Observer", "amdinfer::mapProtoToResponse::response"], [391, 3, 1, "_CPPv4N8amdinfer16mapRequestToJsonERK16InferenceRequest", "amdinfer::mapRequestToJson"], [391, 5, 1, "_CPPv4N8amdinfer16mapRequestToJsonERK16InferenceRequest", "amdinfer::mapRequestToJson::request"], [364, 3, 1, "_CPPv4N8amdinfer17mapRequestToProtoERK16InferenceRequestRN9inference17ModelInferRequestERK8Observer", "amdinfer::mapRequestToProto"], [364, 5, 1, "_CPPv4N8amdinfer17mapRequestToProtoERK16InferenceRequestRN9inference17ModelInferRequestERK8Observer", "amdinfer::mapRequestToProto::grpc_request"], [364, 5, 1, "_CPPv4N8amdinfer17mapRequestToProtoERK16InferenceRequestRN9inference17ModelInferRequestERK8Observer", "amdinfer::mapRequestToProto::observer"], [364, 5, 1, "_CPPv4N8amdinfer17mapRequestToProtoERK16InferenceRequestRN9inference17ModelInferRequestERK8Observer", "amdinfer::mapRequestToProto::request"], [352, 3, 1, "_CPPv4N8amdinfer18mapResponseToProtoE17InferenceResponseRN9inference18ModelInferResponseE", "amdinfer::mapResponseToProto"], [352, 5, 1, "_CPPv4N8amdinfer18mapResponseToProtoE17InferenceResponseRN9inference18ModelInferResponseE", "amdinfer::mapResponseToProto::reply"], [352, 5, 1, "_CPPv4N8amdinfer18mapResponseToProtoE17InferenceResponseRN9inference18ModelInferResponseE", "amdinfer::mapResponseToProto::response"], [379, 3, 1, "_CPPv4N8amdinfer25modelMetadataTensorToJsonERK19ModelMetadataTensor", "amdinfer::modelMetadataTensorToJson"], [379, 5, 1, "_CPPv4N8amdinfer25modelMetadataTensorToJsonERK19ModelMetadataTensor", "amdinfer::modelMetadataTensorToJson::metadata"], [378, 3, 1, "_CPPv4N8amdinfer19modelMetadataToJsonERK13ModelMetadata", "amdinfer::modelMetadataToJson"], [378, 5, 1, "_CPPv4N8amdinfer19modelMetadataToJsonERK13ModelMetadata", "amdinfer::modelMetadataToJson::metadata"], [326, 3, 1, "_CPPv4N8amdinfer9openModelERKNSt6stringE", "amdinfer::openModel"], [326, 5, 1, "_CPPv4N8amdinfer9openModelERKNSt6stringE", "amdinfer::openModel::so_path"], [341, 3, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK8DataType", "amdinfer::operator&lt;&lt;"], [403, 3, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::operator&lt;&lt;"], [404, 3, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::operator&lt;&lt;"], [405, 3, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK17InferenceResponse", "amdinfer::operator&lt;&lt;"], [403, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::operator&lt;&lt;::my_class"], [341, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK8DataType", "amdinfer::operator&lt;&lt;::os"], [403, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK21InferenceRequestInput", "amdinfer::operator&lt;&lt;::os"], [404, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::operator&lt;&lt;::os"], [405, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK17InferenceResponse", "amdinfer::operator&lt;&lt;::os"], [404, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK23InferenceResponseOutput", "amdinfer::operator&lt;&lt;::self"], [405, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK17InferenceResponse", "amdinfer::operator&lt;&lt;::self"], [341, 5, 1, "_CPPv4N8amdinferlsERNSt7ostreamERK8DataType", "amdinfer::operator&lt;&lt;::value"], [385, 3, 1, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE", "amdinfer::parseJson"], [397, 3, 1, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE", "amdinfer::parseJson"], [385, 5, 1, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE", "amdinfer::parseJson::req"], [397, 5, 1, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE", "amdinfer::parseJson::req"], [419, 3, 1, "_CPPv4N8amdinfer10parseModelERKN2fs4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel"], [422, 3, 1, "_CPPv4N8amdinfer10parseModelERKNSt10filesystem4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel"], [419, 5, 1, "_CPPv4N8amdinfer10parseModelERKN2fs4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::model"], [422, 5, 1, "_CPPv4N8amdinfer10parseModelERKNSt10filesystem4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::model"], [419, 5, 1, "_CPPv4N8amdinfer10parseModelERKN2fs4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::parameters"], [422, 5, 1, "_CPPv4N8amdinfer10parseModelERKNSt10filesystem4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::parameters"], [419, 5, 1, "_CPPv4N8amdinfer10parseModelERKN2fs4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::repository"], [422, 5, 1, "_CPPv4N8amdinfer10parseModelERKNSt10filesystem4pathERKNSt6stringEP12ParameterMap", "amdinfer::parseModel::repository"], [388, 3, 1, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse", "amdinfer::parseResponse"], [399, 3, 1, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse", "amdinfer::parseResponse"], [388, 5, 1, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse", "amdinfer::parseResponse::response"], [399, 5, 1, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse", "amdinfer::parseResponse::response"], [151, 7, 1, "_CPPv4N8amdinfer8pre_post10ImageOrderE", "amdinfer::pre_post::ImageOrder"], [151, 8, 1, "_CPPv4N8amdinfer8pre_post10ImageOrder4NCHWE", "amdinfer::pre_post::ImageOrder::NCHW"], [151, 8, 1, "_CPPv4N8amdinfer8pre_post10ImageOrder4NHWCE", "amdinfer::pre_post::ImageOrder::NHWC"], [642, 2, 1, "_CPPv4I0_iEN8amdinfer8pre_post22ImagePreprocessOptionsE", "amdinfer::pre_post::ImagePreprocessOptions"], [642, 4, 1, "_CPPv4I0_iEN8amdinfer8pre_post22ImagePreprocessOptionsE", "amdinfer::pre_post::ImagePreprocessOptions::T"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6assignE", "amdinfer::pre_post::ImagePreprocessOptions::assign"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions8channelsE", "amdinfer::pre_post::ImagePreprocessOptions::channels"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions10color_codeE", "amdinfer::pre_post::ImagePreprocessOptions::color_code"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions13convert_colorE", "amdinfer::pre_post::ImagePreprocessOptions::convert_color"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions13convert_scaleE", "amdinfer::pre_post::ImagePreprocessOptions::convert_scale"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions12convert_typeE", "amdinfer::pre_post::ImagePreprocessOptions::convert_type"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6heightE", "amdinfer::pre_post::ImagePreprocessOptions::height"], [642, 4, 1, "_CPPv4I0_iEN8amdinfer8pre_post22ImagePreprocessOptionsE", "amdinfer::pre_post::ImagePreprocessOptions::kChannels"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions4meanE", "amdinfer::pre_post::ImagePreprocessOptions::mean"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions9normalizeE", "amdinfer::pre_post::ImagePreprocessOptions::normalize"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions5orderE", "amdinfer::pre_post::ImagePreprocessOptions::order"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6resizeE", "amdinfer::pre_post::ImagePreprocessOptions::resize"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions16resize_algorithmE", "amdinfer::pre_post::ImagePreprocessOptions::resize_algorithm"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptionsStE", "amdinfer::pre_post::ImagePreprocessOptions::std"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions4typeE", "amdinfer::pre_post::ImagePreprocessOptions::type"], [642, 6, 1, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions5widthE", "amdinfer::pre_post::ImagePreprocessOptions::width"], [152, 7, 1, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithmE", "amdinfer::pre_post::ResizeAlgorithm"], [152, 8, 1, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm10CenterCropE", "amdinfer::pre_post::ResizeAlgorithm::CenterCrop"], [152, 8, 1, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm13LetterBoxCropE", "amdinfer::pre_post::ResizeAlgorithm::LetterBoxCrop"], [152, 8, 1, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm6SimpleE", "amdinfer::pre_post::ResizeAlgorithm::Simple"], [444, 3, 1, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd", "amdinfer::pre_post::calcSoftmax"], [444, 4, 1, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd", "amdinfer::pre_post::calcSoftmax::T"], [444, 5, 1, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd", "amdinfer::pre_post::calcSoftmax::data"], [444, 5, 1, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd", "amdinfer::pre_post::calcSoftmax::result"], [444, 5, 1, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd", "amdinfer::pre_post::calcSoftmax::size"], [329, 3, 1, "_CPPv4N8amdinfer8pre_post10centerCropEN2cv3MatEii", "amdinfer::pre_post::centerCrop"], [329, 5, 1, "_CPPv4N8amdinfer8pre_post10centerCropEN2cv3MatEii", "amdinfer::pre_post::centerCrop::height"], [329, 5, 1, "_CPPv4N8amdinfer8pre_post10centerCropEN2cv3MatEii", "amdinfer::pre_post::centerCrop::img"], [329, 5, 1, "_CPPv4N8amdinfer8pre_post10centerCropEN2cv3MatEii", "amdinfer::pre_post::centerCrop::width"], [402, 3, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop"], [402, 4, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::F"], [402, 4, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::T"], [402, 5, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::a"], [402, 5, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::b"], [402, 5, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::c"], [402, 5, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::f"], [402, 5, 1, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F", "amdinfer::pre_post::detail::nestedLoop::output"], [401, 3, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize"], [401, 4, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::T"], [401, 5, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::img"], [401, 4, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::kChannels"], [401, 5, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::mean"], [401, 5, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::order"], [401, 5, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::output"], [401, 5, 1, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T", "amdinfer::pre_post::detail::normalize::std"], [347, 3, 1, "_CPPv4N8amdinfer8pre_post7getTopKEPKd6size_ti", "amdinfer::pre_post::getTopK"], [347, 5, 1, "_CPPv4N8amdinfer8pre_post7getTopKEPKd6size_ti", "amdinfer::pre_post::getTopK::d"], [347, 5, 1, "_CPPv4N8amdinfer8pre_post7getTopKEPKd6size_ti", "amdinfer::pre_post::getTopK::k"], [347, 5, 1, "_CPPv4N8amdinfer8pre_post7getTopKEPKd6size_ti", "amdinfer::pre_post::getTopK::size"], [400, 3, 1, "_CPPv4I0EN8amdinfer8pre_post15imagePreprocessENSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6stringEEERK22ImagePreprocessOptionsI1TXL3EEE", "amdinfer::pre_post::imagePreprocess"], [400, 4, 1, "_CPPv4I0EN8amdinfer8pre_post15imagePreprocessENSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6stringEEERK22ImagePreprocessOptionsI1TXL3EEE", "amdinfer::pre_post::imagePreprocess::T"], [400, 5, 1, "_CPPv4I0EN8amdinfer8pre_post15imagePreprocessENSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6stringEEERK22ImagePreprocessOptionsI1TXL3EEE", "amdinfer::pre_post::imagePreprocess::options"], [400, 5, 1, "_CPPv4I0EN8amdinfer8pre_post15imagePreprocessENSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6stringEEERK22ImagePreprocessOptionsI1TXL3EEE", "amdinfer::pre_post::imagePreprocess::paths"], [715, 6, 1, "_CPPv4N8amdinfer8pre_post17kDefaultImageSizeE", "amdinfer::pre_post::kDefaultImageSize"], [439, 3, 1, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti", "amdinfer::pre_post::resnet50Postprocess"], [439, 4, 1, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti", "amdinfer::pre_post::resnet50Postprocess::T"], [439, 5, 1, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti", "amdinfer::pre_post::resnet50Postprocess::data"], [439, 5, 1, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti", "amdinfer::pre_post::resnet50Postprocess::k"], [439, 5, 1, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti", "amdinfer::pre_post::resnet50Postprocess::size"], [348, 3, 1, "_CPPv4N8amdinfer12runInferenceEPN9inference20GRPCInferenceService4StubERKNSt6stringERK16InferenceRequest", "amdinfer::runInference"], [348, 5, 1, "_CPPv4N8amdinfer12runInferenceEPN9inference20GRPCInferenceService4StubERKNSt6stringERK16InferenceRequest", "amdinfer::runInference::model"], [348, 5, 1, "_CPPv4N8amdinfer12runInferenceEPN9inference20GRPCInferenceService4StubERKNSt6stringERK16InferenceRequest", "amdinfer::runInference::request"], [348, 5, 1, "_CPPv4N8amdinfer12runInferenceEPN9inference20GRPCInferenceService4StubERKNSt6stringERK16InferenceRequest", "amdinfer::runInference::stub"], [89, 2, 1, "_CPPv4N8amdinfer13runtime_errorE", "amdinfer::runtime_error"], [746, 2, 1, "_CPPv4N8amdinfer13runtime_errorE", "amdinfer::runtime_error"], [331, 3, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension"], [746, 3, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension"], [331, 5, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension::client"], [746, 5, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension::client"], [331, 5, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension::extension"], [746, 5, 1, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE", "amdinfer::serverHasExtension::extension"], [371, 3, 1, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequestP18CallDataModelInfer", "amdinfer::setCallback"], [430, 3, 1, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequest", "amdinfer::setCallback"], [371, 5, 1, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequestP18CallDataModelInfer", "amdinfer::setCallback::calldata"], [371, 5, 1, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequestP18CallDataModelInfer", "amdinfer::setCallback::request"], [430, 5, 1, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequest", "amdinfer::setCallback::request"], [441, 3, 1, "_CPPv4N8amdinfer9terminateEv", "amdinfer::terminate"], [90, 2, 1, "_CPPv4N8amdinfer4util10ThreadPoolE", "amdinfer::util::ThreadPool"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolERK10ThreadPool", "amdinfer::util::ThreadPool::ThreadPool"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolERR10ThreadPool", "amdinfer::util::ThreadPool::ThreadPool"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEi", "amdinfer::util::ThreadPool::ThreadPool"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEii", "amdinfer::util::ThreadPool::ThreadPool"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEv", "amdinfer::util::ThreadPool::ThreadPool"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEii", "amdinfer::util::ThreadPool::ThreadPool::queue_size"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEi", "amdinfer::util::ThreadPool::ThreadPool::thread_num"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEii", "amdinfer::util::ThreadPool::ThreadPool::thread_num"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool10clearQueueEv", "amdinfer::util::ThreadPool::clearQueue"], [90, 3, 1, "_CPPv4NK8amdinfer4util10ThreadPool7getIdleEv", "amdinfer::util::ThreadPool::getIdle"], [90, 3, 1, "_CPPv4NK8amdinfer4util10ThreadPool7getSizeEv", "amdinfer::util::ThreadPool::getSize"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool9getThreadEi", "amdinfer::util::ThreadPool::getThread"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool9getThreadEi", "amdinfer::util::ThreadPool::getThread::i"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPoolaSERK10ThreadPool", "amdinfer::util::ThreadPool::operator="], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPoolaSERR10ThreadPool", "amdinfer::util::ThreadPool::operator="], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool3popEv", "amdinfer::util::ThreadPool::pop"], [90, 3, 1, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest", "amdinfer::util::ThreadPool::push"], [90, 3, 1, "_CPPv4I0EN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0EEEEERR1F", "amdinfer::util::ThreadPool::push"], [90, 4, 1, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest", "amdinfer::util::ThreadPool::push::F"], [90, 4, 1, "_CPPv4I0EN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0EEEEERR1F", "amdinfer::util::ThreadPool::push::F"], [90, 4, 1, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest", "amdinfer::util::ThreadPool::push::Rest"], [90, 5, 1, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest", "amdinfer::util::ThreadPool::push::f"], [90, 5, 1, "_CPPv4I0EN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0EEEEERR1F", "amdinfer::util::ThreadPool::push::f"], [90, 5, 1, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest", "amdinfer::util::ThreadPool::push::rest"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool6resizeEi", "amdinfer::util::ThreadPool::resize"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool6resizeEi", "amdinfer::util::ThreadPool::resize::thread_num"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPool4stopEb", "amdinfer::util::ThreadPool::stop"], [90, 5, 1, "_CPPv4N8amdinfer4util10ThreadPool4stopEb", "amdinfer::util::ThreadPool::stop::wait"], [90, 3, 1, "_CPPv4N8amdinfer4util10ThreadPoolD0Ev", "amdinfer::util::ThreadPool::~ThreadPool"], [692, 1, 1, "_CPPv4N8amdinfer4util9TimePointE", "amdinfer::util::TimePoint"], [91, 2, 1, "_CPPv4N8amdinfer4util5TimerE", "amdinfer::util::Timer"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer5TimerE9TimePoint", "amdinfer::util::Timer::Timer"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer5TimerEb", "amdinfer::util::Timer::Timer"], [91, 5, 1, "_CPPv4N8amdinfer4util5Timer5TimerEb", "amdinfer::util::Timer::Timer::start"], [91, 5, 1, "_CPPv4N8amdinfer4util5Timer5TimerE9TimePoint", "amdinfer::util::Timer::Timer::time"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE", "amdinfer::util::Timer::add"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE9TimePoint", "amdinfer::util::Timer::add"], [91, 5, 1, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE", "amdinfer::util::Timer::add::label"], [91, 5, 1, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE9TimePoint", "amdinfer::util::Timer::add::label"], [91, 5, 1, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE9TimePoint", "amdinfer::util::Timer::add::time"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer5clearEv", "amdinfer::util::Timer::clear"], [91, 3, 1, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE", "amdinfer::util::Timer::count"], [91, 4, 1, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE", "amdinfer::util::Timer::count::T"], [91, 4, 1, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE", "amdinfer::util::Timer::count::U"], [91, 5, 1, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE", "amdinfer::util::Timer::count::start"], [91, 5, 1, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE", "amdinfer::util::Timer::count::stop"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer5startEv", "amdinfer::util::Timer::start"], [91, 3, 1, "_CPPv4N8amdinfer4util5Timer4stopEv", "amdinfer::util::Timer::stop"], [449, 3, 1, "_CPPv4N8amdinfer4util15addressToStringEPKv", "amdinfer::util::addressToString"], [449, 5, 1, "_CPPv4N8amdinfer4util15addressToStringEPKv", "amdinfer::util::addressToString::ptr"], [433, 3, 1, "_CPPv4N8amdinfer4util30autoExpandEnvironmentVariablesERNSt6stringE", "amdinfer::util::autoExpandEnvironmentVariables"], [433, 5, 1, "_CPPv4N8amdinfer4util30autoExpandEnvironmentVariablesERNSt6stringE", "amdinfer::util::autoExpandEnvironmentVariables::text"], [320, 3, 1, "_CPPv4N8amdinfer4util12base64DecodeENSt6stringE", "amdinfer::util::base64Decode"], [322, 3, 1, "_CPPv4N8amdinfer4util12base64DecodeEPKc6size_t", "amdinfer::util::base64Decode"], [320, 5, 1, "_CPPv4N8amdinfer4util12base64DecodeENSt6stringE", "amdinfer::util::base64Decode::in"], [322, 5, 1, "_CPPv4N8amdinfer4util12base64DecodeEPKc6size_t", "amdinfer::util::base64Decode::in"], [322, 5, 1, "_CPPv4N8amdinfer4util12base64DecodeEPKc6size_t", "amdinfer::util::base64Decode::in_len"], [321, 3, 1, "_CPPv4N8amdinfer4util12base64EncodeEPKc6size_t", "amdinfer::util::base64Encode"], [323, 3, 1, "_CPPv4N8amdinfer4util12base64EncodeENSt6stringE", "amdinfer::util::base64Encode"], [321, 5, 1, "_CPPv4N8amdinfer4util12base64EncodeEPKc6size_t", "amdinfer::util::base64Encode::in"], [323, 5, 1, "_CPPv4N8amdinfer4util12base64EncodeENSt6stringE", "amdinfer::util::base64Encode::in"], [321, 5, 1, "_CPPv4N8amdinfer4util12base64EncodeEPKc6size_t", "amdinfer::util::base64Encode::in_len"], [337, 3, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDa4Iter4Iter", "amdinfer::util::containerProduct"], [340, 3, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDaRK9Container", "amdinfer::util::containerProduct"], [340, 4, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDaRK9Container", "amdinfer::util::containerProduct::Container"], [337, 4, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDa4Iter4Iter", "amdinfer::util::containerProduct::Iter"], [337, 5, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDa4Iter4Iter", "amdinfer::util::containerProduct::begin"], [340, 5, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDaRK9Container", "amdinfer::util::containerProduct::c"], [337, 5, 1, "_CPPv4I0EN8amdinfer4util16containerProductEDa4Iter4Iter", "amdinfer::util::containerProduct::end"], [338, 3, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDaRK9Container", "amdinfer::util::containerSum"], [339, 3, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDa4Iter4Iter", "amdinfer::util::containerSum"], [338, 4, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDaRK9Container", "amdinfer::util::containerSum::Container"], [339, 4, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDa4Iter4Iter", "amdinfer::util::containerSum::Iter"], [339, 5, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDa4Iter4Iter", "amdinfer::util::containerSum::begin"], [338, 5, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDaRK9Container", "amdinfer::util::containerSum::c"], [339, 5, 1, "_CPPv4I0EN8amdinfer4util12containerSumEDa4Iter4Iter", "amdinfer::util::containerSum::end"], [448, 3, 1, "_CPPv4N8amdinfer4util8endsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::endsWith"], [448, 5, 1, "_CPPv4N8amdinfer4util8endsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::endsWith::str"], [448, 5, 1, "_CPPv4N8amdinfer4util8endsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::endsWith::suffix"], [346, 3, 1, "_CPPv4N8amdinfer4util4execEPKc", "amdinfer::util::exec"], [346, 5, 1, "_CPPv4N8amdinfer4util4execEPKc", "amdinfer::util::exec::cmd"], [456, 3, 1, "_CPPv4N8amdinfer4util7getTimeEv", "amdinfer::util::getTime"], [451, 3, 1, "_CPPv4N8amdinfer4util7isLowerENSt11string_viewE", "amdinfer::util::isLower"], [451, 5, 1, "_CPPv4N8amdinfer4util7isLowerENSt11string_viewE", "amdinfer::util::isLower::str"], [643, 2, 1, "_CPPv4I0DpEN8amdinfer4util6is_anyE", "amdinfer::util::is_any"], [643, 4, 1, "_CPPv4I0DpEN8amdinfer4util6is_anyE", "amdinfer::util::is_any::T"], [643, 4, 1, "_CPPv4I0DpEN8amdinfer4util6is_anyE", "amdinfer::util::is_any::Ts"], [739, 6, 1, "_CPPv4I0DpEN8amdinfer4util8is_any_vE", "amdinfer::util::is_any_v"], [739, 4, 1, "_CPPv4I0DpEN8amdinfer4util8is_any_vE", "amdinfer::util::is_any_v::T"], [739, 4, 1, "_CPPv4I0DpEN8amdinfer4util8is_any_vE", "amdinfer::util::is_any_v::Ts"], [710, 6, 1, "_CPPv4N8amdinfer4util17kThreadPoolLengthE", "amdinfer::util::kThreadPoolLength"], [319, 3, 1, "_CPPv4N8amdinfer4util15minDecodeLengthE6size_t", "amdinfer::util::minDecodeLength"], [319, 5, 1, "_CPPv4N8amdinfer4util15minDecodeLengthE6size_t", "amdinfer::util::minDecodeLength::length"], [324, 3, 1, "_CPPv4N8amdinfer4util15minEncodeLengthE6size_t", "amdinfer::util::minEncodeLength"], [324, 5, 1, "_CPPv4N8amdinfer4util15minEncodeLengthE6size_t", "amdinfer::util::minEncodeLength::length"], [437, 3, 1, "_CPPv4N8amdinfer4util11readNthLineERKNSt6stringEi", "amdinfer::util::readNthLine"], [437, 5, 1, "_CPPv4N8amdinfer4util11readNthLineERKNSt6stringEi", "amdinfer::util::readNthLine::filename"], [437, 5, 1, "_CPPv4N8amdinfer4util11readNthLineERKNSt6stringEi", "amdinfer::util::readNthLine::n"], [454, 3, 1, "_CPPv4N8amdinfer4util13setThreadNameEPKc", "amdinfer::util::setThreadName"], [455, 3, 1, "_CPPv4N8amdinfer4util13setThreadNameERKNSt6stringE", "amdinfer::util::setThreadName"], [454, 5, 1, "_CPPv4N8amdinfer4util13setThreadNameEPKc", "amdinfer::util::setThreadName::name"], [455, 5, 1, "_CPPv4N8amdinfer4util13setThreadNameERKNSt6stringE", "amdinfer::util::setThreadName::name"], [450, 3, 1, "_CPPv4N8amdinfer4util5splitENSt11string_viewENSt11string_viewE", "amdinfer::util::split"], [450, 5, 1, "_CPPv4N8amdinfer4util5splitENSt11string_viewENSt11string_viewE", "amdinfer::util::split::delimiter"], [450, 5, 1, "_CPPv4N8amdinfer4util5splitENSt11string_viewENSt11string_viewE", "amdinfer::util::split::str"], [445, 3, 1, "_CPPv4N8amdinfer4util10startsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::startsWith"], [445, 5, 1, "_CPPv4N8amdinfer4util10startsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::startsWith::prefix"], [445, 5, 1, "_CPPv4N8amdinfer4util10startsWithENSt11string_viewENSt11string_viewE", "amdinfer::util::startsWith::str"], [446, 3, 1, "_CPPv4N8amdinfer4util7toLowerEPNSt6stringE", "amdinfer::util::toLower"], [447, 3, 1, "_CPPv4N8amdinfer4util7toLowerERKNSt6stringE", "amdinfer::util::toLower"], [446, 5, 1, "_CPPv4N8amdinfer4util7toLowerEPNSt6stringE", "amdinfer::util::toLower::str"], [447, 5, 1, "_CPPv4N8amdinfer4util7toLowerERKNSt6stringE", "amdinfer::util::toLower::str"], [336, 3, 1, "_CPPv4N8amdinfer4util11zDecompressEPKci", "amdinfer::util::zDecompress"], [336, 5, 1, "_CPPv4N8amdinfer4util11zDecompressEPKci", "amdinfer::util::zDecompress::len"], [336, 5, 1, "_CPPv4N8amdinfer4util11zDecompressEPKci", "amdinfer::util::zDecompress::str"], [335, 3, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady"], [746, 3, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady"], [335, 5, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady::client"], [746, 5, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady::client"], [335, 5, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady::model"], [746, 5, 1, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE", "amdinfer::waitUntilModelReady::model"], [334, 3, 1, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client", "amdinfer::waitUntilServerReady"], [746, 3, 1, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client", "amdinfer::waitUntilServerReady"], [334, 5, 1, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client", "amdinfer::waitUntilServerReady::client"], [746, 5, 1, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client", "amdinfer::waitUntilServerReady::client"], [92, 2, 1, "_CPPv4N8amdinfer7workers3AksE", "amdinfer::workers::Aks"], [92, 3, 1, "_CPPv4N8amdinfer7workers3Aks6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Aks::Worker"], [92, 5, 1, "_CPPv4N8amdinfer7workers3Aks6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Aks::Worker::name"], [92, 5, 1, "_CPPv4N8amdinfer7workers3Aks6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Aks::Worker::platform"], [92, 3, 1, "_CPPv4NK8amdinfer7workers3Aks13getAllocatorsEv", "amdinfer::workers::Aks::getAllocators"], [92, 3, 1, "_CPPv4N8amdinfer7workers3Aks5spawnEP13BatchPtrQueue", "amdinfer::workers::Aks::spawn"], [92, 5, 1, "_CPPv4N8amdinfer7workers3Aks5spawnEP13BatchPtrQueue", "amdinfer::workers::Aks::spawn::input_queue"], [93, 2, 1, "_CPPv4N8amdinfer7workers9AksDetectE", "amdinfer::workers::AksDetect"], [93, 3, 1, "_CPPv4N8amdinfer7workers9AksDetect6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetect::Worker"], [93, 5, 1, "_CPPv4N8amdinfer7workers9AksDetect6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetect::Worker::name"], [93, 5, 1, "_CPPv4N8amdinfer7workers9AksDetect6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetect::Worker::platform"], [93, 3, 1, "_CPPv4NK8amdinfer7workers9AksDetect13getAllocatorsEv", "amdinfer::workers::AksDetect::getAllocators"], [93, 3, 1, "_CPPv4N8amdinfer7workers9AksDetect5spawnEP13BatchPtrQueue", "amdinfer::workers::AksDetect::spawn"], [93, 5, 1, "_CPPv4N8amdinfer7workers9AksDetect5spawnEP13BatchPtrQueue", "amdinfer::workers::AksDetect::spawn::input_queue"], [94, 2, 1, "_CPPv4N8amdinfer7workers15AksDetectStreamE", "amdinfer::workers::AksDetectStream"], [94, 3, 1, "_CPPv4N8amdinfer7workers15AksDetectStream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetectStream::Worker"], [94, 5, 1, "_CPPv4N8amdinfer7workers15AksDetectStream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetectStream::Worker::name"], [94, 5, 1, "_CPPv4N8amdinfer7workers15AksDetectStream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::AksDetectStream::Worker::platform"], [94, 3, 1, "_CPPv4NK8amdinfer7workers15AksDetectStream13getAllocatorsEv", "amdinfer::workers::AksDetectStream::getAllocators"], [94, 3, 1, "_CPPv4N8amdinfer7workers15AksDetectStream5spawnEP13BatchPtrQueue", "amdinfer::workers::AksDetectStream::spawn"], [94, 5, 1, "_CPPv4N8amdinfer7workers15AksDetectStream5spawnEP13BatchPtrQueue", "amdinfer::workers::AksDetectStream::spawn::input_queue"], [95, 2, 1, "_CPPv4N8amdinfer7workers9CPlusPlusE", "amdinfer::workers::CPlusPlus"], [95, 3, 1, "_CPPv4N8amdinfer7workers9CPlusPlus6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::CPlusPlus::Worker"], [95, 5, 1, "_CPPv4N8amdinfer7workers9CPlusPlus6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::CPlusPlus::Worker::name"], [95, 5, 1, "_CPPv4N8amdinfer7workers9CPlusPlus6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::CPlusPlus::Worker::platform"], [95, 3, 1, "_CPPv4NK8amdinfer7workers9CPlusPlus13getAllocatorsEv", "amdinfer::workers::CPlusPlus::getAllocators"], [95, 3, 1, "_CPPv4N8amdinfer7workers9CPlusPlus5spawnEP13BatchPtrQueue", "amdinfer::workers::CPlusPlus::spawn"], [95, 5, 1, "_CPPv4N8amdinfer7workers9CPlusPlus5spawnEP13BatchPtrQueue", "amdinfer::workers::CPlusPlus::spawn::input_queue"], [644, 2, 1, "_CPPv4N8amdinfer7workers14DetectResponseE", "amdinfer::workers::DetectResponse"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse8class_idE", "amdinfer::workers::DetectResponse::class_id"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse1hE", "amdinfer::workers::DetectResponse::h"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse5scoreE", "amdinfer::workers::DetectResponse::score"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse1wE", "amdinfer::workers::DetectResponse::w"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse1xE", "amdinfer::workers::DetectResponse::x"], [644, 6, 1, "_CPPv4N8amdinfer7workers14DetectResponse1yE", "amdinfer::workers::DetectResponse::y"], [96, 2, 1, "_CPPv4N8amdinfer7workers4EchoE", "amdinfer::workers::Echo"], [96, 3, 1, "_CPPv4N8amdinfer7workers4Echo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Echo::Worker"], [96, 5, 1, "_CPPv4N8amdinfer7workers4Echo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Echo::Worker::name"], [96, 5, 1, "_CPPv4N8amdinfer7workers4Echo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Echo::Worker::platform"], [96, 3, 1, "_CPPv4NK8amdinfer7workers4Echo13getAllocatorsEv", "amdinfer::workers::Echo::getAllocators"], [96, 3, 1, "_CPPv4N8amdinfer7workers4Echo5spawnEP13BatchPtrQueue", "amdinfer::workers::Echo::spawn"], [96, 5, 1, "_CPPv4N8amdinfer7workers4Echo5spawnEP13BatchPtrQueue", "amdinfer::workers::Echo::spawn::input_queue"], [97, 2, 1, "_CPPv4N8amdinfer7workers9EchoMultiE", "amdinfer::workers::EchoMulti"], [97, 3, 1, "_CPPv4N8amdinfer7workers9EchoMulti6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::EchoMulti::Worker"], [97, 5, 1, "_CPPv4N8amdinfer7workers9EchoMulti6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::EchoMulti::Worker::name"], [97, 5, 1, "_CPPv4N8amdinfer7workers9EchoMulti6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::EchoMulti::Worker::platform"], [97, 3, 1, "_CPPv4NK8amdinfer7workers9EchoMulti13getAllocatorsEv", "amdinfer::workers::EchoMulti::getAllocators"], [97, 3, 1, "_CPPv4N8amdinfer7workers9EchoMulti5spawnEP13BatchPtrQueue", "amdinfer::workers::EchoMulti::spawn"], [97, 5, 1, "_CPPv4N8amdinfer7workers9EchoMulti5spawnEP13BatchPtrQueue", "amdinfer::workers::EchoMulti::spawn::input_queue"], [98, 2, 1, "_CPPv4N8amdinfer7workers11InvertImageE", "amdinfer::workers::InvertImage"], [98, 3, 1, "_CPPv4N8amdinfer7workers11InvertImage6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertImage::Worker"], [98, 5, 1, "_CPPv4N8amdinfer7workers11InvertImage6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertImage::Worker::name"], [98, 5, 1, "_CPPv4N8amdinfer7workers11InvertImage6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertImage::Worker::platform"], [98, 3, 1, "_CPPv4NK8amdinfer7workers11InvertImage13getAllocatorsEv", "amdinfer::workers::InvertImage::getAllocators"], [98, 3, 1, "_CPPv4N8amdinfer7workers11InvertImage5spawnEP13BatchPtrQueue", "amdinfer::workers::InvertImage::spawn"], [98, 5, 1, "_CPPv4N8amdinfer7workers11InvertImage5spawnEP13BatchPtrQueue", "amdinfer::workers::InvertImage::spawn::input_queue"], [99, 2, 1, "_CPPv4N8amdinfer7workers11InvertVideoE", "amdinfer::workers::InvertVideo"], [99, 3, 1, "_CPPv4N8amdinfer7workers11InvertVideo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertVideo::Worker"], [99, 5, 1, "_CPPv4N8amdinfer7workers11InvertVideo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertVideo::Worker::name"], [99, 5, 1, "_CPPv4N8amdinfer7workers11InvertVideo6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::InvertVideo::Worker::platform"], [99, 3, 1, "_CPPv4NK8amdinfer7workers11InvertVideo13getAllocatorsEv", "amdinfer::workers::InvertVideo::getAllocators"], [99, 3, 1, "_CPPv4N8amdinfer7workers11InvertVideo5spawnEP13BatchPtrQueue", "amdinfer::workers::InvertVideo::spawn"], [99, 5, 1, "_CPPv4N8amdinfer7workers11InvertVideo5spawnEP13BatchPtrQueue", "amdinfer::workers::InvertVideo::spawn::input_queue"], [100, 2, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorkerE", "amdinfer::workers::MIGraphXWorker"], [100, 3, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::MIGraphXWorker::Worker"], [100, 5, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::MIGraphXWorker::Worker::name"], [100, 5, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::MIGraphXWorker::Worker::platform"], [100, 3, 1, "_CPPv4NK8amdinfer7workers14MIGraphXWorker13getAllocatorsEv", "amdinfer::workers::MIGraphXWorker::getAllocators"], [100, 3, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorker5spawnEP13BatchPtrQueue", "amdinfer::workers::MIGraphXWorker::spawn"], [100, 5, 1, "_CPPv4N8amdinfer7workers14MIGraphXWorker5spawnEP13BatchPtrQueue", "amdinfer::workers::MIGraphXWorker::spawn::input_queue"], [101, 2, 1, "_CPPv4N8amdinfer7workers8PtZendnnE", "amdinfer::workers::PtZendnn"], [101, 3, 1, "_CPPv4N8amdinfer7workers8PtZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::PtZendnn::Worker"], [101, 5, 1, "_CPPv4N8amdinfer7workers8PtZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::PtZendnn::Worker::name"], [101, 5, 1, "_CPPv4N8amdinfer7workers8PtZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::PtZendnn::Worker::platform"], [101, 3, 1, "_CPPv4NK8amdinfer7workers8PtZendnn13getAllocatorsEv", "amdinfer::workers::PtZendnn::getAllocators"], [101, 3, 1, "_CPPv4N8amdinfer7workers8PtZendnn5spawnEP13BatchPtrQueue", "amdinfer::workers::PtZendnn::spawn"], [101, 5, 1, "_CPPv4N8amdinfer7workers8PtZendnn5spawnEP13BatchPtrQueue", "amdinfer::workers::PtZendnn::spawn::input_queue"], [102, 2, 1, "_CPPv4N8amdinfer7workers8ResNet50E", "amdinfer::workers::ResNet50"], [102, 3, 1, "_CPPv4N8amdinfer7workers8ResNet506WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50::Worker"], [102, 5, 1, "_CPPv4N8amdinfer7workers8ResNet506WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50::Worker::name"], [102, 5, 1, "_CPPv4N8amdinfer7workers8ResNet506WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50::Worker::platform"], [102, 3, 1, "_CPPv4NK8amdinfer7workers8ResNet5013getAllocatorsEv", "amdinfer::workers::ResNet50::getAllocators"], [102, 3, 1, "_CPPv4N8amdinfer7workers8ResNet505spawnEP13BatchPtrQueue", "amdinfer::workers::ResNet50::spawn"], [102, 5, 1, "_CPPv4N8amdinfer7workers8ResNet505spawnEP13BatchPtrQueue", "amdinfer::workers::ResNet50::spawn::input_queue"], [103, 2, 1, "_CPPv4N8amdinfer7workers14ResNet50StreamE", "amdinfer::workers::ResNet50Stream"], [103, 3, 1, "_CPPv4N8amdinfer7workers14ResNet50Stream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50Stream::Worker"], [103, 5, 1, "_CPPv4N8amdinfer7workers14ResNet50Stream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50Stream::Worker::name"], [103, 5, 1, "_CPPv4N8amdinfer7workers14ResNet50Stream6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::ResNet50Stream::Worker::platform"], [103, 3, 1, "_CPPv4NK8amdinfer7workers14ResNet50Stream13getAllocatorsEv", "amdinfer::workers::ResNet50Stream::getAllocators"], [103, 3, 1, "_CPPv4N8amdinfer7workers14ResNet50Stream5spawnEP13BatchPtrQueue", "amdinfer::workers::ResNet50Stream::spawn"], [103, 5, 1, "_CPPv4N8amdinfer7workers14ResNet50Stream5spawnEP13BatchPtrQueue", "amdinfer::workers::ResNet50Stream::spawn::input_queue"], [104, 2, 1, "_CPPv4N8amdinfer7workers8TfZendnnE", "amdinfer::workers::TfZendnn"], [104, 3, 1, "_CPPv4N8amdinfer7workers8TfZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::TfZendnn::Worker"], [104, 5, 1, "_CPPv4N8amdinfer7workers8TfZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::TfZendnn::Worker::name"], [104, 5, 1, "_CPPv4N8amdinfer7workers8TfZendnn6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::TfZendnn::Worker::platform"], [104, 3, 1, "_CPPv4NK8amdinfer7workers8TfZendnn13getAllocatorsEv", "amdinfer::workers::TfZendnn::getAllocators"], [104, 3, 1, "_CPPv4N8amdinfer7workers8TfZendnn5spawnEP13BatchPtrQueue", "amdinfer::workers::TfZendnn::spawn"], [104, 5, 1, "_CPPv4N8amdinfer7workers8TfZendnn5spawnEP13BatchPtrQueue", "amdinfer::workers::TfZendnn::spawn::input_queue"], [105, 2, 1, "_CPPv4N8amdinfer7workers6WorkerE", "amdinfer::workers::Worker"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Worker::Worker"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Worker::Worker::name"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker6WorkerERKNSt6stringERKNSt6stringE", "amdinfer::workers::Worker::Worker::platform"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker7acquireEP12ParameterMap", "amdinfer::workers::Worker::acquire"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker7acquireEP12ParameterMap", "amdinfer::workers::Worker::acquire::parameters"], [105, 6, 1, "_CPPv4N8amdinfer7workers6Worker11batch_size_E", "amdinfer::workers::Worker::batch_size_"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker7destroyEv", "amdinfer::workers::Worker::destroy"], [105, 3, 1, "_CPPv4NK8amdinfer7workers6Worker13getAllocatorsEv", "amdinfer::workers::Worker::getAllocators"], [105, 3, 1, "_CPPv4NK8amdinfer7workers6Worker12getBatchSizeEv", "amdinfer::workers::Worker::getBatchSize"], [105, 3, 1, "_CPPv4NK8amdinfer7workers6Worker11getMetadataEv", "amdinfer::workers::Worker::getMetadata"], [105, 3, 1, "_CPPv4NK8amdinfer7workers6Worker9getStatusEv", "amdinfer::workers::Worker::getStatus"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker4initEP12ParameterMap", "amdinfer::workers::Worker::init"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker4initEP12ParameterMap", "amdinfer::workers::Worker::init::parameters"], [105, 3, 1, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker11makeBatcherEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher"], [105, 4, 1, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::T"], [105, 5, 1, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::num"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker11makeBatcherEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::num"], [105, 5, 1, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::parameters"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker11makeBatcherEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::parameters"], [105, 5, 1, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::pool"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker11makeBatcherEiP12ParameterMapP10MemoryPool", "amdinfer::workers::Worker::makeBatcher::pool"], [105, 6, 1, "_CPPv4N8amdinfer7workers6Worker9metadata_E", "amdinfer::workers::Worker::metadata_"], [105, 6, 1, "_CPPv4N8amdinfer7workers6Worker5pool_E", "amdinfer::workers::Worker::pool_"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker7releaseEv", "amdinfer::workers::Worker::release"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker18returnInputBuffersENSt10unique_ptrI5BatchEE", "amdinfer::workers::Worker::returnInputBuffers"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker18returnInputBuffersENSt10unique_ptrI5BatchEE", "amdinfer::workers::Worker::returnInputBuffers::batch"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker3runEP13BatchPtrQueue", "amdinfer::workers::Worker::run"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker3runEP13BatchPtrQueue", "amdinfer::workers::Worker::run::input_queue"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker7setPoolEP10MemoryPool", "amdinfer::workers::Worker::setPool"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker7setPoolEP10MemoryPool", "amdinfer::workers::Worker::setPool::pool"], [105, 3, 1, "_CPPv4N8amdinfer7workers6Worker5spawnEP13BatchPtrQueue", "amdinfer::workers::Worker::spawn"], [105, 5, 1, "_CPPv4N8amdinfer7workers6Worker5spawnEP13BatchPtrQueue", "amdinfer::workers::Worker::spawn::input_queue"], [105, 3, 1, "_CPPv4N8amdinfer7workers6WorkerD0Ev", "amdinfer::workers::Worker::~Worker"], [159, 7, 1, "_CPPv4N8amdinfer7workers12WorkerStatusE", "amdinfer::workers::WorkerStatus"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus7AcquireE", "amdinfer::workers::WorkerStatus::Acquire"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus4DeadE", "amdinfer::workers::WorkerStatus::Dead"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus7DestroyE", "amdinfer::workers::WorkerStatus::Destroy"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus8InactiveE", "amdinfer::workers::WorkerStatus::Inactive"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus4InitE", "amdinfer::workers::WorkerStatus::Init"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus3NewE", "amdinfer::workers::WorkerStatus::New"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus7ReleaseE", "amdinfer::workers::WorkerStatus::Release"], [159, 8, 1, "_CPPv4N8amdinfer7workers12WorkerStatus3RunE", "amdinfer::workers::WorkerStatus::Run"], [106, 2, 1, "_CPPv4N8amdinfer7workers6XModelE", "amdinfer::workers::XModel"], [106, 3, 1, "_CPPv4N8amdinfer7workers6XModel6XModelEv", "amdinfer::workers::XModel::XModel"], [106, 3, 1, "_CPPv4NK8amdinfer7workers6XModel13getAllocatorsEv", "amdinfer::workers::XModel::getAllocators"], [106, 3, 1, "_CPPv4N8amdinfer7workers6XModel5spawnEP13BatchPtrQueue", "amdinfer::workers::XModel::spawn"], [106, 5, 1, "_CPPv4N8amdinfer7workers6XModel5spawnEP13BatchPtrQueue", "amdinfer::workers::XModel::spawn::input_queue"], [699, 6, 1, "_CPPv4N8amdinfer7workers22kAkdDetectResponseSizeE", "amdinfer::workers::kAkdDetectResponseSize"], [735, 6, 1, "_CPPv4N8amdinfer7workers10kBoxHeightE", "amdinfer::workers::kBoxHeight"], [736, 6, 1, "_CPPv4N8amdinfer7workers13kBoxHeightStrE", "amdinfer::workers::kBoxHeightStr"], [695, 6, 1, "_CPPv4N8amdinfer7workers14kImageChannelsE", "amdinfer::workers::kImageChannels"], [697, 6, 1, "_CPPv4N8amdinfer7workers12kImageHeightE", "amdinfer::workers::kImageHeight"], [696, 6, 1, "_CPPv4N8amdinfer7workers10kImageSizeE", "amdinfer::workers::kImageSize"], [733, 6, 1, "_CPPv4N8amdinfer7workers10kImageSizeE", "amdinfer::workers::kImageSize"], [698, 6, 1, "_CPPv4N8amdinfer7workers11kImageWidthE", "amdinfer::workers::kImageWidth"], [734, 6, 1, "_CPPv4N8amdinfer7workers14kImageWidthStrE", "amdinfer::workers::kImageWidthStr"], [717, 6, 1, "_CPPv4N8amdinfer7workers17kMaxImageChannelsE", "amdinfer::workers::kMaxImageChannels"], [716, 6, 1, "_CPPv4N8amdinfer7workers15kMaxImageHeightE", "amdinfer::workers::kMaxImageHeight"], [718, 6, 1, "_CPPv4N8amdinfer7workers14kMaxImageWidthE", "amdinfer::workers::kMaxImageWidth"], [719, 6, 1, "_CPPv4N8amdinfer7workers13kMaxUrlLengthE", "amdinfer::workers::kMaxUrlLength"], [731, 6, 1, "_CPPv4N8amdinfer7workers20kResNetImageChannelsE", "amdinfer::workers::kResNetImageChannels"], [730, 6, 1, "_CPPv4N8amdinfer7workers16kResNetImageSizeE", "amdinfer::workers::kResNetImageSize"], [732, 6, 1, "_CPPv4N8amdinfer7workers20kResNetOutputClassesE", "amdinfer::workers::kResNetOutputClasses"], [737, 6, 1, "_CPPv4N8amdinfer7workers22kResnetClassificationsE", "amdinfer::workers::kResnetClassifications"], [453, 3, 1, "_CPPv4N8amdinfer7workers11openLibraryEPKci", "amdinfer::workers::openLibrary"], [453, 5, 1, "_CPPv4N8amdinfer7workers11openLibraryEPKci", "amdinfer::workers::openLibrary::dlopen_flags"], [453, 5, 1, "_CPPv4N8amdinfer7workers11openLibraryEPKci", "amdinfer::workers::openLibrary::library"], [328, 3, 1, "_CPPv4N8amdinfer7workers7respondEP5Batch", "amdinfer::workers::respond"], [328, 5, 1, "_CPPv4N8amdinfer7workers7respondEP5Batch", "amdinfer::workers::respond::batch"], [417, 3, 1, "_CPPv4N8amdinfer7workers10toDataTypeE25migraphx_shape_datatype_t", "amdinfer::workers::toDataType"], [417, 5, 1, "_CPPv4N8amdinfer7workers10toDataTypeE25migraphx_shape_datatype_t", "amdinfer::workers::toDataType::in"], [107, 2, 1, "_CPPv4I00EN6google8protobuf3MapE", "google::protobuf::Map"], [107, 4, 1, "_CPPv4I00EN6google8protobuf3MapE", "google::protobuf::Map::T"], [107, 4, 1, "_CPPv4I00EN6google8protobuf3MapE", "google::protobuf::Map::U"], [744, 6, 1, "_CPPv416kAmdinferVersion", "kAmdinferVersion"], [741, 6, 1, "_CPPv421kAmdinferVersionLabel", "kAmdinferVersionLabel"], [740, 6, 1, "_CPPv421kAmdinferVersionMajor", "kAmdinferVersionMajor"], [743, 6, 1, "_CPPv421kAmdinferVersionMinor", "kAmdinferVersionMinor"], [742, 6, 1, "_CPPv421kAmdinferVersionPatch", "kAmdinferVersionPatch"], [701, 6, 1, "_CPPv421kDefaultDrogonThreads", "kDefaultDrogonThreads"], [703, 6, 1, "_CPPv416kDefaultGrpcPort", "kDefaultGrpcPort"], [700, 6, 1, "_CPPv416kDefaultHttpPort", "kDefaultHttpPort"], [705, 6, 1, "_CPPv418kMaxClientBodySize", "kMaxClientBodySize"], [704, 6, 1, "_CPPv419kMaxGrpcMessageSize", "kMaxGrpcMessageSize"], [702, 6, 1, "_CPPv417kMaxModelNameSize", "kMaxModelNameSize"], [645, 2, 1, "_CPPv4IENSt4lessIN8amdinfer12ParameterMapEEE", "std::less&lt;amdinfer::ParameterMap&gt;"], [645, 3, 1, "_CPPv4NKSt4lessIN8amdinfer12ParameterMapEEclERKN8amdinfer12ParameterMapERKN8amdinfer12ParameterMapE", "std::less&lt;amdinfer::ParameterMap&gt;::operator()"], [645, 5, 1, "_CPPv4NKSt4lessIN8amdinfer12ParameterMapEEclERKN8amdinfer12ParameterMapERKN8amdinfer12ParameterMapE", "std::less&lt;amdinfer::ParameterMap&gt;::operator()::lhs"], [645, 5, 1, "_CPPv4NKSt4lessIN8amdinfer12ParameterMapEEclERKN8amdinfer12ParameterMapERKN8amdinfer12ParameterMapE", "std::less&lt;amdinfer::ParameterMap&gt;::operator()::rhs"], [767, 9, 1, "get--metrics", "/metrics"], [767, 9, 1, "get--v2-", "/v2/"], [767, 10, 1, "post--v2-hardware", "/v2/hardware"], [767, 9, 1, "get--v2-health-live", "/v2/health/live"], [767, 9, 1, "get--v2-health-ready", "/v2/health/ready"], [767, 9, 1, "get--v2-models", "/v2/models"], [767, 9, 1, "get--v2-models-$MODEL_NAME", "/v2/models/${MODEL_NAME}"], [767, 10, 1, "post--v2-models-$MODEL_NAME-infer", "/v2/models/${MODEL_NAME}/infer"], [767, 10, 1, "post--v2-models-$MODEL_NAME-load", "/v2/models/${MODEL_NAME}/load"], [767, 9, 1, "get--v2-models-$MODEL_NAME-ready", "/v2/models/${MODEL_NAME}/ready"], [767, 10, 1, "post--v2-models-$MODEL_NAME-unload", "/v2/models/${MODEL_NAME}/unload"], [767, 10, 1, "post--v2-workers-$WORKER_NAME-load", "/v2/workers/${WORKER_NAME}/load"], [767, 10, 1, "post--v2-workers-$WORKER_NAME-unload", "/v2/workers/${WORKER_NAME}/unload"], [763, 11, 0, "-", "amdinfer"]], "amdinfer": [[763, 12, 1, "", "BadStatus"], [763, 13, 1, "", "Client"], [763, 12, 1, "", "ConnectionError"], [763, 13, 1, "", "DataType"], [763, 12, 1, "", "EnvironmentNotSetError"], [763, 12, 1, "", "ExternalError"], [763, 12, 1, "", "FileNotFoundError"], [763, 12, 1, "", "FileReadError"], [763, 13, 1, "", "GrpcClient"], [763, 13, 1, "", "HttpClient"], [763, 17, 1, "", "ImageInferenceRequest"], [763, 13, 1, "", "InferenceRequest"], [763, 13, 1, "", "InferenceRequestInput"], [763, 13, 1, "", "InferenceRequestOutput"], [763, 13, 1, "", "InferenceResponse"], [763, 13, 1, "", "InferenceResponseOutput"], [763, 13, 1, "", "InferenceTensor"], [763, 12, 1, "", "InvalidArgumentError"], [763, 13, 1, "", "ModelMetadata"], [763, 13, 1, "", "NativeClient"], [763, 13, 1, "", "ParameterMap"], [763, 12, 1, "", "RuntimeError"], [763, 13, 1, "", "Server"], [763, 13, 1, "", "ServerMetadata"], [763, 13, 1, "", "Tensor"], [763, 13, 1, "", "WebSocketClient"], [763, 17, 1, "", "inferAsyncOrdered"], [763, 17, 1, "", "inferAsyncOrderedBatched"], [763, 17, 1, "", "inference_request_to_dict"], [763, 17, 1, "", "parallel_infer"], [763, 17, 1, "", "serverHasExtension"], [763, 17, 1, "", "start_http_client_server"], [763, 17, 1, "", "stringToArray"], [763, 17, 1, "", "waitUntilModelReady"], [763, 17, 1, "", "waitUntilServerReady"]], "amdinfer.Client": [[763, 14, 1, "", "__init__"]], "amdinfer.DataType": [[763, 15, 1, "", "BOOL"], [763, 15, 1, "", "FLOAT32"], [763, 15, 1, "", "FLOAT64"], [763, 15, 1, "", "FP16"], [763, 15, 1, "", "FP32"], [763, 15, 1, "", "FP64"], [763, 15, 1, "", "INT16"], [763, 15, 1, "", "INT32"], [763, 15, 1, "", "INT64"], [763, 15, 1, "", "INT8"], [763, 15, 1, "", "STRING"], [763, 15, 1, "", "UINT16"], [763, 15, 1, "", "UINT32"], [763, 15, 1, "", "UINT64"], [763, 15, 1, "", "UINT8"], [763, 13, 1, "", "Value"], [763, 14, 1, "", "__init__"], [763, 14, 1, "", "size"], [763, 14, 1, "", "str"]], "amdinfer.DataType.Value": [[763, 15, 1, "", "BOOL"], [763, 15, 1, "", "FLOAT32"], [763, 15, 1, "", "FLOAT64"], [763, 15, 1, "", "FP16"], [763, 15, 1, "", "FP32"], [763, 15, 1, "", "FP64"], [763, 15, 1, "", "INT16"], [763, 15, 1, "", "INT32"], [763, 15, 1, "", "INT64"], [763, 15, 1, "", "INT8"], [763, 15, 1, "", "STRING"], [763, 15, 1, "", "UINT16"], [763, 15, 1, "", "UINT32"], [763, 15, 1, "", "UINT64"], [763, 15, 1, "", "UINT8"], [763, 14, 1, "", "__init__"], [763, 16, 1, "", "name"], [763, 16, 1, "", "value"]], "amdinfer.GrpcClient": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "hasHardware"], [763, 14, 1, "", "modelInfer"], [763, 14, 1, "", "modelList"], [763, 14, 1, "", "modelLoad"], [763, 14, 1, "", "modelMetadata"], [763, 14, 1, "", "modelReady"], [763, 14, 1, "", "modelUnload"], [763, 14, 1, "", "serverLive"], [763, 14, 1, "", "serverMetadata"], [763, 14, 1, "", "serverReady"], [763, 14, 1, "", "workerLoad"], [763, 14, 1, "", "workerUnload"]], "amdinfer.HttpClient": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "hasHardware"], [763, 14, 1, "", "modelInfer"], [763, 14, 1, "", "modelList"], [763, 14, 1, "", "modelLoad"], [763, 14, 1, "", "modelMetadata"], [763, 14, 1, "", "modelReady"], [763, 14, 1, "", "modelUnload"], [763, 14, 1, "", "serverLive"], [763, 14, 1, "", "serverMetadata"], [763, 14, 1, "", "serverReady"], [763, 14, 1, "", "workerLoad"], [763, 14, 1, "", "workerUnload"]], "amdinfer.InferenceRequest": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "addInputTensor"], [763, 14, 1, "", "addOutputTensor"], [763, 14, 1, "", "getInputSize"], [763, 14, 1, "", "getInputs"], [763, 14, 1, "", "getOutputs"], [763, 16, 1, "", "id"], [763, 16, 1, "", "parameters"]], "amdinfer.InferenceRequestInput": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "getFp16Data"], [763, 14, 1, "", "getFp32Data"], [763, 14, 1, "", "getFp64Data"], [763, 14, 1, "", "getInt16Data"], [763, 14, 1, "", "getInt32Data"], [763, 14, 1, "", "getInt64Data"], [763, 14, 1, "", "getInt8Data"], [763, 14, 1, "", "getStringData"], [763, 14, 1, "", "getUint16Data"], [763, 14, 1, "", "getUint32Data"], [763, 14, 1, "", "getUint64Data"], [763, 14, 1, "", "getUint8Data"], [763, 14, 1, "", "setFp16Data"], [763, 14, 1, "", "setFp32Data"], [763, 14, 1, "", "setFp64Data"], [763, 14, 1, "", "setInt16Data"], [763, 14, 1, "", "setInt32Data"], [763, 14, 1, "", "setInt64Data"], [763, 14, 1, "", "setInt8Data"], [763, 14, 1, "", "setStringData"], [763, 14, 1, "", "setUint16Data"], [763, 14, 1, "", "setUint32Data"], [763, 14, 1, "", "setUint64Data"], [763, 14, 1, "", "setUint8Data"]], "amdinfer.InferenceRequestOutput": [[763, 14, 1, "", "__init__"], [763, 16, 1, "", "data"], [763, 16, 1, "", "name"], [763, 16, 1, "", "parameters"]], "amdinfer.InferenceResponse": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "addOutput"], [763, 14, 1, "", "getContext"], [763, 14, 1, "", "getError"], [763, 14, 1, "", "getOutputs"], [763, 14, 1, "", "getParameters"], [763, 16, 1, "", "id"], [763, 14, 1, "", "isError"], [763, 16, 1, "", "model"], [763, 14, 1, "", "setContext"]], "amdinfer.InferenceResponseOutput": [[763, 14, 1, "", "__init__"], [763, 16, 1, "", "datatype"], [763, 14, 1, "", "getFp16Data"], [763, 14, 1, "", "getFp32Data"], [763, 14, 1, "", "getFp64Data"], [763, 14, 1, "", "getInt16Data"], [763, 14, 1, "", "getInt32Data"], [763, 14, 1, "", "getInt64Data"], [763, 14, 1, "", "getInt8Data"], [763, 14, 1, "", "getSize"], [763, 14, 1, "", "getStringData"], [763, 14, 1, "", "getUint16Data"], [763, 14, 1, "", "getUint32Data"], [763, 14, 1, "", "getUint64Data"], [763, 14, 1, "", "getUint8Data"], [763, 16, 1, "", "name"], [763, 16, 1, "", "parameters"], [763, 14, 1, "", "setFp16Data"], [763, 14, 1, "", "setFp32Data"], [763, 14, 1, "", "setFp64Data"], [763, 14, 1, "", "setInt16Data"], [763, 14, 1, "", "setInt32Data"], [763, 14, 1, "", "setInt64Data"], [763, 14, 1, "", "setInt8Data"], [763, 14, 1, "", "setStringData"], [763, 14, 1, "", "setUint16Data"], [763, 14, 1, "", "setUint32Data"], [763, 14, 1, "", "setUint64Data"], [763, 14, 1, "", "setUint8Data"], [763, 16, 1, "", "shape"]], "amdinfer.InferenceTensor": [[763, 14, 1, "", "__init__"], [763, 16, 1, "", "parameters"]], "amdinfer.ModelMetadata": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "addInputTensor"], [763, 14, 1, "", "addOutputTensor"], [763, 14, 1, "", "getPlatform"], [763, 14, 1, "", "isReady"], [763, 16, 1, "", "name"], [763, 14, 1, "", "setReady"]], "amdinfer.NativeClient": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "hasHardware"], [763, 14, 1, "", "modelInfer"], [763, 14, 1, "", "modelList"], [763, 14, 1, "", "modelLoad"], [763, 14, 1, "", "modelMetadata"], [763, 14, 1, "", "modelReady"], [763, 14, 1, "", "modelUnload"], [763, 14, 1, "", "serverLive"], [763, 14, 1, "", "serverMetadata"], [763, 14, 1, "", "serverReady"], [763, 14, 1, "", "workerLoad"], [763, 14, 1, "", "workerUnload"]], "amdinfer.ParameterMap": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "empty"], [763, 14, 1, "", "erase"], [763, 14, 1, "", "getBool"], [763, 14, 1, "", "getFloat"], [763, 14, 1, "", "getInt"], [763, 14, 1, "", "getString"], [763, 14, 1, "", "has"], [763, 14, 1, "", "put"], [763, 14, 1, "", "size"]], "amdinfer.Server": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "enableRepositoryMonitoring"], [763, 14, 1, "", "setModelRepository"], [763, 14, 1, "", "startGrpc"], [763, 14, 1, "", "startHttp"], [763, 14, 1, "", "stopGrpc"], [763, 14, 1, "", "stopHttp"]], "amdinfer.ServerMetadata": [[763, 14, 1, "", "__init__"], [763, 16, 1, "", "extensions"], [763, 16, 1, "", "name"], [763, 16, 1, "", "version"]], "amdinfer.Tensor": [[763, 14, 1, "", "__init__"], [763, 16, 1, "", "datatype"], [763, 14, 1, "", "getSize"], [763, 16, 1, "", "name"], [763, 16, 1, "", "shape"]], "amdinfer.WebSocketClient": [[763, 14, 1, "", "__init__"], [763, 14, 1, "", "close"], [763, 14, 1, "", "hasHardware"], [763, 14, 1, "", "modelInfer"], [763, 14, 1, "", "modelInferWs"], [763, 14, 1, "", "modelList"], [763, 14, 1, "", "modelLoad"], [763, 14, 1, "", "modelMetadata"], [763, 14, 1, "", "modelReady"], [763, 14, 1, "", "modelRecv"], [763, 14, 1, "", "modelUnload"], [763, 14, 1, "", "serverLive"], [763, 14, 1, "", "serverMetadata"], [763, 14, 1, "", "serverReady"], [763, 14, 1, "", "workerLoad"], [763, 14, 1, "", "workerUnload"]]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:class", "3": "cpp:function", "4": "cpp:templateParam", "5": "cpp:functionParam", "6": "cpp:member", "7": "cpp:enum", "8": "cpp:enumerator", "9": "http:get", "10": "http:post", "11": "py:module", "12": "py:exception", "13": "py:class", "14": "py:method", "15": "py:attribute", "16": "py:property", "17": "py:function"}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "class", "C++ class"], "3": ["cpp", "function", "C++ function"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "member", "C++ member"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "enumerator", "C++ enumerator"], "9": ["http", "get", "HTTP get"], "10": ["http", "post", "HTTP post"], "11": ["py", "module", "Python module"], "12": ["py", "exception", "Python exception"], "13": ["py", "class", "Python class"], "14": ["py", "method", "Python method"], "15": ["py", "attribute", "Python attribute"], "16": ["py", "property", "Python property"], "17": ["py", "function", "Python function"]}, "titleterms": {"ak": [0, 92, 287, 466, 610], "introduct": [0, 754], "us": [0, 766], "amd": [0, 747, 752, 753, 755, 757, 765], "infer": [0, 48, 351, 353, 354, 356, 358, 359, 360, 361, 364, 368, 479, 749, 750, 752, 753, 755, 757, 765, 766], "server": [0, 70, 135, 146, 179, 258, 259, 260, 261, 262, 263, 264, 265, 502, 585, 636, 672, 746, 749, 750, 752, 753, 755, 757, 765], "architectur": 1, "overview": [1, 754], "ingest": 1, "api": [1, 108, 209, 210, 532, 533, 693, 694, 763], "http": [1, 164, 202, 394, 395, 398, 457, 471, 487, 525, 746], "rest": [1, 761, 767], "websocket": [1, 166, 208, 489, 531, 746], "grpc": [1, 163, 199, 365, 369, 372, 470, 478, 486, 522, 746], "c": [1, 746, 749], "batch": [1, 7, 138, 180, 181, 182, 183, 184, 185, 186, 187, 424, 427, 503, 504], "worker": [1, 105, 148, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 328, 417, 453, 475, 624, 695, 696, 697, 698, 699, 716, 717, 718, 719, 730, 731, 732, 733, 734, 735, 736, 737, 749, 750, 752, 761], "organ": 1, "lifecycl": 1, "improv": 1, "perform": [1, 760, 761, 771], "extern": 1, "process": 1, "xmodel": [1, 2, 106, 302, 625], "initi": [1, 442], "acquisit": 1, "run": [1, 4, 424, 427, 749, 750, 752, 765, 766, 771], "cleanup": 1, "share": 1, "state": 1, "observ": [1, 144, 245, 246, 247, 248, 249, 250, 251, 252, 356, 364, 572, 632], "log": [1, 245, 246, 568, 569, 757], "metric": [1, 247, 248, 570, 571, 758], "trace": [1, 251, 252, 574, 575, 769], "benchmark": [2, 4, 760], "kernel": [2, 663], "simul": 2, "changelog": 3, "unreleas": 3, "ad": 3, "chang": 3, "deprec": 3, "remov": 3, "fix": 3, "secur": 3, "0": 3, "3": 3, "2023": [3, 768], "02": 3, "01": 3, "2": 3, "2022": [3, 768], "08": 3, "05": 3, "1": 3, "command": 4, "line": 4, "interfac": [4, 56, 219, 220, 542, 543], "option": 4, "sub": 4, "attach": 4, "build": [4, 748, 755, 759, 763, 765, 770, 771], "name": 4, "argument": 4, "clean": [4, 752], "docker": [4, 747, 748, 765], "get": [4, 755, 759, 764, 765, 766, 770, 771], "instal": [4, 763], "list": [4, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "posit": 4, "make": [4, 748, 749, 750, 755], "preset": 4, "start": [4, 369, 372, 395, 398, 748, 749, 750, 755, 759, 764, 770], "test": [4, 765, 771], "up": [4, 752, 755, 759, 765, 770], "contribut": 5, "wai": 5, "idea": 5, "gener": 5, "rais": 5, "issu": 5, "triag": 5, "pull": 5, "request": [5, 748, 749, 750, 755, 761], "sign": 5, "your": 5, "work": 5, "style": 5, "guid": 5, "document": [5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 754], "header": [5, 749], "admonit": 5, "class": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 215, 216, 217, 220, 222, 224, 225, 227, 232, 234, 235, 236, 238, 239, 241, 249, 255, 258, 260, 263, 265, 272, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 468, 471, 472, 474, 475, 477, 480, 693], "hierarchi": [6, 303], "batcher": [8, 182, 183, 505, 506], "inherit": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 38, 45, 54, 55, 56, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 633, 643], "relationship": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 37, 38, 39, 45, 54, 55, 56, 58, 59, 60, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 631, 633, 636, 643], "deriv": [8, 9, 10, 11, 26, 55, 56, 60, 69, 73, 80, 89, 105], "type": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 38, 45, 54, 55, 56, 58, 60, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 633, 643], "buffer": [9, 139, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 511, 512], "templat": [10, 22, 23, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 107, 337, 338, 339, 340, 342, 362, 363, 392, 393, 400, 401, 402, 415, 416, 432, 434, 435, 439, 444, 633, 642, 643, 645, 646], "calldata": 10, "base": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 37, 38, 45, 54, 55, 66, 67, 68, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 633, 643, 747], "calldatabas": 11, "calldatahashardwar": 12, "calldatamodelinf": [13, 42, 371], "calldatamodellist": 14, "calldatamodelload": 15, "calldatamodelmetadata": 16, "calldatamodelreadi": 17, "calldatamodelunload": 18, "calldataserverl": 19, "calldataservermetadata": 20, "calldataserverreadi": 21, "calldataserverstream": 22, "calldataunari": 23, "calldataworkerload": 24, "calldataworkerunload": 25, "client": [26, 133, 140, 162, 163, 164, 165, 166, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 485, 521, 746, 749, 750, 752], "cppnativeapi": 27, "cpualloc": 28, "cpubuff": 29, "datatyp": [30, 341, 746], "drogonhttp": 31, "endpoint": [32, 59, 214, 215, 537, 538, 767], "grpcapiunari": 33, "grpcclient": [34, 35], "nest": [34, 35, 38, 39, 58, 59, 65, 66, 70, 77, 78, 631, 636], "grpcclientimpl": 35, "grpcserver": 36, "hardbatch": 37, "httpclient": [38, 39], "httpclientimpl": 39, "inferencerequest": [40, 43, 356, 364, 371, 429, 430], "inferencerequestbuild": [41, 42, 43, 44], "std": [44, 49, 52, 307, 320, 323, 341, 351, 353, 354, 358, 359, 360, 361, 403, 404, 405, 408, 419, 422, 446, 447, 455, 480], "shared_ptr": [44, 49, 52], "json": [44, 49, 52, 467], "valu": [44, 49, 52], "inferencerequestinput": [45, 47, 403], "inferencerequestinputbuild": [46, 47, 48, 49], "modelinferrequest_inferinputtensor": 48, "inferencerequestoutput": 50, "inferencerequestoutputbuild": [51, 52], "inferencerespons": [53, 405], "inferenceresponseoutput": [54, 404, 661], "inferencetensor": 55, "logger": [57, 154], "manag": [58, 59, 221, 222, 544, 545], "memoryalloc": [60, 157], "memorypool": [61, 368, 429], "modelmetadata": [62, 308], "modelmetadatatensor": [63, 680], "modelrepositori": [64, 65], "modelrepositoryimpl": 65, "nativecli": [66, 631], "parametermap": [67, 354, 360, 419, 422, 645], "requestparamet": [68, 353, 361, 646], "serializ": 69, "sharedst": 71, "softbatch": 72, "tensor": [73, 177, 239, 500, 562], "updatelisten": 74, "varttensorbuff": 75, "vectorbuff": 76, "websocketcli": [77, 78], "websocketclientimpl": 78, "workerinfo": 79, "bad_statu": 80, "connection_error": 81, "environment_not_set_error": 82, "external_error": 83, "file_not_found_error": 84, "file_read_error": 85, "drogonw": 86, "websocketserv": 87, "invalid_argu": 88, "runtime_error": 89, "threadpool": 90, "timer": [91, 283, 284, 606, 607], "aksdetect": 93, "aksdetectstream": 94, "cplusplu": 95, "echo": [96, 243, 292, 566, 615], "echomulti": 97, "invertimag": 98, "invertvideo": 99, "migraphxwork": 100, "ptzendnn": 101, "resnet50": [102, 298, 621, 749, 750], "resnet50stream": 103, "tfzendnn": 104, "map": [107, 351, 353, 354, 358, 359, 360, 361], "code": [108, 765], "full": [108, 693, 694], "namespac": [108, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 247, 249, 250, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 693], "struct": [108, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 693], "enum": [108, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 183, 215, 220, 222, 225, 250, 255, 301, 468, 472, 475, 693], "function": [108, 167, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 216, 217, 231, 232, 233, 240, 242, 243, 244, 245, 253, 254, 255, 256, 257, 258, 260, 262, 264, 266, 268, 270, 273, 275, 276, 279, 281, 282, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 468, 469, 470, 471, 472, 473, 474, 475, 693], "defin": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 161, 174, 246, 258, 266, 694], "buffers": 109, "amdinfer_enable_migraphx": 110, "amdinfer_build_test": 111, "amdinfer_enable_tfzendnn": 112, "amdinfer_enable_metr": 113, "amdinfer_enable_ptzendnn": 114, "amdinfer_enable_rest": 115, "amdinfer_enable_log": 116, "amdinfer_enable_trac": 117, "amdinfer_enable_ak": 118, "amdinfer_enable_http": 119, "amdinfer_enable_grpc": 120, "amdinfer_enable_v": 121, "calldata_impl": 122, "calldata_impl_end": 123, "amdinfer_log_warn": 124, "amdinfer_log_info": 125, "amdinfer_log_trac": 126, "amdinfer_if_log": 127, "amdinfer_log_error": 128, "amdinfer_log_debug": 129, "guard_amdinfer_core_paramet": 130, "directori": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 694], "includ": [131, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 747, 749, 750], "subdirectori": [131, 132, 136, 137, 141], "amdinf": [132, 137, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 415, 416, 417, 419, 420, 421, 422, 424, 427, 429, 430, 431, 432, 433, 434, 435, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 468, 469, 470, 471, 472, 473, 474, 475, 483, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 671, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 695, 696, 697, 698, 699, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 745], "file": [132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 694, 747], "core": [134, 141, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 746], "src": [136, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "memory_pool": [142, 223, 224, 225, 226, 227, 228, 229], "model": [143, 243, 244, 759, 764, 770, 771], "pre_post": [145, 253, 254, 255, 256, 257, 329, 347, 400, 401, 402, 439, 444, 472, 473, 715], "util": [147, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 319, 320, 321, 322, 323, 324, 336, 337, 338, 339, 340, 346, 415, 433, 437, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 474, 692, 710, 739], "batcherstatu": 149, "updatecommandtyp": [150, 156], "imageord": 151, "resizealgorithm": 152, "interfacetyp": 153, "loglevel": 155, "statu": [158, 250, 573], "workerstatu": 159, "hpp": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 201, 204, 207, 210, 213, 215, 220, 222, 224, 225, 227, 229, 232, 235, 236, 238, 241, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 261, 263, 265, 267, 269, 270, 272, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 289, 301, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 524, 527, 530, 533, 536, 538, 543, 545, 547, 548, 550, 552, 555, 558, 559, 561, 564, 569, 571, 572, 573, 575, 576, 577, 578, 579, 580, 582, 584, 586, 588, 590, 592, 593, 595, 597, 598, 600, 601, 603, 604, 605, 607, 608, 609, 612, 624], "content": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480], "definit": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "workspac": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "build_opt": [161, 484], "By": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 201, 204, 207, 210, 213, 215, 220, 222, 224, 225, 227, 229, 232, 235, 236, 238, 241, 246, 248, 249, 252, 253, 254, 257, 259, 261, 263, 265, 267, 269, 270, 272, 274, 275, 277, 278, 280, 281, 282, 284, 285, 286, 289, 301], "variabl": [161, 186, 226, 242, 244, 247, 249, 255, 271, 285, 286, 288, 289, 291, 294, 295, 297, 299, 301, 468, 472, 474, 475, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745], "nativ": [165, 205, 488, 528, 746], "data_typ": [167, 211, 490, 534], "typedef": [167, 173, 174, 175, 178, 181, 183, 210, 215, 222, 258, 260, 278, 284, 299, 468, 474, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694], "except": [168, 491, 746], "inference_request": [169, 216, 492, 539], "inference_respons": [170, 217, 493, 540], "inference_tensor": [171, 218, 494, 541], "mixin": [172, 495], "model_metadata": [173, 230, 496, 553], "paramet": [174, 233, 497, 556, 682, 686], "predict_api": [175, 234, 498, 557], "server_metadata": [176, 499], "declar": [178, 501], "cpp": [180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 199, 200, 202, 203, 205, 206, 208, 209, 211, 212, 214, 216, 217, 218, 219, 221, 223, 226, 228, 230, 231, 233, 234, 237, 239, 240, 242, 243, 244, 245, 247, 251, 258, 260, 262, 264, 266, 268, 271, 273, 276, 279, 283, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 503, 505, 507, 509, 511, 513, 515, 517, 519, 521, 522, 523, 525, 526, 528, 529, 531, 532, 534, 535, 537, 539, 540, 541, 542, 544, 546, 549, 551, 553, 554, 556, 557, 560, 562, 563, 565, 566, 567, 568, 570, 574, 581, 583, 585, 587, 589, 591, 594, 596, 599, 602, 606, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 625], "hard": [184, 185, 507, 508], "soft": [186, 187, 509, 510], "cpu": [190, 191, 513, 514, 771], "vart_tensor": [192, 193, 515, 516], "vart_tensor_buff": [194, 195, 517, 518], "vector_buff": [196, 197, 519, 520], "grpc_intern": [200, 201, 523, 524], "http_intern": [203, 204, 526, 527], "native_intern": [206, 207, 529, 530], "data_types_intern": [212, 213, 535, 536], "cpu_alloc": [223, 224, 546, 547], "memory_alloc": [225, 548], "pool": [226, 227, 549, 550], "vart_tensor_alloc": [228, 229, 551, 552], "model_repositori": [231, 232, 554, 555], "predict_api_intern": [235, 558], "request_contain": [236, 559], "shared_st": [237, 238, 560, 561], "worker_info": [240, 241, 563, 564], "main": [242, 412, 565], "echo_multi": [244, 293, 567, 616], "center_crop": [253, 576], "get_top_k": [254, 577], "image_preprocess": [255, 578], "resnet50_postprocess": [256, 579], "softmax": [257, 580], "grpc_server": [258, 259, 581, 582], "http_server": [260, 261, 583, 584], "server_intern": [263, 586], "websocket_serv": [264, 265, 587, 588], "base64": [266, 267, 589, 590], "compress": [268, 269, 591, 592], "contain": [270, 338, 340, 593, 748, 755], "ctpl": [271, 272, 594, 595], "exec": [273, 274, 346, 596, 597], "memori": [275, 598], "parse_env": [276, 277, 599, 600], "queue": [278, 601], "read_nth_lin": [279, 280, 602, 603], "string": [281, 307, 320, 323, 351, 353, 354, 358, 359, 360, 361, 408, 419, 422, 446, 447, 455, 604], "thread": [282, 605, 761], "trait": [285, 608], "version": [286, 609, 761], "aks_detect": [288, 289, 611, 612], "aks_detect_stream": [290, 613], "c_plus_plu": [291, 614], "invert_imag": [294, 617], "invert_video": [295, 618], "migraphx": [296, 619, 759], "pt_zendnn": [297, 620], "resnet50_stream": [299, 622], "tf_zendnn": [300, 623], "getwork": [304, 305, 306, 325, 344, 345, 406, 407, 418, 436, 438, 440, 452, 459, 460, 461, 462], "constructmessag": [307, 408], "const": [307, 321, 322, 338, 340, 341, 351, 353, 354, 356, 358, 359, 360, 361, 364, 368, 403, 404, 405, 408, 419, 422, 429, 447, 454, 455], "modelload": 309, "gethardwar": 310, "workerunload": 311, "workerload": 312, "modelunload": 313, "modellist": 314, "servermetadata": [315, 635], "modelinf": 316, "modelreadi": 317, "hashardwar": 318, "mindecodelength": 319, "base64decod": [320, 322], "base64encod": [321, 323], "char": [321, 322, 454], "size_t": [321, 322], "minencodelength": 324, "openmodel": 326, "getfunct": 327, "respond": 328, "centercrop": 329, "inferasyncorderedbatch": 330, "serverhasextens": 331, "initializeclientlog": 332, "inferasyncord": 333, "waituntilserverreadi": 334, "waituntilmodelreadi": 335, "zdecompress": 336, "containerproduct": [337, 340], "iter": [337, 339], "containersum": [338, 339], "oper": [341, 403, 404, 405], "ostream": [341, 403, 404, 405], "switchovertyp": 342, "detail": [343, 401, 402, 469, 473], "hash": 343, "gettopk": 347, "runinfer": 348, "mapprototomodelmetadata": 349, "mapparameterstoproto": 350, "mapprototoparamet": [351, 353, 354, 358, 359, 360, 361], "googl": [351, 353, 354, 358, 359, 360, 361, 476, 477], "protobuf": [351, 353, 354, 358, 359, 360, 361, 477], "inferparamet": [351, 353, 354, 358, 359, 360, 361], "mapresponsetoproto": 352, "mapmodelmetadatatoproto": 355, "maprequesttoproto": [356, 364], "modelinferrequest": [356, 364, 368], "mapprototorespons": 357, "overload": [362, 633], "gettensorcont": 363, "stop": [365, 394], "grpcunarycallback": 366, "getoutput": [367, 423, 426], "getrequest": [368, 429], "getinput": [370, 425, 428], "setcallback": [371, 430, 457], "createpostrequest": 373, "checkerror": 374, "addhead": 375, "creategetrequest": 376, "createinferencerequest": 377, "modelmetadatatojson": 378, "modelmetadatatensortojson": 379, "mapjsontoparamet": [380, 386, 390], "mapjsontomodelmetadata": 381, "mapjsontorespons": 382, "errorhttprespons": [383, 396], "mapparameterstojson": [384, 387, 389], "parsejson": [385, 397], "parserespons": [388, 399], "maprequesttojson": 391, "jsonvaluetotyp": [392, 393], "imagepreprocess": 400, "normal": 401, "nestedloop": 402, "initlogg": 409, "getlevel": 410, "getlogdirectori": 411, "signalcallbackhandl": [413, 414], "copi": [415, 416, 435], "todatatyp": 417, "parsemodel": [419, 422], "f": 419, "path": [419, 422], "mapprototoparameters2": [420, 421], "filesystem": 422, "logtracebuff": 431, "expandtyp": [432, 434], "autoexpandenvironmentvari": 433, "readnthlin": 437, "resnet50postprocess": 439, "termin": 441, "initializeserverlog": 443, "calcsoftmax": 444, "startswith": 445, "tolow": [446, 447], "endswith": 448, "addresstostr": 449, "split": 450, "islow": 451, "openlibrari": 453, "setthreadnam": [454, 455], "gettim": 456, "findfunc": 458, "100": 463, "85": 464, "88": 465, "vart": 481, "program": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "adddatatotensor": 626, "inferencerequestinputs": 627, "inferenceresponseoutputs": 628, "logopt": 629, "memoryhead": 630, "nativeclientimpl": 631, "requestcontain": 634, "serverimpl": 636, "setinputdata": 637, "setoutputdata": 638, "tensors": 639, "updatecommand": 640, "writedata": 641, "imagepreprocessopt": 642, "is_ani": 643, "detectrespons": 644, "less": [645, 646], "batchptr": [647, 648], "batchptrqueu": 649, "fp16": 650, "callback": [651, 683], "interfaceptr": 652, "inferencerequestptr": 653, "bufferrawptr": [654, 665], "requestcontainerptr": 655, "traceptr": 656, "inferenceresponsefutur": [657, 658], "stringmap": 659, "inferenceresponsepromiseptr": [660, 684], "bufferptr": [662, 664], "updatecommandqueu": [666, 679], "servercontext": 667, "serverbuild": 668, "serverasyncresponsewrit": 669, "servercompletionqueu": 670, "asyncservic": 671, "statuscod": 673, "inputbuild": 674, "requestbuild": 675, "outputbuild": 676, "drogoncallback": [677, 678], "parametermapptr": 681, "requestparametersptr": 685, "inferencerequestptrqueu": 687, "blockingqueu": 688, "bufferptrsqueueptr": 689, "bufferptrsqueu": 690, "vidprop": 691, "timepoint": 692, "kimagechannel": 695, "kimages": [696, 733], "kimageheight": 697, "kimagewidth": 698, "kakddetectresponses": 699, "kdefaulthttpport": 700, "kdefaultdrogonthread": 701, "kmaxmodelnames": 702, "kdefaultgrpcport": 703, "kmaxgrpcmessages": 704, "kmaxclientbodys": 705, "koutputlength": [706, 711, 726], "kinputlength": [707, 714, 727], "kinputtensor": [708, 712, 725], "koutputtensor": [709, 713, 724], "kthreadpoollength": 710, "kdefaultimages": 715, "kmaximageheight": 716, "kmaximagechannel": 717, "kmaximagewidth": 718, "kmaxurllength": 719, "usr_interrupt": 720, "kpercentile90": 721, "kpercentile99": 722, "kpercentile50": 723, "knumtracedata": 728, "kdefaultcpublocks": 729, "kresnetimages": 730, "kresnetimagechannel": 731, "kresnetoutputclass": 732, "kimagewidthstr": 734, "kboxheight": 735, "kboxheightstr": 736, "kresnetclassif": 737, "kdefaulttimeout": 738, "is_any_v": 739, "kamdinferversionmajor": 740, "kamdinferversionlabel": 741, "kamdinferversionpatch": 742, "kamdinferversionminor": 743, "kamdinfervers": 744, "knumbufferauto": 745, "predict": 746, "depend": 747, "imag": [747, 748, 749, 750, 755, 759, 764, 765, 770, 771], "ubuntu": 747, "focal": 747, "repositori": [747, 764], "ppa": 747, "pypi": 747, "github": 747, "other": 747, "xilinx": 747, "download": [747, 771], "deploy": [748, 764], "push": 748, "registri": 748, "prepar": [748, 749, 750, 764], "creat": [749, 750, 752], "object": [749, 750, 752], "load": [749, 750, 752], "construct": [749, 750], "an": [749, 750, 755, 759, 770, 771], "python": [750, 752, 763], "modul": 750, "glossari": 751, "hello": 752, "world": 752, "import": 752, "librari": [752, 763, 766], "our": 752, "i": 752, "alreadi": 752, "valid": 752, "respons": 752, "next": [752, 765], "step": [752, 765], "featur": 754, "support": 754, "kserv": 755, "set": [755, 759, 765, 770], "kubernet": 755, "servic": 755, "serv": 755, "runtim": 755, "custom": 755, "debug": 755, "drogon": 757, "quickstart": [758, 764, 765, 766, 769], "gpu": 759, "host": [759, 765, 770], "asset": [759, 770, 771], "wrk": 760, "factor": 761, "hardwar": 761, "compil": [761, 765], "right": 761, "parallel": 761, "send": 761, "duplic": 761, "platform": 762, "wheel": 763, "prerequisit": [764, 765], "develop": 765, "artifact": 765, "exampl": 766, "roadmap": 768, "q1": 768, "q2": 768, "q3": 768, "q4": 768, "futur": 768, "fpga": 770, "viti": 770, "ai": 770, "softwar": 770, "shell": 770, "xclbin": 770, "zendnn": 771, "packag": 771, "freez": 771, "pytorch": 771, "tune": 771}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"AKS": [[0, "aks"]], "Introduction to AKS": [[0, "introduction-to-aks"]], "Using AKS in AMD Inference Server": [[0, "using-aks-in-amd-inference-server"]], "Architecture": [[1, "architecture"]], "Overview": [[1, "overview"]], "Ingestion": [[1, "ingestion"]], "API": [[1, "api"], [763, "module-amdinfer"]], "HTTP/REST and WebSocket": [[1, "http-rest-and-websocket"]], "gRPC": [[1, "grpc"], [746, "grpc"]], "C++ API": [[1, "c-api"]], "Batching": [[1, "batching"]], "Workers": [[1, "workers"]], "Organization and Lifecycle": [[1, "organization-and-lifecycle"]], "Improving Performance": [[1, "improving-performance"]], "External Processing": [[1, "external-processing"]], "XModel": [[1, "xmodel"]], "Initialization": [[1, "initialization"]], "Acquisition": [[1, "acquisition"]], "Run": [[1, "run"]], "Cleanup": [[1, "cleanup"]], "Shared State": [[1, "shared-state"]], "Observation": [[1, "observation"]], "Logging": [[1, "logging"]], "Metrics": [[1, "metrics"], [758, "metrics"]], "Tracing": [[1, "tracing"], [769, "tracing"]], "Benchmarking": [[2, "benchmarking"]], "XModel Benchmarking": [[2, "xmodel-benchmarking"]], "Kernel Simulation": [[2, "kernel-simulation"]], "Changelog": [[3, "id1"]], "Unreleased": [[3, "unreleased"]], "Added": [[3, "added"], [3, "id3"], [3, "id9"], [3, "id13"]], "Changed": [[3, "changed"], [3, "id4"], [3, "id10"]], "Deprecated": [[3, "deprecated"], [3, "id5"]], "Removed": [[3, "removed"], [3, "id6"]], "Fixed": [[3, "fixed"], [3, "id7"], [3, "id11"]], "Security": [[3, "security"]], "0.3.0 - 2023-02-01": [[3, "id2"]], "0.2.0 - 2022-08-05": [[3, "id8"]], "0.1.0 - 2022-02-08": [[3, "id12"]], "Command-Line Interface": [[4, "command-line-interface"]], "Commands": [[4, "commands"]], "Options": [[4, "options"], [4, "options_repeat1"], [4, "options_repeat2"], [4, "options_repeat3"], [4, "options_repeat4"], [4, "options_repeat5"], [4, "options_repeat6"], [4, "options_repeat7"], [4, "options_repeat8"], [4, "options_repeat9"], [4, "options_repeat10"], [4, "options_repeat11"]], "Sub-commands": [[4, "Sub-commands"]], "attach": [[4, "attach"]], "benchmark": [[4, "benchmark"]], "build": [[4, "build"]], "Named Arguments": [[4, "named-arguments"]], "clean": [[4, "clean"]], "dockerize": [[4, "dockerize"]], "get": [[4, "get"]], "install": [[4, "install"]], "list": [[4, "list"]], "Positional Arguments": [[4, "positional-arguments"]], "make": [[4, "make"]], "run": [[4, "run"]], "Presets": [[4, "presets"]], "start": [[4, "start"]], "test": [[4, "test"]], "up": [[4, "up"]], "Contributing": [[5, "contributing"]], "Ways to contribute": [[5, "ways-to-contribute"]], "Idea generation": [[5, "idea-generation"]], "Raise issues": [[5, "raise-issues"]], "Triage": [[5, "triage"]], "Raise pull requests": [[5, "raise-pull-requests"]], "Sign your work": [[5, "sign-your-work"]], "Style guide": [[5, "style-guide"]], "Documentation": [[5, "documentation"]], "Headers": [[5, "headers"]], "Admonitions": [[5, "admonitions"]], "Class Hierarchy": [[6, "class-hierarchy"]], "Class Batch": [[7, "class-batch"]], "Class Documentation": [[7, "class-documentation"], [8, "class-documentation"], [9, "class-documentation"], [10, "class-documentation"], [11, "class-documentation"], [12, "class-documentation"], [13, "class-documentation"], [14, "class-documentation"], [15, "class-documentation"], [16, "class-documentation"], [17, "class-documentation"], [18, "class-documentation"], [19, "class-documentation"], [20, "class-documentation"], [21, "class-documentation"], [22, "class-documentation"], [23, "class-documentation"], [24, "class-documentation"], [25, "class-documentation"], [26, "class-documentation"], [27, "class-documentation"], [28, "class-documentation"], [29, "class-documentation"], [30, "class-documentation"], [31, "class-documentation"], [32, "class-documentation"], [33, "class-documentation"], [34, "class-documentation"], [35, "class-documentation"], [36, "class-documentation"], [37, "class-documentation"], [38, "class-documentation"], [39, "class-documentation"], [40, "class-documentation"], [41, "class-documentation"], [42, "class-documentation"], [43, "class-documentation"], [44, "class-documentation"], [45, "class-documentation"], [46, "class-documentation"], [47, "class-documentation"], [48, "class-documentation"], [49, "class-documentation"], [50, "class-documentation"], [51, "class-documentation"], [52, "class-documentation"], [53, "class-documentation"], [54, "class-documentation"], [55, "class-documentation"], [56, "class-documentation"], [57, "class-documentation"], [58, "class-documentation"], [59, "class-documentation"], [60, "class-documentation"], [61, "class-documentation"], [62, "class-documentation"], [63, "class-documentation"], [64, "class-documentation"], [65, "class-documentation"], [66, "class-documentation"], [67, "class-documentation"], [68, "class-documentation"], [69, "class-documentation"], [70, "class-documentation"], [71, "class-documentation"], [72, "class-documentation"], [73, "class-documentation"], [74, "class-documentation"], [75, "class-documentation"], [76, "class-documentation"], [77, "class-documentation"], [78, "class-documentation"], [79, "class-documentation"], [80, "class-documentation"], [81, "class-documentation"], [82, "class-documentation"], [83, "class-documentation"], [84, "class-documentation"], [85, "class-documentation"], [86, "class-documentation"], [87, "class-documentation"], [88, "class-documentation"], [89, "class-documentation"], [90, "class-documentation"], [91, "class-documentation"], [92, "class-documentation"], [93, "class-documentation"], [94, "class-documentation"], [95, "class-documentation"], [96, "class-documentation"], [97, "class-documentation"], [98, "class-documentation"], [99, "class-documentation"], [100, "class-documentation"], [101, "class-documentation"], [102, "class-documentation"], [103, "class-documentation"], [104, "class-documentation"], [105, "class-documentation"], [106, "class-documentation"], [107, "class-documentation"]], "Class Batcher": [[8, "class-batcher"]], "Inheritance Relationships": [[8, "inheritance-relationships"], [9, "inheritance-relationships"], [10, "inheritance-relationships"], [11, "inheritance-relationships"], [12, "inheritance-relationships"], [13, "inheritance-relationships"], [14, "inheritance-relationships"], [15, "inheritance-relationships"], [16, "inheritance-relationships"], [17, "inheritance-relationships"], [18, "inheritance-relationships"], [19, "inheritance-relationships"], [20, "inheritance-relationships"], [21, "inheritance-relationships"], [22, "inheritance-relationships"], [23, "inheritance-relationships"], [24, "inheritance-relationships"], [25, "inheritance-relationships"], [26, "inheritance-relationships"], [27, "inheritance-relationships"], [28, "inheritance-relationships"], [29, "inheritance-relationships"], [31, "inheritance-relationships"], [33, "inheritance-relationships"], [34, "inheritance-relationships"], [37, "inheritance-relationships"], [38, "inheritance-relationships"], [45, "inheritance-relationships"], [54, "inheritance-relationships"], [55, "inheritance-relationships"], [56, "inheritance-relationships"], [60, "inheritance-relationships"], [66, "inheritance-relationships"], [67, "inheritance-relationships"], [68, "inheritance-relationships"], [69, "inheritance-relationships"], [72, "inheritance-relationships"], [73, "inheritance-relationships"], [74, "inheritance-relationships"], [75, "inheritance-relationships"], [76, "inheritance-relationships"], [77, "inheritance-relationships"], [80, "inheritance-relationships"], [81, "inheritance-relationships"], [82, "inheritance-relationships"], [83, "inheritance-relationships"], [84, "inheritance-relationships"], [85, "inheritance-relationships"], [86, "inheritance-relationships"], [87, "inheritance-relationships"], [88, "inheritance-relationships"], [89, "inheritance-relationships"], [92, "inheritance-relationships"], [93, "inheritance-relationships"], [94, "inheritance-relationships"], [95, "inheritance-relationships"], [96, "inheritance-relationships"], [97, "inheritance-relationships"], [98, "inheritance-relationships"], [99, "inheritance-relationships"], [100, "inheritance-relationships"], [101, "inheritance-relationships"], [102, "inheritance-relationships"], [103, "inheritance-relationships"], [104, "inheritance-relationships"], [105, "inheritance-relationships"], [106, "inheritance-relationships"], [633, "inheritance-relationships"], [643, "inheritance-relationships"]], "Derived Types": [[8, "derived-types"], [9, "derived-types"], [10, "derived-types"], [11, "derived-types"], [26, "derived-types"], [55, "derived-types"], [56, "derived-types"], [69, "derived-types"], [89, "derived-types"], [105, "derived-types"]], "Class Buffer": [[9, "class-buffer"]], "Template Class CallData": [[10, "template-class-calldata"]], "Base Type": [[10, "base-type"], [12, "base-type"], [13, "base-type"], [14, "base-type"], [15, "base-type"], [16, "base-type"], [17, "base-type"], [18, "base-type"], [19, "base-type"], [20, "base-type"], [21, "base-type"], [22, "base-type"], [23, "base-type"], [24, "base-type"], [25, "base-type"], [27, "base-type"], [28, "base-type"], [29, "base-type"], [31, "base-type"], [33, "base-type"], [34, "base-type"], [37, "base-type"], [38, "base-type"], [45, "base-type"], [54, "base-type"], [55, "base-type"], [66, "base-type"], [67, "base-type"], [68, "base-type"], [72, "base-type"], [73, "base-type"], [74, "base-type"], [75, "base-type"], [76, "base-type"], [77, "base-type"], [80, "base-type"], [81, "base-type"], [82, "base-type"], [83, "base-type"], [84, "base-type"], [85, "base-type"], [86, "base-type"], [87, "base-type"], [88, "base-type"], [89, "base-type"], [92, "base-type"], [93, "base-type"], [94, "base-type"], [95, "base-type"], [96, "base-type"], [97, "base-type"], [98, "base-type"], [99, "base-type"], [100, "base-type"], [101, "base-type"], [102, "base-type"], [103, "base-type"], [104, "base-type"], [106, "base-type"], [633, "base-type"], [643, "base-type"]], "Class CallDataBase": [[11, "class-calldatabase"]], "Class CallDataHasHardware": [[12, "class-calldatahashardware"]], "Class CallDataModelInfer": [[13, "class-calldatamodelinfer"]], "Class CallDataModelList": [[14, "class-calldatamodellist"]], "Class CallDataModelLoad": [[15, "class-calldatamodelload"]], "Class CallDataModelMetadata": [[16, "class-calldatamodelmetadata"]], "Class CallDataModelReady": [[17, "class-calldatamodelready"]], "Class CallDataModelUnload": [[18, "class-calldatamodelunload"]], "Class CallDataServerLive": [[19, "class-calldataserverlive"]], "Class CallDataServerMetadata": [[20, "class-calldataservermetadata"]], "Class CallDataServerReady": [[21, "class-calldataserverready"]], "Template Class CallDataServerStream": [[22, "template-class-calldataserverstream"]], "Template Class CallDataUnary": [[23, "template-class-calldataunary"]], "Class CallDataWorkerLoad": [[24, "class-calldataworkerload"]], "Class CallDataWorkerUnload": [[25, "class-calldataworkerunload"]], "Class Client": [[26, "class-client"]], "Class CppNativeApi": [[27, "class-cppnativeapi"]], "Class CpuAllocator": [[28, "class-cpuallocator"]], "Class CpuBuffer": [[29, "class-cpubuffer"]], "Class DataType": [[30, "class-datatype"]], "Class DrogonHttp": [[31, "class-drogonhttp"]], "Class Endpoints": [[32, "class-endpoints"]], "Class GrpcApiUnary": [[33, "class-grpcapiunary"]], "Class GrpcClient": [[34, "class-grpcclient"]], "Nested Relationships": [[34, "nested-relationships"], [35, "nested-relationships"], [38, "nested-relationships"], [39, "nested-relationships"], [58, "nested-relationships"], [59, "nested-relationships"], [65, "nested-relationships"], [66, "nested-relationships"], [70, "nested-relationships"], [77, "nested-relationships"], [78, "nested-relationships"], [631, "nested-relationships"], [636, "nested-relationships"]], "Nested Types": [[34, "nested-types"], [38, "nested-types"], [58, "nested-types"], [66, "nested-types"], [70, "nested-types"], [77, "nested-types"]], "Class GrpcClient::GrpcClientImpl": [[35, "class-grpcclient-grpcclientimpl"]], "Class GrpcServer": [[36, "class-grpcserver"]], "Class HardBatcher": [[37, "class-hardbatcher"]], "Class HttpClient": [[38, "class-httpclient"]], "Class HttpClient::HttpClientImpl": [[39, "class-httpclient-httpclientimpl"]], "Class InferenceRequest": [[40, "class-inferencerequest"]], "Template Class InferenceRequestBuilder": [[41, "template-class-inferencerequestbuilder"]], "Template Class InferenceRequestBuilder< CallDataModelInfer * >": [[42, "template-class-inferencerequestbuilder-calldatamodelinfer"]], "Template Class InferenceRequestBuilder< InferenceRequest >": [[43, "template-class-inferencerequestbuilder-inferencerequest"]], "Template Class InferenceRequestBuilder< std::shared_ptr< Json::Value > >": [[44, "template-class-inferencerequestbuilder-std-shared-ptr-json-value"]], "Class InferenceRequestInput": [[45, "class-inferencerequestinput"]], "Template Class InferenceRequestInputBuilder": [[46, "template-class-inferencerequestinputbuilder"]], "Template Class InferenceRequestInputBuilder< InferenceRequestInput >": [[47, "template-class-inferencerequestinputbuilder-inferencerequestinput"]], "Template Class InferenceRequestInputBuilder< inference::ModelInferRequest_InferInputTensor >": [[48, "template-class-inferencerequestinputbuilder-inference-modelinferrequest-inferinputtensor"]], "Template Class InferenceRequestInputBuilder< std::shared_ptr< Json::Value > >": [[49, "template-class-inferencerequestinputbuilder-std-shared-ptr-json-value"]], "Class InferenceRequestOutput": [[50, "class-inferencerequestoutput"]], "Template Class InferenceRequestOutputBuilder": [[51, "template-class-inferencerequestoutputbuilder"]], "Template Class InferenceRequestOutputBuilder< std::shared_ptr< Json::Value > >": [[52, "template-class-inferencerequestoutputbuilder-std-shared-ptr-json-value"]], "Class InferenceResponse": [[53, "class-inferenceresponse"]], "Class InferenceResponseOutput": [[54, "class-inferenceresponseoutput"]], "Class InferenceTensor": [[55, "class-inferencetensor"]], "Class Interface": [[56, "class-interface"]], "Class Logger": [[57, "class-logger"]], "Class Manager": [[58, "class-manager"]], "Class Manager::Endpoints": [[59, "class-manager-endpoints"]], "Class MemoryAllocator": [[60, "class-memoryallocator"]], "Derived Type": [[60, "derived-type"], [73, "derived-type"], [80, "derived-type"]], "Class MemoryPool": [[61, "class-memorypool"]], "Class ModelMetadata": [[62, "class-modelmetadata"]], "Class ModelMetadataTensor": [[63, "class-modelmetadatatensor"]], "Class ModelRepository": [[64, "class-modelrepository"]], "Class ModelRepository::ModelRepositoryImpl": [[65, "class-modelrepository-modelrepositoryimpl"]], "Class NativeClient": [[66, "class-nativeclient"]], "Class ParameterMap": [[67, "class-parametermap"]], "Class RequestParameters": [[68, "class-requestparameters"]], "Class Serializable": [[69, "class-serializable"]], "Class Server": [[70, "class-server"]], "Class SharedState": [[71, "class-sharedstate"]], "Class SoftBatcher": [[72, "class-softbatcher"]], "Class Tensor": [[73, "class-tensor"]], "Class UpdateListener": [[74, "class-updatelistener"]], "Class VartTensorBuffer": [[75, "class-varttensorbuffer"]], "Class VectorBuffer": [[76, "class-vectorbuffer"]], "Class WebSocketClient": [[77, "class-websocketclient"]], "Class WebSocketClient::WebSocketClientImpl": [[78, "class-websocketclient-websocketclientimpl"]], "Class WorkerInfo": [[79, "class-workerinfo"]], "Class bad_status": [[80, "class-bad-status"]], "Class connection_error": [[81, "class-connection-error"]], "Class environment_not_set_error": [[82, "class-environment-not-set-error"]], "Class external_error": [[83, "class-external-error"]], "Class file_not_found_error": [[84, "class-file-not-found-error"]], "Class file_read_error": [[85, "class-file-read-error"]], "Class DrogonWs": [[86, "class-drogonws"]], "Class WebsocketServer": [[87, "class-websocketserver"]], "Class invalid_argument": [[88, "class-invalid-argument"]], "Class runtime_error": [[89, "class-runtime-error"]], "Class ThreadPool": [[90, "class-threadpool"]], "Class Timer": [[91, "class-timer"]], "Class Aks": [[92, "class-aks"]], "Class AksDetect": [[93, "class-aksdetect"]], "Class AksDetectStream": [[94, "class-aksdetectstream"]], "Class CPlusPlus": [[95, "class-cplusplus"]], "Class Echo": [[96, "class-echo"]], "Class EchoMulti": [[97, "class-echomulti"]], "Class InvertImage": [[98, "class-invertimage"]], "Class InvertVideo": [[99, "class-invertvideo"]], "Class MIGraphXWorker": [[100, "class-migraphxworker"]], "Class PtZendnn": [[101, "class-ptzendnn"]], "Class ResNet50": [[102, "class-resnet50"]], "Class ResNet50Stream": [[103, "class-resnet50stream"]], "Class TfZendnn": [[104, "class-tfzendnn"]], "Class Worker": [[105, "class-worker"]], "Class XModel": [[106, "class-xmodel"]], "Template Class Map": [[107, "template-class-map"]], "Code Documentation": [[108, "code-documentation"]], "Full API": [[108, "full-api"], [693, "full-api"], [694, "full-api"]], "Namespaces": [[108, "namespaces"], [162, "namespaces"], [163, "namespaces"], [164, "namespaces"], [165, "namespaces"], [166, "namespaces"], [167, "namespaces"], [168, "namespaces"], [169, "namespaces"], [170, "namespaces"], [171, "namespaces"], [172, "namespaces"], [173, "namespaces"], [174, "namespaces"], [175, "namespaces"], [176, "namespaces"], [177, "namespaces"], [178, "namespaces"], [179, "namespaces"], [180, "namespaces"], [181, "namespaces"], [182, "namespaces"], [183, "namespaces"], [184, "namespaces"], [185, "namespaces"], [186, "namespaces"], [187, "namespaces"], [188, "namespaces"], [189, "namespaces"], [190, "namespaces"], [191, "namespaces"], [192, "namespaces"], [193, "namespaces"], [194, "namespaces"], [195, "namespaces"], [196, "namespaces"], [197, "namespaces"], [198, "namespaces"], [199, "namespaces"], [200, "namespaces"], [201, "namespaces"], [202, "namespaces"], [203, "namespaces"], [204, "namespaces"], [205, "namespaces"], [206, "namespaces"], [207, "namespaces"], [208, "namespaces"], [209, "namespaces"], [210, "namespaces"], [211, "namespaces"], [213, "namespaces"], [214, "namespaces"], [215, "namespaces"], [216, "namespaces"], [217, "namespaces"], [218, "namespaces"], [219, "namespaces"], [220, "namespaces"], [221, "namespaces"], [222, "namespaces"], [223, "namespaces"], [224, "namespaces"], [225, "namespaces"], [226, "namespaces"], [227, "namespaces"], [228, "namespaces"], [230, "namespaces"], [231, "namespaces"], [232, "namespaces"], [233, "namespaces"], [234, "namespaces"], [235, "namespaces"], [236, "namespaces"], [237, "namespaces"], [238, "namespaces"], [239, "namespaces"], [240, "namespaces"], [241, "namespaces"], [245, "namespaces"], [247, "namespaces"], [249, "namespaces"], [250, "namespaces"], [253, "namespaces"], [254, "namespaces"], [255, "namespaces"], [256, "namespaces"], [257, "namespaces"], [258, "namespaces"], [260, "namespaces"], [261, "namespaces"], [262, "namespaces"], [263, "namespaces"], [264, "namespaces"], [265, "namespaces"], [266, "namespaces"], [267, "namespaces"], [268, "namespaces"], [269, "namespaces"], [270, "namespaces"], [271, "namespaces"], [272, "namespaces"], [273, "namespaces"], [274, "namespaces"], [275, "namespaces"], [276, "namespaces"], [277, "namespaces"], [278, "namespaces"], [279, "namespaces"], [280, "namespaces"], [281, "namespaces"], [282, "namespaces"], [283, "namespaces"], [284, "namespaces"], [285, "namespaces"], [287, "namespaces"], [288, "namespaces"], [289, "namespaces"], [290, "namespaces"], [291, "namespaces"], [292, "namespaces"], [293, "namespaces"], [294, "namespaces"], [295, "namespaces"], [296, "namespaces"], [297, "namespaces"], [298, "namespaces"], [299, "namespaces"], [300, "namespaces"], [301, "namespaces"], [302, "namespaces"], [468, "namespaces"], [472, "namespaces"], [476, "namespaces"], [693, "namespaces"]], "Classes and Structs": [[108, "classes-and-structs"], [693, "classes-and-structs"]], "Enums": [[108, "enums"], [183, "enums"], [215, "enums"], [220, "enums"], [222, "enums"], [225, "enums"], [250, "enums"], [255, "enums"], [301, "enums"], [468, "enums"], [472, "enums"], [475, "enums"], [693, "enums"]], "Functions": [[108, "functions"], [167, "functions"], [198, "functions"], [199, "functions"], [200, "functions"], [201, "functions"], [202, "functions"], [203, "functions"], [204, "functions"], [205, "functions"], [209, "functions"], [211, "functions"], [216, "functions"], [217, "functions"], [231, "functions"], [232, "functions"], [233, "functions"], [240, "functions"], [242, "functions"], [243, "functions"], [244, "functions"], [245, "functions"], [253, "functions"], [254, "functions"], [255, "functions"], [256, "functions"], [257, "functions"], [258, "functions"], [260, "functions"], [262, "functions"], [264, "functions"], [266, "functions"], [268, "functions"], [270, "functions"], [273, "functions"], [275, "functions"], [276, "functions"], [279, "functions"], [281, "functions"], [282, "functions"], [283, "functions"], [287, "functions"], [288, "functions"], [290, "functions"], [291, "functions"], [292, "functions"], [293, "functions"], [294, "functions"], [295, "functions"], [296, "functions"], [297, "functions"], [298, "functions"], [299, "functions"], [300, "functions"], [302, "functions"], [468, "functions"], [469, "functions"], [470, "functions"], [471, "functions"], [472, "functions"], [473, "functions"], [474, "functions"], [475, "functions"], [693, "functions"]], "Define BUFFERSIZE": [[109, "define-buffersize"]], "Define Documentation": [[109, "define-documentation"], [110, "define-documentation"], [111, "define-documentation"], [112, "define-documentation"], [113, "define-documentation"], [114, "define-documentation"], [115, "define-documentation"], [116, "define-documentation"], [117, "define-documentation"], [118, "define-documentation"], [119, "define-documentation"], [120, "define-documentation"], [121, "define-documentation"], [122, "define-documentation"], [123, "define-documentation"], [124, "define-documentation"], [125, "define-documentation"], [126, "define-documentation"], [127, "define-documentation"], [128, "define-documentation"], [129, "define-documentation"], [130, "define-documentation"]], "Define AMDINFER_ENABLE_MIGRAPHX": [[110, "define-amdinfer-enable-migraphx"]], "Define AMDINFER_BUILD_TESTING": [[111, "define-amdinfer-build-testing"]], "Define AMDINFER_ENABLE_TFZENDNN": [[112, "define-amdinfer-enable-tfzendnn"]], "Define AMDINFER_ENABLE_METRICS": [[113, "define-amdinfer-enable-metrics"]], "Define AMDINFER_ENABLE_PTZENDNN": [[114, "define-amdinfer-enable-ptzendnn"]], "Define AMDINFER_ENABLE_REST": [[115, "define-amdinfer-enable-rest"]], "Define AMDINFER_ENABLE_LOGGING": [[116, "define-amdinfer-enable-logging"]], "Define AMDINFER_ENABLE_TRACING": [[117, "define-amdinfer-enable-tracing"]], "Define AMDINFER_ENABLE_AKS": [[118, "define-amdinfer-enable-aks"]], "Define AMDINFER_ENABLE_HTTP": [[119, "define-amdinfer-enable-http"]], "Define AMDINFER_ENABLE_GRPC": [[120, "define-amdinfer-enable-grpc"]], "Define AMDINFER_ENABLE_VITIS": [[121, "define-amdinfer-enable-vitis"]], "Define CALLDATA_IMPL": [[122, "define-calldata-impl"]], "Define CALLDATA_IMPL_END": [[123, "define-calldata-impl-end"]], "Define AMDINFER_LOG_WARN": [[124, "define-amdinfer-log-warn"]], "Define AMDINFER_LOG_INFO": [[125, "define-amdinfer-log-info"]], "Define AMDINFER_LOG_TRACE": [[126, "define-amdinfer-log-trace"]], "Define AMDINFER_IF_LOGGING": [[127, "define-amdinfer-if-logging"]], "Define AMDINFER_LOG_ERROR": [[128, "define-amdinfer-log-error"]], "Define AMDINFER_LOG_DEBUG": [[129, "define-amdinfer-log-debug"]], "Define GUARD_AMDINFER_CORE_PARAMETERS": [[130, "define-guard-amdinfer-core-parameters"]], "Directory include": [[131, "directory-include"]], "Subdirectories": [[131, "subdirectories"], [132, "subdirectories"], [136, "subdirectories"], [137, "subdirectories"], [141, "subdirectories"]], "Directory amdinfer": [[132, "directory-amdinfer"], [137, "directory-amdinfer"]], "Files": [[132, "files"], [133, "files"], [134, "files"], [135, "files"], [137, "files"], [138, "files"], [139, "files"], [140, "files"], [141, "files"], [142, "files"], [143, "files"], [144, "files"], [145, "files"], [146, "files"], [147, "files"], [148, "files"], [694, "files"]], "Directory clients": [[133, "directory-clients"], [140, "directory-clients"]], "Directory core": [[134, "directory-core"], [141, "directory-core"]], "Directory servers": [[135, "directory-servers"], [146, "directory-servers"]], "Directory src": [[136, "directory-src"]], "Directory batching": [[138, "directory-batching"]], "Directory buffers": [[139, "directory-buffers"]], "Directory memory_pool": [[142, "directory-memory-pool"]], "Directory models": [[143, "directory-models"]], "Directory observation": [[144, "directory-observation"]], "Directory pre_post": [[145, "directory-pre-post"]], "Directory util": [[147, "directory-util"]], "Directory workers": [[148, "directory-workers"]], "Enum BatcherStatus": [[149, "enum-batcherstatus"]], "Enum Documentation": [[149, "enum-documentation"], [150, "enum-documentation"], [151, "enum-documentation"], [152, "enum-documentation"], [153, "enum-documentation"], [154, "enum-documentation"], [155, "enum-documentation"], [156, "enum-documentation"], [157, "enum-documentation"], [158, "enum-documentation"], [159, "enum-documentation"]], "Enum UpdateCommandType": [[150, "enum-updatecommandtype"], [156, "enum-updatecommandtype"]], "Enum ImageOrder": [[151, "enum-imageorder"]], "Enum ResizeAlgorithm": [[152, "enum-resizealgorithm"]], "Enum InterfaceType": [[153, "enum-interfacetype"]], "Enum Loggers": [[154, "enum-loggers"]], "Enum LogLevel": [[155, "enum-loglevel"]], "Enum MemoryAllocators": [[157, "enum-memoryallocators"]], "Enum Status": [[158, "enum-status"]], "Enum WorkerStatus": [[159, "enum-workerstatus"]], "File amdinfer.hpp": [[160, "file-amdinfer-hpp"]], "Contents": [[160, "contents"], [161, "contents"], [162, "contents"], [163, "contents"], [164, "contents"], [165, "contents"], [166, "contents"], [167, "contents"], [168, "contents"], [169, "contents"], [170, "contents"], [171, "contents"], [172, "contents"], [173, "contents"], [174, "contents"], [175, "contents"], [176, "contents"], [177, "contents"], [178, "contents"], [179, "contents"], [180, "contents"], [181, "contents"], [182, "contents"], [183, "contents"], [184, "contents"], [185, "contents"], [186, "contents"], [187, "contents"], [188, "contents"], [189, "contents"], [190, "contents"], [191, "contents"], [192, "contents"], [193, "contents"], [194, "contents"], [195, "contents"], [196, "contents"], [197, "contents"], [198, "contents"], [199, "contents"], [200, "contents"], [201, "contents"], [202, "contents"], [203, "contents"], [204, "contents"], [205, "contents"], [206, "contents"], [207, "contents"], [208, "contents"], [209, "contents"], [210, "contents"], [211, "contents"], [212, "contents"], [213, "contents"], [214, "contents"], [215, "contents"], [216, "contents"], [217, "contents"], [218, "contents"], [219, "contents"], [220, "contents"], [221, "contents"], [222, "contents"], [223, "contents"], [224, "contents"], [225, "contents"], [226, "contents"], [227, "contents"], [228, "contents"], [229, "contents"], [230, "contents"], [231, "contents"], [232, "contents"], [233, "contents"], [234, "contents"], [235, "contents"], [236, "contents"], [237, "contents"], [238, "contents"], [239, "contents"], [240, "contents"], [241, "contents"], [242, "contents"], [243, "contents"], [244, "contents"], [245, "contents"], [246, "contents"], [247, "contents"], [248, "contents"], [249, "contents"], [250, "contents"], [251, "contents"], [252, "contents"], [253, "contents"], [254, "contents"], [255, "contents"], [256, "contents"], [257, "contents"], [258, "contents"], [259, "contents"], [260, "contents"], [261, "contents"], [262, "contents"], [263, "contents"], [264, "contents"], [265, "contents"], [266, "contents"], [267, "contents"], [268, "contents"], [269, "contents"], [270, "contents"], [271, "contents"], [272, "contents"], [273, "contents"], [274, "contents"], [275, "contents"], [276, "contents"], [277, "contents"], [278, "contents"], [279, "contents"], [280, "contents"], [281, "contents"], [282, "contents"], [283, "contents"], [284, "contents"], [285, "contents"], [286, "contents"], [287, "contents"], [288, "contents"], [289, "contents"], [290, "contents"], [291, "contents"], [292, "contents"], [293, "contents"], [294, "contents"], [295, "contents"], [296, "contents"], [297, "contents"], [298, "contents"], [299, "contents"], [300, "contents"], [301, "contents"], [302, "contents"], [468, "contents"], [469, "contents"], [470, "contents"], [471, "contents"], [472, "contents"], [473, "contents"], [474, "contents"], [475, "contents"], [476, "contents"], [477, "contents"], [480, "contents"]], "Definition (/workspace/amdinfer/include/amdinfer/amdinfer.hpp)": [[160, "definition-workspace-amdinfer-include-amdinfer-amdinfer-hpp"]], "Includes": [[160, "includes"], [162, "includes"], [163, "includes"], [164, "includes"], [165, "includes"], [166, "includes"], [167, "includes"], [168, "includes"], [169, "includes"], [170, "includes"], [171, "includes"], [172, "includes"], [173, "includes"], [174, "includes"], [175, "includes"], [176, "includes"], [177, "includes"], [178, "includes"], [179, "includes"], [180, "includes"], [181, "includes"], [182, "includes"], [183, "includes"], [184, "includes"], [185, "includes"], [186, "includes"], [187, "includes"], [188, "includes"], [189, "includes"], [190, "includes"], [191, "includes"], [192, "includes"], [193, "includes"], [194, "includes"], [195, "includes"], [196, "includes"], [197, "includes"], [198, "includes"], [199, "includes"], [200, "includes"], [201, "includes"], [202, "includes"], [203, "includes"], [204, "includes"], [205, "includes"], [206, "includes"], [207, "includes"], [208, "includes"], [209, "includes"], [210, "includes"], [211, "includes"], [212, "includes"], [213, "includes"], [214, "includes"], [215, "includes"], [216, "includes"], [217, "includes"], [218, "includes"], [219, "includes"], [220, "includes"], [221, "includes"], [222, "includes"], [223, "includes"], [224, "includes"], [225, "includes"], [226, "includes"], [227, "includes"], [228, "includes"], [229, "includes"], [230, "includes"], [231, "includes"], [232, "includes"], [233, "includes"], [234, "includes"], [235, "includes"], [236, "includes"], [237, "includes"], [238, "includes"], [239, "includes"], [240, "includes"], [241, "includes"], [242, "includes"], [243, "includes"], [244, "includes"], [245, "includes"], [246, "includes"], [247, "includes"], [248, "includes"], [249, "includes"], [251, "includes"], [252, "includes"], [253, "includes"], [254, "includes"], [255, "includes"], [256, "includes"], [257, "includes"], [258, "includes"], [259, "includes"], [260, "includes"], [261, "includes"], [262, "includes"], [263, "includes"], [264, "includes"], [265, "includes"], [266, "includes"], [267, "includes"], [268, "includes"], [269, "includes"], [270, "includes"], [271, "includes"], [272, "includes"], [273, "includes"], [274, "includes"], [275, "includes"], [276, "includes"], [277, "includes"], [278, "includes"], [279, "includes"], [280, "includes"], [281, "includes"], [282, "includes"], [283, "includes"], [284, "includes"], [285, "includes"], [287, "includes"], [288, "includes"], [290, "includes"], [291, "includes"], [292, "includes"], [293, "includes"], [294, "includes"], [295, "includes"], [296, "includes"], [297, "includes"], [298, "includes"], [299, "includes"], [300, "includes"], [301, "includes"], [302, "includes"]], "File build_options.hpp": [[161, "file-build-options-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/build_options.hpp)": [[161, "definition-workspace-amdinfer-include-amdinfer-build-options-hpp"]], "Included By": [[161, "included-by"], [162, "included-by"], [163, "included-by"], [164, "included-by"], [165, "included-by"], [166, "included-by"], [167, "included-by"], [168, "included-by"], [169, "included-by"], [170, "included-by"], [171, "included-by"], [172, "included-by"], [173, "included-by"], [174, "included-by"], [175, "included-by"], [176, "included-by"], [177, "included-by"], [178, "included-by"], [179, "included-by"], [181, "included-by"], [183, "included-by"], [185, "included-by"], [187, "included-by"], [189, "included-by"], [191, "included-by"], [193, "included-by"], [195, "included-by"], [197, "included-by"], [201, "included-by"], [204, "included-by"], [207, "included-by"], [210, "included-by"], [213, "included-by"], [215, "included-by"], [220, "included-by"], [222, "included-by"], [224, "included-by"], [225, "included-by"], [227, "included-by"], [229, "included-by"], [232, "included-by"], [235, "included-by"], [236, "included-by"], [238, "included-by"], [241, "included-by"], [246, "included-by"], [248, "included-by"], [249, "included-by"], [252, "included-by"], [253, "included-by"], [254, "included-by"], [257, "included-by"], [259, "included-by"], [261, "included-by"], [263, "included-by"], [265, "included-by"], [267, "included-by"], [269, "included-by"], [270, "included-by"], [272, "included-by"], [274, "included-by"], [275, "included-by"], [277, "included-by"], [278, "included-by"], [280, "included-by"], [281, "included-by"], [282, "included-by"], [284, "included-by"], [285, "included-by"], [286, "included-by"], [289, "included-by"], [301, "included-by"]], "Defines": [[161, "defines"], [174, "defines"], [246, "defines"], [258, "defines"], [266, "defines"], [694, "defines"]], "Variables": [[161, "variables"], [186, "variables"], [226, "variables"], [242, "variables"], [244, "variables"], [247, "variables"], [249, "variables"], [255, "variables"], [271, "variables"], [285, "variables"], [286, "variables"], [288, "variables"], [289, "variables"], [291, "variables"], [294, "variables"], [295, "variables"], [297, "variables"], [299, "variables"], [301, "variables"], [468, "variables"], [472, "variables"], [474, "variables"], [475, "variables"], [694, "variables"]], "File client.hpp": [[162, "file-client-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/clients/client.hpp)": [[162, "definition-workspace-amdinfer-include-amdinfer-clients-client-hpp"]], "Classes": [[162, "classes"], [163, "classes"], [164, "classes"], [165, "classes"], [166, "classes"], [167, "classes"], [168, "classes"], [169, "classes"], [170, "classes"], [171, "classes"], [172, "classes"], [173, "classes"], [174, "classes"], [175, "classes"], [176, "classes"], [177, "classes"], [179, "classes"], [181, "classes"], [183, "classes"], [185, "classes"], [187, "classes"], [189, "classes"], [191, "classes"], [193, "classes"], [195, "classes"], [197, "classes"], [199, "classes"], [200, "classes"], [201, "classes"], [202, "classes"], [203, "classes"], [204, "classes"], [205, "classes"], [206, "classes"], [207, "classes"], [208, "classes"], [215, "classes"], [216, "classes"], [217, "classes"], [220, "classes"], [222, "classes"], [224, "classes"], [225, "classes"], [227, "classes"], [232, "classes"], [234, "classes"], [235, "classes"], [236, "classes"], [238, "classes"], [239, "classes"], [241, "classes"], [249, "classes"], [255, "classes"], [258, "classes"], [260, "classes"], [263, "classes"], [265, "classes"], [272, "classes"], [284, "classes"], [285, "classes"], [287, "classes"], [288, "classes"], [289, "classes"], [290, "classes"], [291, "classes"], [292, "classes"], [293, "classes"], [294, "classes"], [295, "classes"], [296, "classes"], [297, "classes"], [298, "classes"], [299, "classes"], [300, "classes"], [301, "classes"], [302, "classes"], [468, "classes"], [471, "classes"], [472, "classes"], [474, "classes"], [475, "classes"], [477, "classes"], [480, "classes"]], "File grpc.hpp": [[163, "file-grpc-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/clients/grpc.hpp)": [[163, "definition-workspace-amdinfer-include-amdinfer-clients-grpc-hpp"]], "File http.hpp": [[164, "file-http-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/clients/http.hpp)": [[164, "definition-workspace-amdinfer-include-amdinfer-clients-http-hpp"]], "File native.hpp": [[165, "file-native-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/clients/native.hpp)": [[165, "definition-workspace-amdinfer-include-amdinfer-clients-native-hpp"]], "File websocket.hpp": [[166, "file-websocket-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/clients/websocket.hpp)": [[166, "definition-workspace-amdinfer-include-amdinfer-clients-websocket-hpp"]], "File data_types.hpp": [[167, "file-data-types-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/data_types.hpp)": [[167, "definition-workspace-amdinfer-include-amdinfer-core-data-types-hpp"]], "Typedefs": [[167, "typedefs"], [173, "typedefs"], [174, "typedefs"], [175, "typedefs"], [178, "typedefs"], [181, "typedefs"], [183, "typedefs"], [210, "typedefs"], [215, "typedefs"], [222, "typedefs"], [258, "typedefs"], [260, "typedefs"], [278, "typedefs"], [284, "typedefs"], [299, "typedefs"], [468, "typedefs"], [474, "typedefs"], [694, "typedefs"]], "File exceptions.hpp": [[168, "file-exceptions-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/exceptions.hpp)": [[168, "definition-workspace-amdinfer-include-amdinfer-core-exceptions-hpp"]], "File inference_request.hpp": [[169, "file-inference-request-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/inference_request.hpp)": [[169, "definition-workspace-amdinfer-include-amdinfer-core-inference-request-hpp"]], "File inference_response.hpp": [[170, "file-inference-response-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/inference_response.hpp)": [[170, "definition-workspace-amdinfer-include-amdinfer-core-inference-response-hpp"]], "File inference_tensor.hpp": [[171, "file-inference-tensor-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/inference_tensor.hpp)": [[171, "definition-workspace-amdinfer-include-amdinfer-core-inference-tensor-hpp"]], "File mixins.hpp": [[172, "file-mixins-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/mixins.hpp)": [[172, "definition-workspace-amdinfer-include-amdinfer-core-mixins-hpp"]], "File model_metadata.hpp": [[173, "file-model-metadata-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/model_metadata.hpp)": [[173, "definition-workspace-amdinfer-include-amdinfer-core-model-metadata-hpp"]], "File parameters.hpp": [[174, "file-parameters-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/parameters.hpp)": [[174, "definition-workspace-amdinfer-include-amdinfer-core-parameters-hpp"]], "File predict_api.hpp": [[175, "file-predict-api-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/predict_api.hpp)": [[175, "definition-workspace-amdinfer-include-amdinfer-core-predict-api-hpp"]], "File server_metadata.hpp": [[176, "file-server-metadata-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/server_metadata.hpp)": [[176, "definition-workspace-amdinfer-include-amdinfer-core-server-metadata-hpp"]], "File tensor.hpp": [[177, "file-tensor-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/core/tensor.hpp)": [[177, "definition-workspace-amdinfer-include-amdinfer-core-tensor-hpp"]], "File declarations.hpp": [[178, "file-declarations-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/declarations.hpp)": [[178, "definition-workspace-amdinfer-include-amdinfer-declarations-hpp"]], "File server.hpp": [[179, "file-server-hpp"]], "Definition (/workspace/amdinfer/include/amdinfer/servers/server.hpp)": [[179, "definition-workspace-amdinfer-include-amdinfer-servers-server-hpp"]], "File batch.cpp": [[180, "file-batch-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/batch.cpp)": [[180, "definition-workspace-amdinfer-src-amdinfer-batching-batch-cpp"]], "File batch.hpp": [[181, "file-batch-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/batch.hpp)": [[181, "definition-workspace-amdinfer-src-amdinfer-batching-batch-hpp"]], "File batcher.cpp": [[182, "file-batcher-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/batcher.cpp)": [[182, "definition-workspace-amdinfer-src-amdinfer-batching-batcher-cpp"]], "File batcher.hpp": [[183, "file-batcher-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/batcher.hpp)": [[183, "definition-workspace-amdinfer-src-amdinfer-batching-batcher-hpp"]], "File hard.cpp": [[184, "file-hard-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/hard.cpp)": [[184, "definition-workspace-amdinfer-src-amdinfer-batching-hard-cpp"]], "File hard.hpp": [[185, "file-hard-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/hard.hpp)": [[185, "definition-workspace-amdinfer-src-amdinfer-batching-hard-hpp"]], "File soft.cpp": [[186, "file-soft-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/soft.cpp)": [[186, "definition-workspace-amdinfer-src-amdinfer-batching-soft-cpp"]], "File soft.hpp": [[187, "file-soft-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/batching/soft.hpp)": [[187, "definition-workspace-amdinfer-src-amdinfer-batching-soft-hpp"]], "File buffer.cpp": [[188, "file-buffer-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/buffer.cpp)": [[188, "definition-workspace-amdinfer-src-amdinfer-buffers-buffer-cpp"]], "File buffer.hpp": [[189, "file-buffer-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/buffer.hpp)": [[189, "definition-workspace-amdinfer-src-amdinfer-buffers-buffer-hpp"]], "File cpu.cpp": [[190, "file-cpu-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/cpu.cpp)": [[190, "definition-workspace-amdinfer-src-amdinfer-buffers-cpu-cpp"]], "File cpu.hpp": [[191, "file-cpu-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/cpu.hpp)": [[191, "definition-workspace-amdinfer-src-amdinfer-buffers-cpu-hpp"]], "File vart_tensor.cpp": [[192, "file-vart-tensor-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vart_tensor.cpp)": [[192, "definition-workspace-amdinfer-src-amdinfer-buffers-vart-tensor-cpp"]], "File vart_tensor.hpp": [[193, "file-vart-tensor-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vart_tensor.hpp)": [[193, "definition-workspace-amdinfer-src-amdinfer-buffers-vart-tensor-hpp"]], "File vart_tensor_buffer.cpp": [[194, "file-vart-tensor-buffer-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vart_tensor_buffer.cpp)": [[194, "definition-workspace-amdinfer-src-amdinfer-buffers-vart-tensor-buffer-cpp"]], "File vart_tensor_buffer.hpp": [[195, "file-vart-tensor-buffer-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vart_tensor_buffer.hpp)": [[195, "definition-workspace-amdinfer-src-amdinfer-buffers-vart-tensor-buffer-hpp"]], "File vector_buffer.cpp": [[196, "file-vector-buffer-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vector_buffer.cpp)": [[196, "definition-workspace-amdinfer-src-amdinfer-buffers-vector-buffer-cpp"]], "File vector_buffer.hpp": [[197, "file-vector-buffer-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/buffers/vector_buffer.hpp)": [[197, "definition-workspace-amdinfer-src-amdinfer-buffers-vector-buffer-hpp"]], "File client.cpp": [[198, "file-client-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/client.cpp)": [[198, "definition-workspace-amdinfer-src-amdinfer-clients-client-cpp"]], "File grpc.cpp": [[199, "file-grpc-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/grpc.cpp)": [[199, "definition-workspace-amdinfer-src-amdinfer-clients-grpc-cpp"]], "File grpc_internal.cpp": [[200, "file-grpc-internal-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/grpc_internal.cpp)": [[200, "definition-workspace-amdinfer-src-amdinfer-clients-grpc-internal-cpp"]], "File grpc_internal.hpp": [[201, "file-grpc-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/grpc_internal.hpp)": [[201, "definition-workspace-amdinfer-src-amdinfer-clients-grpc-internal-hpp"]], "File http.cpp": [[202, "file-http-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/http.cpp)": [[202, "definition-workspace-amdinfer-src-amdinfer-clients-http-cpp"]], "File http_internal.cpp": [[203, "file-http-internal-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/http_internal.cpp)": [[203, "definition-workspace-amdinfer-src-amdinfer-clients-http-internal-cpp"]], "File http_internal.hpp": [[204, "file-http-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/http_internal.hpp)": [[204, "definition-workspace-amdinfer-src-amdinfer-clients-http-internal-hpp"]], "File native.cpp": [[205, "file-native-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/native.cpp)": [[205, "definition-workspace-amdinfer-src-amdinfer-clients-native-cpp"]], "File native_internal.cpp": [[206, "file-native-internal-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/native_internal.cpp)": [[206, "definition-workspace-amdinfer-src-amdinfer-clients-native-internal-cpp"]], "File native_internal.hpp": [[207, "file-native-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/native_internal.hpp)": [[207, "definition-workspace-amdinfer-src-amdinfer-clients-native-internal-hpp"]], "File websocket.cpp": [[208, "file-websocket-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/clients/websocket.cpp)": [[208, "definition-workspace-amdinfer-src-amdinfer-clients-websocket-cpp"]], "File api.cpp": [[209, "file-api-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/api.cpp)": [[209, "definition-workspace-amdinfer-src-amdinfer-core-api-cpp"]], "File api.hpp": [[210, "file-api-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/api.hpp)": [[210, "definition-workspace-amdinfer-src-amdinfer-core-api-hpp"]], "File data_types.cpp": [[211, "file-data-types-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/data_types.cpp)": [[211, "definition-workspace-amdinfer-src-amdinfer-core-data-types-cpp"]], "File data_types_internal.cpp": [[212, "file-data-types-internal-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/data_types_internal.cpp)": [[212, "definition-workspace-amdinfer-src-amdinfer-core-data-types-internal-cpp"]], "File data_types_internal.hpp": [[213, "file-data-types-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/data_types_internal.hpp)": [[213, "definition-workspace-amdinfer-src-amdinfer-core-data-types-internal-hpp"]], "File endpoints.cpp": [[214, "file-endpoints-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/endpoints.cpp)": [[214, "definition-workspace-amdinfer-src-amdinfer-core-endpoints-cpp"]], "File endpoints.hpp": [[215, "file-endpoints-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/endpoints.hpp)": [[215, "definition-workspace-amdinfer-src-amdinfer-core-endpoints-hpp"]], "File inference_request.cpp": [[216, "file-inference-request-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/inference_request.cpp)": [[216, "definition-workspace-amdinfer-src-amdinfer-core-inference-request-cpp"]], "File inference_response.cpp": [[217, "file-inference-response-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/inference_response.cpp)": [[217, "definition-workspace-amdinfer-src-amdinfer-core-inference-response-cpp"]], "File inference_tensor.cpp": [[218, "file-inference-tensor-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/inference_tensor.cpp)": [[218, "definition-workspace-amdinfer-src-amdinfer-core-inference-tensor-cpp"]], "File interface.cpp": [[219, "file-interface-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/interface.cpp)": [[219, "definition-workspace-amdinfer-src-amdinfer-core-interface-cpp"]], "File interface.hpp": [[220, "file-interface-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/interface.hpp)": [[220, "definition-workspace-amdinfer-src-amdinfer-core-interface-hpp"]], "File manager.cpp": [[221, "file-manager-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/manager.cpp)": [[221, "definition-workspace-amdinfer-src-amdinfer-core-manager-cpp"]], "File manager.hpp": [[222, "file-manager-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/manager.hpp)": [[222, "definition-workspace-amdinfer-src-amdinfer-core-manager-hpp"]], "File cpu_allocator.cpp": [[223, "file-cpu-allocator-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/cpu_allocator.cpp)": [[223, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-cpu-allocator-cpp"]], "File cpu_allocator.hpp": [[224, "file-cpu-allocator-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/cpu_allocator.hpp)": [[224, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-cpu-allocator-hpp"]], "File memory_allocator.hpp": [[225, "file-memory-allocator-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/memory_allocator.hpp)": [[225, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-memory-allocator-hpp"]], "File pool.cpp": [[226, "file-pool-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/pool.cpp)": [[226, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-pool-cpp"]], "File pool.hpp": [[227, "file-pool-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/pool.hpp)": [[227, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-pool-hpp"]], "File vart_tensor_allocator.cpp": [[228, "file-vart-tensor-allocator-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/vart_tensor_allocator.cpp)": [[228, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-vart-tensor-allocator-cpp"]], "File vart_tensor_allocator.hpp": [[229, "file-vart-tensor-allocator-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/memory_pool/vart_tensor_allocator.hpp)": [[229, "definition-workspace-amdinfer-src-amdinfer-core-memory-pool-vart-tensor-allocator-hpp"]], "File model_metadata.cpp": [[230, "file-model-metadata-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/model_metadata.cpp)": [[230, "definition-workspace-amdinfer-src-amdinfer-core-model-metadata-cpp"]], "File model_repository.cpp": [[231, "file-model-repository-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/model_repository.cpp)": [[231, "definition-workspace-amdinfer-src-amdinfer-core-model-repository-cpp"]], "File model_repository.hpp": [[232, "file-model-repository-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/model_repository.hpp)": [[232, "definition-workspace-amdinfer-src-amdinfer-core-model-repository-hpp"]], "File parameters.cpp": [[233, "file-parameters-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/parameters.cpp)": [[233, "definition-workspace-amdinfer-src-amdinfer-core-parameters-cpp"]], "File predict_api.cpp": [[234, "file-predict-api-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/predict_api.cpp)": [[234, "definition-workspace-amdinfer-src-amdinfer-core-predict-api-cpp"]], "File predict_api_internal.hpp": [[235, "file-predict-api-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/predict_api_internal.hpp)": [[235, "definition-workspace-amdinfer-src-amdinfer-core-predict-api-internal-hpp"]], "File request_container.hpp": [[236, "file-request-container-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/request_container.hpp)": [[236, "definition-workspace-amdinfer-src-amdinfer-core-request-container-hpp"]], "File shared_state.cpp": [[237, "file-shared-state-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/shared_state.cpp)": [[237, "definition-workspace-amdinfer-src-amdinfer-core-shared-state-cpp"]], "File shared_state.hpp": [[238, "file-shared-state-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/shared_state.hpp)": [[238, "definition-workspace-amdinfer-src-amdinfer-core-shared-state-hpp"]], "File tensor.cpp": [[239, "file-tensor-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/tensor.cpp)": [[239, "definition-workspace-amdinfer-src-amdinfer-core-tensor-cpp"]], "File worker_info.cpp": [[240, "file-worker-info-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/worker_info.cpp)": [[240, "definition-workspace-amdinfer-src-amdinfer-core-worker-info-cpp"]], "File worker_info.hpp": [[241, "file-worker-info-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/core/worker_info.hpp)": [[241, "definition-workspace-amdinfer-src-amdinfer-core-worker-info-hpp"]], "File main.cpp": [[242, "file-main-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/main.cpp)": [[242, "definition-workspace-amdinfer-src-amdinfer-main-cpp"]], "File echo.cpp": [[243, "file-echo-cpp"], [292, "file-echo-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/models/echo.cpp)": [[243, "definition-workspace-amdinfer-src-amdinfer-models-echo-cpp"]], "File echo_multi.cpp": [[244, "file-echo-multi-cpp"], [293, "file-echo-multi-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/models/echo_multi.cpp)": [[244, "definition-workspace-amdinfer-src-amdinfer-models-echo-multi-cpp"]], "File logging.cpp": [[245, "file-logging-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/logging.cpp)": [[245, "definition-workspace-amdinfer-src-amdinfer-observation-logging-cpp"]], "File logging.hpp": [[246, "file-logging-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/logging.hpp)": [[246, "definition-workspace-amdinfer-src-amdinfer-observation-logging-hpp"]], "File metrics.cpp": [[247, "file-metrics-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/metrics.cpp)": [[247, "definition-workspace-amdinfer-src-amdinfer-observation-metrics-cpp"]], "File metrics.hpp": [[248, "file-metrics-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/metrics.hpp)": [[248, "definition-workspace-amdinfer-src-amdinfer-observation-metrics-hpp"]], "File observer.hpp": [[249, "file-observer-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/observer.hpp)": [[249, "definition-workspace-amdinfer-src-amdinfer-observation-observer-hpp"]], "File status.hpp": [[250, "file-status-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/status.hpp)": [[250, "definition-workspace-amdinfer-src-amdinfer-observation-status-hpp"]], "File tracing.cpp": [[251, "file-tracing-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/tracing.cpp)": [[251, "definition-workspace-amdinfer-src-amdinfer-observation-tracing-cpp"]], "File tracing.hpp": [[252, "file-tracing-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/observation/tracing.hpp)": [[252, "definition-workspace-amdinfer-src-amdinfer-observation-tracing-hpp"]], "File center_crop.hpp": [[253, "file-center-crop-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/pre_post/center_crop.hpp)": [[253, "definition-workspace-amdinfer-src-amdinfer-pre-post-center-crop-hpp"]], "File get_top_k.hpp": [[254, "file-get-top-k-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/pre_post/get_top_k.hpp)": [[254, "definition-workspace-amdinfer-src-amdinfer-pre-post-get-top-k-hpp"]], "File image_preprocess.hpp": [[255, "file-image-preprocess-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/pre_post/image_preprocess.hpp)": [[255, "definition-workspace-amdinfer-src-amdinfer-pre-post-image-preprocess-hpp"]], "File resnet50_postprocess.hpp": [[256, "file-resnet50-postprocess-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/pre_post/resnet50_postprocess.hpp)": [[256, "definition-workspace-amdinfer-src-amdinfer-pre-post-resnet50-postprocess-hpp"]], "File softmax.hpp": [[257, "file-softmax-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/pre_post/softmax.hpp)": [[257, "definition-workspace-amdinfer-src-amdinfer-pre-post-softmax-hpp"]], "File grpc_server.cpp": [[258, "file-grpc-server-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/grpc_server.cpp)": [[258, "definition-workspace-amdinfer-src-amdinfer-servers-grpc-server-cpp"]], "File grpc_server.hpp": [[259, "file-grpc-server-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/grpc_server.hpp)": [[259, "definition-workspace-amdinfer-src-amdinfer-servers-grpc-server-hpp"]], "File http_server.cpp": [[260, "file-http-server-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/http_server.cpp)": [[260, "definition-workspace-amdinfer-src-amdinfer-servers-http-server-cpp"]], "File http_server.hpp": [[261, "file-http-server-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/http_server.hpp)": [[261, "definition-workspace-amdinfer-src-amdinfer-servers-http-server-hpp"]], "File server.cpp": [[262, "file-server-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/server.cpp)": [[262, "definition-workspace-amdinfer-src-amdinfer-servers-server-cpp"]], "File server_internal.hpp": [[263, "file-server-internal-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/server_internal.hpp)": [[263, "definition-workspace-amdinfer-src-amdinfer-servers-server-internal-hpp"]], "File websocket_server.cpp": [[264, "file-websocket-server-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/websocket_server.cpp)": [[264, "definition-workspace-amdinfer-src-amdinfer-servers-websocket-server-cpp"]], "File websocket_server.hpp": [[265, "file-websocket-server-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/servers/websocket_server.hpp)": [[265, "definition-workspace-amdinfer-src-amdinfer-servers-websocket-server-hpp"]], "File base64.cpp": [[266, "file-base64-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/base64.cpp)": [[266, "definition-workspace-amdinfer-src-amdinfer-util-base64-cpp"]], "File base64.hpp": [[267, "file-base64-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/base64.hpp)": [[267, "definition-workspace-amdinfer-src-amdinfer-util-base64-hpp"]], "File compression.cpp": [[268, "file-compression-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/compression.cpp)": [[268, "definition-workspace-amdinfer-src-amdinfer-util-compression-cpp"]], "File compression.hpp": [[269, "file-compression-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/compression.hpp)": [[269, "definition-workspace-amdinfer-src-amdinfer-util-compression-hpp"]], "File containers.hpp": [[270, "file-containers-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/containers.hpp)": [[270, "definition-workspace-amdinfer-src-amdinfer-util-containers-hpp"]], "File ctpl.cpp": [[271, "file-ctpl-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/ctpl.cpp)": [[271, "definition-workspace-amdinfer-src-amdinfer-util-ctpl-cpp"]], "File ctpl.hpp": [[272, "file-ctpl-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/ctpl.hpp)": [[272, "definition-workspace-amdinfer-src-amdinfer-util-ctpl-hpp"]], "File exec.cpp": [[273, "file-exec-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/exec.cpp)": [[273, "definition-workspace-amdinfer-src-amdinfer-util-exec-cpp"]], "File exec.hpp": [[274, "file-exec-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/exec.hpp)": [[274, "definition-workspace-amdinfer-src-amdinfer-util-exec-hpp"]], "File memory.hpp": [[275, "file-memory-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/memory.hpp)": [[275, "definition-workspace-amdinfer-src-amdinfer-util-memory-hpp"]], "File parse_env.cpp": [[276, "file-parse-env-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/parse_env.cpp)": [[276, "definition-workspace-amdinfer-src-amdinfer-util-parse-env-cpp"]], "File parse_env.hpp": [[277, "file-parse-env-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/parse_env.hpp)": [[277, "definition-workspace-amdinfer-src-amdinfer-util-parse-env-hpp"]], "File queue.hpp": [[278, "file-queue-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/queue.hpp)": [[278, "definition-workspace-amdinfer-src-amdinfer-util-queue-hpp"]], "File read_nth_line.cpp": [[279, "file-read-nth-line-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/read_nth_line.cpp)": [[279, "definition-workspace-amdinfer-src-amdinfer-util-read-nth-line-cpp"]], "File read_nth_line.hpp": [[280, "file-read-nth-line-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/read_nth_line.hpp)": [[280, "definition-workspace-amdinfer-src-amdinfer-util-read-nth-line-hpp"]], "File string.hpp": [[281, "file-string-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/string.hpp)": [[281, "definition-workspace-amdinfer-src-amdinfer-util-string-hpp"]], "File thread.hpp": [[282, "file-thread-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/thread.hpp)": [[282, "definition-workspace-amdinfer-src-amdinfer-util-thread-hpp"]], "File timer.cpp": [[283, "file-timer-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/timer.cpp)": [[283, "definition-workspace-amdinfer-src-amdinfer-util-timer-cpp"]], "File timer.hpp": [[284, "file-timer-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/timer.hpp)": [[284, "definition-workspace-amdinfer-src-amdinfer-util-timer-hpp"]], "File traits.hpp": [[285, "file-traits-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/util/traits.hpp)": [[285, "definition-workspace-amdinfer-src-amdinfer-util-traits-hpp"]], "File version.hpp": [[286, "file-version-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/version.hpp)": [[286, "definition-workspace-amdinfer-src-amdinfer-version-hpp"]], "File aks.cpp": [[287, "file-aks-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/aks.cpp)": [[287, "definition-workspace-amdinfer-src-amdinfer-workers-aks-cpp"]], "File aks_detect.cpp": [[288, "file-aks-detect-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/aks_detect.cpp)": [[288, "definition-workspace-amdinfer-src-amdinfer-workers-aks-detect-cpp"]], "File aks_detect.hpp": [[289, "file-aks-detect-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/aks_detect.hpp)": [[289, "definition-workspace-amdinfer-src-amdinfer-workers-aks-detect-hpp"]], "File aks_detect_stream.cpp": [[290, "file-aks-detect-stream-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/aks_detect_stream.cpp)": [[290, "definition-workspace-amdinfer-src-amdinfer-workers-aks-detect-stream-cpp"]], "File c_plus_plus.cpp": [[291, "file-c-plus-plus-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/c_plus_plus.cpp)": [[291, "definition-workspace-amdinfer-src-amdinfer-workers-c-plus-plus-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/echo.cpp)": [[292, "definition-workspace-amdinfer-src-amdinfer-workers-echo-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/echo_multi.cpp)": [[293, "definition-workspace-amdinfer-src-amdinfer-workers-echo-multi-cpp"]], "File invert_image.cpp": [[294, "file-invert-image-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/invert_image.cpp)": [[294, "definition-workspace-amdinfer-src-amdinfer-workers-invert-image-cpp"]], "File invert_video.cpp": [[295, "file-invert-video-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/invert_video.cpp)": [[295, "definition-workspace-amdinfer-src-amdinfer-workers-invert-video-cpp"]], "File migraphx.cpp": [[296, "file-migraphx-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/migraphx.cpp)": [[296, "definition-workspace-amdinfer-src-amdinfer-workers-migraphx-cpp"]], "File pt_zendnn.cpp": [[297, "file-pt-zendnn-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/pt_zendnn.cpp)": [[297, "definition-workspace-amdinfer-src-amdinfer-workers-pt-zendnn-cpp"]], "File resnet50.cpp": [[298, "file-resnet50-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/resnet50.cpp)": [[298, "definition-workspace-amdinfer-src-amdinfer-workers-resnet50-cpp"]], "File resnet50_stream.cpp": [[299, "file-resnet50-stream-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/resnet50_stream.cpp)": [[299, "definition-workspace-amdinfer-src-amdinfer-workers-resnet50-stream-cpp"]], "File tf_zendnn.cpp": [[300, "file-tf-zendnn-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/tf_zendnn.cpp)": [[300, "definition-workspace-amdinfer-src-amdinfer-workers-tf-zendnn-cpp"]], "File worker.hpp": [[301, "file-worker-hpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/worker.hpp)": [[301, "definition-workspace-amdinfer-src-amdinfer-workers-worker-hpp"]], "File xmodel.cpp": [[302, "file-xmodel-cpp"]], "Definition (/workspace/amdinfer/src/amdinfer/workers/xmodel.cpp)": [[302, "definition-workspace-amdinfer-src-amdinfer-workers-xmodel-cpp"]], "File Hierarchy": [[303, "file-hierarchy"]], "Function getWorker()": [[304, "function-getworker"], [305, "function-getworker"], [306, "function-getworker"], [325, "function-getworker"], [344, "function-getworker"], [345, "function-getworker"], [406, "function-getworker"], [407, "function-getworker"], [418, "function-getworker"], [436, "function-getworker"], [438, "function-getworker"], [440, "function-getworker"], [452, "function-getworker"], [460, "function-getworker"], [461, "function-getworker"], [462, "function-getworker"]], "Function Documentation": [[304, "function-documentation"], [305, "function-documentation"], [306, "function-documentation"], [307, "function-documentation"], [308, "function-documentation"], [309, "function-documentation"], [310, "function-documentation"], [311, "function-documentation"], [312, "function-documentation"], [313, "function-documentation"], [314, "function-documentation"], [315, "function-documentation"], [316, "function-documentation"], [317, "function-documentation"], [318, "function-documentation"], [319, "function-documentation"], [320, "function-documentation"], [321, "function-documentation"], [322, "function-documentation"], [323, "function-documentation"], [324, "function-documentation"], [325, "function-documentation"], [326, "function-documentation"], [327, "function-documentation"], [328, "function-documentation"], [329, "function-documentation"], [330, "function-documentation"], [331, "function-documentation"], [332, "function-documentation"], [333, "function-documentation"], [334, "function-documentation"], [335, "function-documentation"], [336, "function-documentation"], [337, "function-documentation"], [338, "function-documentation"], [339, "function-documentation"], [340, "function-documentation"], [341, "function-documentation"], [342, "function-documentation"], [343, "function-documentation"], [344, "function-documentation"], [345, "function-documentation"], [346, "function-documentation"], [347, "function-documentation"], [348, "function-documentation"], [349, "function-documentation"], [350, "function-documentation"], [351, "function-documentation"], [352, "function-documentation"], [353, "function-documentation"], [354, "function-documentation"], [355, "function-documentation"], [356, "function-documentation"], [357, "function-documentation"], [358, "function-documentation"], [359, "function-documentation"], [360, "function-documentation"], [361, "function-documentation"], [362, "function-documentation"], [363, "function-documentation"], [364, "function-documentation"], [365, "function-documentation"], [366, "function-documentation"], [367, "function-documentation"], [368, "function-documentation"], [369, "function-documentation"], [370, "function-documentation"], [371, "function-documentation"], [372, "function-documentation"], [373, "function-documentation"], [374, "function-documentation"], [375, "function-documentation"], [376, "function-documentation"], [377, "function-documentation"], [378, "function-documentation"], [379, "function-documentation"], [380, "function-documentation"], [381, "function-documentation"], [382, "function-documentation"], [383, "function-documentation"], [384, "function-documentation"], [385, "function-documentation"], [386, "function-documentation"], [387, "function-documentation"], [388, "function-documentation"], [389, "function-documentation"], [390, "function-documentation"], [391, "function-documentation"], [392, "function-documentation"], [393, "function-documentation"], [394, "function-documentation"], [395, "function-documentation"], [396, "function-documentation"], [397, "function-documentation"], [398, "function-documentation"], [399, "function-documentation"], [400, "function-documentation"], [401, "function-documentation"], [402, "function-documentation"], [403, "function-documentation"], [404, "function-documentation"], [405, "function-documentation"], [406, "function-documentation"], [407, "function-documentation"], [408, "function-documentation"], [409, "function-documentation"], [410, "function-documentation"], [411, "function-documentation"], [412, "function-documentation"], [413, "function-documentation"], [414, "function-documentation"], [415, "function-documentation"], [416, "function-documentation"], [417, "function-documentation"], [418, "function-documentation"], [419, "function-documentation"], [420, "function-documentation"], [421, "function-documentation"], [422, "function-documentation"], [423, "function-documentation"], [424, "function-documentation"], [425, "function-documentation"], [426, "function-documentation"], [427, "function-documentation"], [428, "function-documentation"], [429, "function-documentation"], [430, "function-documentation"], [431, "function-documentation"], [432, "function-documentation"], [433, "function-documentation"], [434, "function-documentation"], [435, "function-documentation"], [436, "function-documentation"], [437, "function-documentation"], [438, "function-documentation"], [439, "function-documentation"], [440, "function-documentation"], [441, "function-documentation"], [442, "function-documentation"], [443, "function-documentation"], [444, "function-documentation"], [445, "function-documentation"], [446, "function-documentation"], [447, "function-documentation"], [448, "function-documentation"], [449, "function-documentation"], [450, "function-documentation"], [451, "function-documentation"], [452, "function-documentation"], [453, "function-documentation"], [454, "function-documentation"], [455, "function-documentation"], [456, "function-documentation"], [457, "function-documentation"], [458, "function-documentation"], [459, "function-documentation"], [460, "function-documentation"], [461, "function-documentation"], [462, "function-documentation"]], "Function amdinfer::constructMessage(const std::string&, const std::string&, const std::string&)": [[307, "function-amdinfer-constructmessage-const-std-string-const-std-string-const-std-string"]], "Function amdinfer::modelMetadata": [[308, "function-amdinfer-modelmetadata"]], "Function amdinfer::modelLoad": [[309, "function-amdinfer-modelload"]], "Function amdinfer::getHardware": [[310, "function-amdinfer-gethardware"]], "Function amdinfer::workerUnload": [[311, "function-amdinfer-workerunload"]], "Function amdinfer::workerLoad": [[312, "function-amdinfer-workerload"]], "Function amdinfer::modelUnload": [[313, "function-amdinfer-modelunload"]], "Function amdinfer::modelList": [[314, "function-amdinfer-modellist"]], "Function amdinfer::serverMetadata": [[315, "function-amdinfer-servermetadata"]], "Function amdinfer::modelInfer": [[316, "function-amdinfer-modelinfer"]], "Function amdinfer::modelReady": [[317, "function-amdinfer-modelready"]], "Function amdinfer::hasHardware": [[318, "function-amdinfer-hashardware"]], "Function amdinfer::util::minDecodeLength": [[319, "function-amdinfer-util-mindecodelength"]], "Function amdinfer::util::base64Decode(std::string)": [[320, "function-amdinfer-util-base64decode-std-string"]], "Function amdinfer::util::base64Encode(const char *, size_t)": [[321, "function-amdinfer-util-base64encode-const-char-size-t"]], "Function amdinfer::util::base64Decode(const char *, size_t)": [[322, "function-amdinfer-util-base64decode-const-char-size-t"]], "Function amdinfer::util::base64Encode(std::string)": [[323, "function-amdinfer-util-base64encode-std-string"]], "Function amdinfer::util::minEncodeLength": [[324, "function-amdinfer-util-minencodelength"]], "Function amdinfer::openModel": [[326, "function-amdinfer-openmodel"]], "Function amdinfer::getFunction": [[327, "function-amdinfer-getfunction"]], "Function amdinfer::workers::respond": [[328, "function-amdinfer-workers-respond"]], "Function amdinfer::pre_post::centerCrop": [[329, "function-amdinfer-pre-post-centercrop"]], "Function amdinfer::inferAsyncOrderedBatched": [[330, "function-amdinfer-inferasyncorderedbatched"]], "Function amdinfer::serverHasExtension": [[331, "function-amdinfer-serverhasextension"]], "Function amdinfer::initializeClientLogging": [[332, "function-amdinfer-initializeclientlogging"]], "Function amdinfer::inferAsyncOrdered": [[333, "function-amdinfer-inferasyncordered"]], "Function amdinfer::waitUntilServerReady": [[334, "function-amdinfer-waituntilserverready"]], "Function amdinfer::waitUntilModelReady": [[335, "function-amdinfer-waituntilmodelready"]], "Function amdinfer::util::zDecompress": [[336, "function-amdinfer-util-zdecompress"]], "Template Function amdinfer::util::containerProduct(Iter, Iter)": [[337, "template-function-amdinfer-util-containerproduct-iter-iter"]], "Template Function amdinfer::util::containerSum(const Container&)": [[338, "template-function-amdinfer-util-containersum-const-container"]], "Template Function amdinfer::util::containerSum(Iter, Iter)": [[339, "template-function-amdinfer-util-containersum-iter-iter"]], "Template Function amdinfer::util::containerProduct(const Container&)": [[340, "template-function-amdinfer-util-containerproduct-const-container"]], "Function amdinfer::operator<<(std::ostream&, const DataType&)": [[341, "function-amdinfer-operator-std-ostream-const-datatype"]], "Template Function amdinfer::switchOverTypes": [[342, "template-function-amdinfer-switchovertypes"]], "Function amdinfer::detail::hash": [[343, "function-amdinfer-detail-hash"]], "Function amdinfer::util::exec": [[346, "function-amdinfer-util-exec"]], "Function amdinfer::pre_post::getTopK": [[347, "function-amdinfer-pre-post-gettopk"]], "Function amdinfer::runInference": [[348, "function-amdinfer-runinference"]], "Function amdinfer::mapProtoToModelMetadata": [[349, "function-amdinfer-mapprototomodelmetadata"]], "Function amdinfer::mapParametersToProto": [[350, "function-amdinfer-mapparameterstoproto"]], "Function amdinfer::mapProtoToParameters(const google::protobuf::Map<std::string, inference::InferParameter>&)": [[351, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter"], [358, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter"], [359, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter"]], "Function amdinfer::mapResponseToProto": [[352, "function-amdinfer-mapresponsetoproto"]], "Function amdinfer::mapProtoToParameters(const google::protobuf::Map<std::string, inference::InferParameter>&, RequestParameters&)": [[353, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter-requestparameters"]], "Function amdinfer::mapProtoToParameters(const google::protobuf::Map<std::string, inference::InferParameter>&, ParameterMap&)": [[354, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter-parametermap"]], "Function amdinfer::mapModelMetadataToProto": [[355, "function-amdinfer-mapmodelmetadatatoproto"]], "Function amdinfer::mapRequestToProto(const InferenceRequest&, inference::ModelInferRequest&, ] const Observer&)": [[356, "function-amdinfer-maprequesttoproto-const-inferencerequest-inference-modelinferrequest-const-observer"]], "Function amdinfer::mapProtoToResponse": [[357, "function-amdinfer-mapprototoresponse"]], "Function amdinfer::mapProtoToParameters(const google::protobuf::Map<std::string, inference::InferParameter>&, ParameterMap *)": [[360, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter-parametermap"]], "Function amdinfer::mapProtoToParameters(const google::protobuf::Map<std::string, inference::InferParameter>&, RequestParameters *)": [[361, "function-amdinfer-mapprototoparameters-const-google-protobuf-map-std-string-inference-inferparameter-requestparameters"]], "Template Function amdinfer::Overloaded": [[362, "template-function-amdinfer-overloaded"]], "Template Function amdinfer::getTensorContents": [[363, "template-function-amdinfer-gettensorcontents"]], "Function amdinfer::mapRequestToProto(const InferenceRequest&, inference::ModelInferRequest&, const Observer&)": [[364, "function-amdinfer-maprequesttoproto-const-inferencerequest-inference-modelinferrequest-const-observer"]], "Function amdinfer::grpc::stop": [[365, "function-amdinfer-grpc-stop"]], "Function amdinfer::grpcUnaryCallback": [[366, "function-amdinfer-grpcunarycallback"]], "Function amdinfer::getOutput": [[367, "function-amdinfer-getoutput"]], "Function amdinfer::getRequest(const inference::ModelInferRequest&, const MemoryPool *)": [[368, "function-amdinfer-getrequest-const-inference-modelinferrequest-const-memorypool"]], "Function amdinfer::grpc::start": [[369, "function-amdinfer-grpc-start"], [372, "function-amdinfer-grpc-start"]], "Function amdinfer::getInput": [[370, "function-amdinfer-getinput"]], "Function amdinfer::setCallback(InferenceRequest *, CallDataModelInfer *)": [[371, "function-amdinfer-setcallback-inferencerequest-calldatamodelinfer"]], "Function amdinfer::createPostRequest": [[373, "function-amdinfer-createpostrequest"]], "Function amdinfer::checkError": [[374, "function-amdinfer-checkerror"]], "Function amdinfer::addHeaders": [[375, "function-amdinfer-addheaders"]], "Function amdinfer::createGetRequest": [[376, "function-amdinfer-creategetrequest"]], "Function amdinfer::createInferenceRequest": [[377, "function-amdinfer-createinferencerequest"]], "Function amdinfer::modelMetadataToJson": [[378, "function-amdinfer-modelmetadatatojson"]], "Function amdinfer::modelMetadataTensorToJson": [[379, "function-amdinfer-modelmetadatatensortojson"]], "Function amdinfer::mapJsonToParameters": [[380, "function-amdinfer-mapjsontoparameters"], [386, "function-amdinfer-mapjsontoparameters"], [390, "function-amdinfer-mapjsontoparameters"]], "Function amdinfer::mapJsonToModelMetadata": [[381, "function-amdinfer-mapjsontomodelmetadata"]], "Function amdinfer::mapJsonToResponse": [[382, "function-amdinfer-mapjsontoresponse"]], "Function amdinfer::errorHttpResponse": [[383, "function-amdinfer-errorhttpresponse"], [396, "function-amdinfer-errorhttpresponse"]], "Function amdinfer::mapParametersToJson": [[384, "function-amdinfer-mapparameterstojson"], [387, "function-amdinfer-mapparameterstojson"], [389, "function-amdinfer-mapparameterstojson"]], "Function amdinfer::parseJson": [[385, "function-amdinfer-parsejson"], [397, "function-amdinfer-parsejson"]], "Function amdinfer::parseResponse": [[388, "function-amdinfer-parseresponse"], [399, "function-amdinfer-parseresponse"]], "Function amdinfer::mapRequestToJson": [[391, "function-amdinfer-maprequesttojson"]], "Template Function amdinfer::jsonValueToType": [[392, "template-function-amdinfer-jsonvaluetotype"], [393, "template-function-amdinfer-jsonvaluetotype"]], "Function amdinfer::http::stop": [[394, "function-amdinfer-http-stop"]], "Function amdinfer::http::start": [[395, "function-amdinfer-http-start"], [398, "function-amdinfer-http-start"]], "Template Function amdinfer::pre_post::imagePreprocess": [[400, "template-function-amdinfer-pre-post-imagepreprocess"]], "Template Function amdinfer::pre_post::detail::normalize": [[401, "template-function-amdinfer-pre-post-detail-normalize"]], "Template Function amdinfer::pre_post::detail::nestedLoop": [[402, "template-function-amdinfer-pre-post-detail-nestedloop"]], "Function amdinfer::operator<<(std::ostream&, InferenceRequestInput const&)": [[403, "function-amdinfer-operator-std-ostream-inferencerequestinput-const"]], "Function amdinfer::operator<<(std::ostream&, InferenceResponseOutput const&)": [[404, "function-amdinfer-operator-std-ostream-inferenceresponseoutput-const"]], "Function amdinfer::operator<<(std::ostream&, InferenceResponse const&)": [[405, "function-amdinfer-operator-std-ostream-inferenceresponse-const"]], "Function amdinfer::constructMessage(const std::string&, const std::string&)": [[408, "function-amdinfer-constructmessage-const-std-string-const-std-string"]], "Function amdinfer::initLogger": [[409, "function-amdinfer-initlogger"]], "Function amdinfer::getLevel": [[410, "function-amdinfer-getlevel"]], "Function amdinfer::getLogDirectory": [[411, "function-amdinfer-getlogdirectory"]], "Function main": [[412, "function-main"]], "Function signalCallbackHandler": [[413, "function-signalcallbackhandler"], [414, "function-signalcallbackhandler"]], "Template Function amdinfer::util::copy": [[415, "template-function-amdinfer-util-copy"]], "Template Function amdinfer::copy": [[416, "template-function-amdinfer-copy"], [435, "template-function-amdinfer-copy"]], "Function amdinfer::workers::toDataType": [[417, "function-amdinfer-workers-todatatype"]], "Function amdinfer::parseModel(const fs::path&, const std::string&, ParameterMap *)": [[419, "function-amdinfer-parsemodel-const-fs-path-const-std-string-parametermap"]], "Function amdinfer::mapProtoToParameters2": [[420, "function-amdinfer-mapprototoparameters2"], [421, "function-amdinfer-mapprototoparameters2"]], "Function amdinfer::parseModel(const std::filesystem::path&, const std::string&, ParameterMap *)": [[422, "function-amdinfer-parsemodel-const-std-filesystem-path-const-std-string-parametermap"]], "Function getOutputs()": [[423, "function-getoutputs"], [426, "function-getoutputs"]], "Function run(amdinfer::Batch *, amdinfer::Batch *)": [[424, "function-run-amdinfer-batch-amdinfer-batch"], [427, "function-run-amdinfer-batch-amdinfer-batch"]], "Function getInputs()": [[425, "function-getinputs"], [428, "function-getinputs"]], "Function amdinfer::getRequest(const InferenceRequest&, const MemoryPool *)": [[429, "function-amdinfer-getrequest-const-inferencerequest-const-memorypool"]], "Function amdinfer::setCallback(InferenceRequest *)": [[430, "function-amdinfer-setcallback-inferencerequest"]], "Function amdinfer::logTraceBuffer": [[431, "function-amdinfer-logtracebuffer"]], "Template Function amdinfer::expandType": [[432, "template-function-amdinfer-expandtype"], [434, "template-function-amdinfer-expandtype"]], "Function amdinfer::util::autoExpandEnvironmentVariables": [[433, "function-amdinfer-util-autoexpandenvironmentvariables"]], "Function amdinfer::util::readNthLine": [[437, "function-amdinfer-util-readnthline"]], "Template Function amdinfer::pre_post::resnet50Postprocess": [[439, "template-function-amdinfer-pre-post-resnet50postprocess"]], "Function amdinfer::terminate": [[441, "function-amdinfer-terminate"]], "Function amdinfer::initialize": [[442, "function-amdinfer-initialize"]], "Function amdinfer::initializeServerLogging": [[443, "function-amdinfer-initializeserverlogging"]], "Template Function amdinfer::pre_post::calcSoftmax": [[444, "template-function-amdinfer-pre-post-calcsoftmax"]], "Function amdinfer::util::startsWith": [[445, "function-amdinfer-util-startswith"]], "Function amdinfer::util::toLower(std::string *)": [[446, "function-amdinfer-util-tolower-std-string"]], "Function amdinfer::util::toLower(const std::string&)": [[447, "function-amdinfer-util-tolower-const-std-string"]], "Function amdinfer::util::endsWith": [[448, "function-amdinfer-util-endswith"]], "Function amdinfer::util::addressToString": [[449, "function-amdinfer-util-addresstostring"]], "Function amdinfer::util::split": [[450, "function-amdinfer-util-split"]], "Function amdinfer::util::isLower": [[451, "function-amdinfer-util-islower"]], "Function amdinfer::workers::openLibrary": [[453, "function-amdinfer-workers-openlibrary"]], "Function amdinfer::util::setThreadName(const char *)": [[454, "function-amdinfer-util-setthreadname-const-char"]], "Function amdinfer::util::setThreadName(const std::string&)": [[455, "function-amdinfer-util-setthreadname-const-std-string"]], "Function amdinfer::util::getTime": [[456, "function-amdinfer-util-gettime"]], "Function amdinfer::http::setCallback": [[457, "function-amdinfer-http-setcallback"]], "Function amdinfer::findFunc": [[458, "function-amdinfer-findfunc"]], "Function amdinfer::getWorker": [[459, "function-amdinfer-getworker"]], "Namespace @100": [[463, "namespace-100"]], "Namespace @85": [[464, "namespace-85"]], "Namespace @88": [[465, "namespace-88"]], "Namespace AKS": [[466, "namespace-aks"]], "Namespace Json": [[467, "namespace-json"]], "Namespace amdinfer": [[468, "namespace-amdinfer"]], "Namespace amdinfer::detail": [[469, "namespace-amdinfer-detail"]], "Namespace amdinfer::grpc": [[470, "namespace-amdinfer-grpc"]], "Namespace amdinfer::http": [[471, "namespace-amdinfer-http"]], "Namespace amdinfer::pre_post": [[472, "namespace-amdinfer-pre-post"]], "Namespace amdinfer::pre_post::detail": [[473, "namespace-amdinfer-pre-post-detail"]], "Namespace amdinfer::util": [[474, "namespace-amdinfer-util"]], "Namespace amdinfer::workers": [[475, "namespace-amdinfer-workers"]], "Namespace google": [[476, "namespace-google"]], "Namespace google::protobuf": [[477, "namespace-google-protobuf"]], "Namespace grpc": [[478, "namespace-grpc"]], "Namespace inference": [[479, "namespace-inference"]], "Namespace std": [[480, "namespace-std"]], "Namespace vart": [[481, "namespace-vart"]], "Program Listing for File amdinfer.hpp": [[483, "program-listing-for-file-amdinfer-hpp"]], "Program Listing for File build_options.hpp": [[484, "program-listing-for-file-build-options-hpp"]], "Program Listing for File client.hpp": [[485, "program-listing-for-file-client-hpp"]], "Program Listing for File grpc.hpp": [[486, "program-listing-for-file-grpc-hpp"]], "Program Listing for File http.hpp": [[487, "program-listing-for-file-http-hpp"]], "Program Listing for File native.hpp": [[488, "program-listing-for-file-native-hpp"]], "Program Listing for File websocket.hpp": [[489, "program-listing-for-file-websocket-hpp"]], "Program Listing for File data_types.hpp": [[490, "program-listing-for-file-data-types-hpp"]], "Program Listing for File exceptions.hpp": [[491, "program-listing-for-file-exceptions-hpp"]], "Program Listing for File inference_request.hpp": [[492, "program-listing-for-file-inference-request-hpp"]], "Program Listing for File inference_response.hpp": [[493, "program-listing-for-file-inference-response-hpp"]], "Program Listing for File inference_tensor.hpp": [[494, "program-listing-for-file-inference-tensor-hpp"]], "Program Listing for File mixins.hpp": [[495, "program-listing-for-file-mixins-hpp"]], "Program Listing for File model_metadata.hpp": [[496, "program-listing-for-file-model-metadata-hpp"]], "Program Listing for File parameters.hpp": [[497, "program-listing-for-file-parameters-hpp"]], "Program Listing for File predict_api.hpp": [[498, "program-listing-for-file-predict-api-hpp"]], "Program Listing for File server_metadata.hpp": [[499, "program-listing-for-file-server-metadata-hpp"]], "Program Listing for File tensor.hpp": [[500, "program-listing-for-file-tensor-hpp"]], "Program Listing for File declarations.hpp": [[501, "program-listing-for-file-declarations-hpp"]], "Program Listing for File server.hpp": [[502, "program-listing-for-file-server-hpp"]], "Program Listing for File batch.cpp": [[503, "program-listing-for-file-batch-cpp"]], "Program Listing for File batch.hpp": [[504, "program-listing-for-file-batch-hpp"]], "Program Listing for File batcher.cpp": [[505, "program-listing-for-file-batcher-cpp"]], "Program Listing for File batcher.hpp": [[506, "program-listing-for-file-batcher-hpp"]], "Program Listing for File hard.cpp": [[507, "program-listing-for-file-hard-cpp"]], "Program Listing for File hard.hpp": [[508, "program-listing-for-file-hard-hpp"]], "Program Listing for File soft.cpp": [[509, "program-listing-for-file-soft-cpp"]], "Program Listing for File soft.hpp": [[510, "program-listing-for-file-soft-hpp"]], "Program Listing for File buffer.cpp": [[511, "program-listing-for-file-buffer-cpp"]], "Program Listing for File buffer.hpp": [[512, "program-listing-for-file-buffer-hpp"]], "Program Listing for File cpu.cpp": [[513, "program-listing-for-file-cpu-cpp"]], "Program Listing for File cpu.hpp": [[514, "program-listing-for-file-cpu-hpp"]], "Program Listing for File vart_tensor.cpp": [[515, "program-listing-for-file-vart-tensor-cpp"]], "Program Listing for File vart_tensor.hpp": [[516, "program-listing-for-file-vart-tensor-hpp"]], "Program Listing for File vart_tensor_buffer.cpp": [[517, "program-listing-for-file-vart-tensor-buffer-cpp"]], "Program Listing for File vart_tensor_buffer.hpp": [[518, "program-listing-for-file-vart-tensor-buffer-hpp"]], "Program Listing for File vector_buffer.cpp": [[519, "program-listing-for-file-vector-buffer-cpp"]], "Program Listing for File vector_buffer.hpp": [[520, "program-listing-for-file-vector-buffer-hpp"]], "Program Listing for File client.cpp": [[521, "program-listing-for-file-client-cpp"]], "Program Listing for File grpc.cpp": [[522, "program-listing-for-file-grpc-cpp"]], "Program Listing for File grpc_internal.cpp": [[523, "program-listing-for-file-grpc-internal-cpp"]], "Program Listing for File grpc_internal.hpp": [[524, "program-listing-for-file-grpc-internal-hpp"]], "Program Listing for File http.cpp": [[525, "program-listing-for-file-http-cpp"]], "Program Listing for File http_internal.cpp": [[526, "program-listing-for-file-http-internal-cpp"]], "Program Listing for File http_internal.hpp": [[527, "program-listing-for-file-http-internal-hpp"]], "Program Listing for File native.cpp": [[528, "program-listing-for-file-native-cpp"]], "Program Listing for File native_internal.cpp": [[529, "program-listing-for-file-native-internal-cpp"]], "Program Listing for File native_internal.hpp": [[530, "program-listing-for-file-native-internal-hpp"]], "Program Listing for File websocket.cpp": [[531, "program-listing-for-file-websocket-cpp"]], "Program Listing for File api.cpp": [[532, "program-listing-for-file-api-cpp"]], "Program Listing for File api.hpp": [[533, "program-listing-for-file-api-hpp"]], "Program Listing for File data_types.cpp": [[534, "program-listing-for-file-data-types-cpp"]], "Program Listing for File data_types_internal.cpp": [[535, "program-listing-for-file-data-types-internal-cpp"]], "Program Listing for File data_types_internal.hpp": [[536, "program-listing-for-file-data-types-internal-hpp"]], "Program Listing for File endpoints.cpp": [[537, "program-listing-for-file-endpoints-cpp"]], "Program Listing for File endpoints.hpp": [[538, "program-listing-for-file-endpoints-hpp"]], "Program Listing for File inference_request.cpp": [[539, "program-listing-for-file-inference-request-cpp"]], "Program Listing for File inference_response.cpp": [[540, "program-listing-for-file-inference-response-cpp"]], "Program Listing for File inference_tensor.cpp": [[541, "program-listing-for-file-inference-tensor-cpp"]], "Program Listing for File interface.cpp": [[542, "program-listing-for-file-interface-cpp"]], "Program Listing for File interface.hpp": [[543, "program-listing-for-file-interface-hpp"]], "Program Listing for File manager.cpp": [[544, "program-listing-for-file-manager-cpp"]], "Program Listing for File manager.hpp": [[545, "program-listing-for-file-manager-hpp"]], "Program Listing for File cpu_allocator.cpp": [[546, "program-listing-for-file-cpu-allocator-cpp"]], "Program Listing for File cpu_allocator.hpp": [[547, "program-listing-for-file-cpu-allocator-hpp"]], "Program Listing for File memory_allocator.hpp": [[548, "program-listing-for-file-memory-allocator-hpp"]], "Program Listing for File pool.cpp": [[549, "program-listing-for-file-pool-cpp"]], "Program Listing for File pool.hpp": [[550, "program-listing-for-file-pool-hpp"]], "Program Listing for File vart_tensor_allocator.cpp": [[551, "program-listing-for-file-vart-tensor-allocator-cpp"]], "Program Listing for File vart_tensor_allocator.hpp": [[552, "program-listing-for-file-vart-tensor-allocator-hpp"]], "Program Listing for File model_metadata.cpp": [[553, "program-listing-for-file-model-metadata-cpp"]], "Program Listing for File model_repository.cpp": [[554, "program-listing-for-file-model-repository-cpp"]], "Program Listing for File model_repository.hpp": [[555, "program-listing-for-file-model-repository-hpp"]], "Program Listing for File parameters.cpp": [[556, "program-listing-for-file-parameters-cpp"]], "Program Listing for File predict_api.cpp": [[557, "program-listing-for-file-predict-api-cpp"]], "Program Listing for File predict_api_internal.hpp": [[558, "program-listing-for-file-predict-api-internal-hpp"]], "Program Listing for File request_container.hpp": [[559, "program-listing-for-file-request-container-hpp"]], "Program Listing for File shared_state.cpp": [[560, "program-listing-for-file-shared-state-cpp"]], "Program Listing for File shared_state.hpp": [[561, "program-listing-for-file-shared-state-hpp"]], "Program Listing for File tensor.cpp": [[562, "program-listing-for-file-tensor-cpp"]], "Program Listing for File worker_info.cpp": [[563, "program-listing-for-file-worker-info-cpp"]], "Program Listing for File worker_info.hpp": [[564, "program-listing-for-file-worker-info-hpp"]], "Program Listing for File main.cpp": [[565, "program-listing-for-file-main-cpp"]], "Program Listing for File echo.cpp": [[566, "program-listing-for-file-echo-cpp"], [615, "program-listing-for-file-echo-cpp"]], "Program Listing for File echo_multi.cpp": [[567, "program-listing-for-file-echo-multi-cpp"], [616, "program-listing-for-file-echo-multi-cpp"]], "Program Listing for File logging.cpp": [[568, "program-listing-for-file-logging-cpp"]], "Program Listing for File logging.hpp": [[569, "program-listing-for-file-logging-hpp"]], "Program Listing for File metrics.cpp": [[570, "program-listing-for-file-metrics-cpp"]], "Program Listing for File metrics.hpp": [[571, "program-listing-for-file-metrics-hpp"]], "Program Listing for File observer.hpp": [[572, "program-listing-for-file-observer-hpp"]], "Program Listing for File status.hpp": [[573, "program-listing-for-file-status-hpp"]], "Program Listing for File tracing.cpp": [[574, "program-listing-for-file-tracing-cpp"]], "Program Listing for File tracing.hpp": [[575, "program-listing-for-file-tracing-hpp"]], "Program Listing for File center_crop.hpp": [[576, "program-listing-for-file-center-crop-hpp"]], "Program Listing for File get_top_k.hpp": [[577, "program-listing-for-file-get-top-k-hpp"]], "Program Listing for File image_preprocess.hpp": [[578, "program-listing-for-file-image-preprocess-hpp"]], "Program Listing for File resnet50_postprocess.hpp": [[579, "program-listing-for-file-resnet50-postprocess-hpp"]], "Program Listing for File softmax.hpp": [[580, "program-listing-for-file-softmax-hpp"]], "Program Listing for File grpc_server.cpp": [[581, "program-listing-for-file-grpc-server-cpp"]], "Program Listing for File grpc_server.hpp": [[582, "program-listing-for-file-grpc-server-hpp"]], "Program Listing for File http_server.cpp": [[583, "program-listing-for-file-http-server-cpp"]], "Program Listing for File http_server.hpp": [[584, "program-listing-for-file-http-server-hpp"]], "Program Listing for File server.cpp": [[585, "program-listing-for-file-server-cpp"]], "Program Listing for File server_internal.hpp": [[586, "program-listing-for-file-server-internal-hpp"]], "Program Listing for File websocket_server.cpp": [[587, "program-listing-for-file-websocket-server-cpp"]], "Program Listing for File websocket_server.hpp": [[588, "program-listing-for-file-websocket-server-hpp"]], "Program Listing for File base64.cpp": [[589, "program-listing-for-file-base64-cpp"]], "Program Listing for File base64.hpp": [[590, "program-listing-for-file-base64-hpp"]], "Program Listing for File compression.cpp": [[591, "program-listing-for-file-compression-cpp"]], "Program Listing for File compression.hpp": [[592, "program-listing-for-file-compression-hpp"]], "Program Listing for File containers.hpp": [[593, "program-listing-for-file-containers-hpp"]], "Program Listing for File ctpl.cpp": [[594, "program-listing-for-file-ctpl-cpp"]], "Program Listing for File ctpl.hpp": [[595, "program-listing-for-file-ctpl-hpp"]], "Program Listing for File exec.cpp": [[596, "program-listing-for-file-exec-cpp"]], "Program Listing for File exec.hpp": [[597, "program-listing-for-file-exec-hpp"]], "Program Listing for File memory.hpp": [[598, "program-listing-for-file-memory-hpp"]], "Program Listing for File parse_env.cpp": [[599, "program-listing-for-file-parse-env-cpp"]], "Program Listing for File parse_env.hpp": [[600, "program-listing-for-file-parse-env-hpp"]], "Program Listing for File queue.hpp": [[601, "program-listing-for-file-queue-hpp"]], "Program Listing for File read_nth_line.cpp": [[602, "program-listing-for-file-read-nth-line-cpp"]], "Program Listing for File read_nth_line.hpp": [[603, "program-listing-for-file-read-nth-line-hpp"]], "Program Listing for File string.hpp": [[604, "program-listing-for-file-string-hpp"]], "Program Listing for File thread.hpp": [[605, "program-listing-for-file-thread-hpp"]], "Program Listing for File timer.cpp": [[606, "program-listing-for-file-timer-cpp"]], "Program Listing for File timer.hpp": [[607, "program-listing-for-file-timer-hpp"]], "Program Listing for File traits.hpp": [[608, "program-listing-for-file-traits-hpp"]], "Program Listing for File version.hpp": [[609, "program-listing-for-file-version-hpp"]], "Program Listing for File aks.cpp": [[610, "program-listing-for-file-aks-cpp"]], "Program Listing for File aks_detect.cpp": [[611, "program-listing-for-file-aks-detect-cpp"]], "Program Listing for File aks_detect.hpp": [[612, "program-listing-for-file-aks-detect-hpp"]], "Program Listing for File aks_detect_stream.cpp": [[613, "program-listing-for-file-aks-detect-stream-cpp"]], "Program Listing for File c_plus_plus.cpp": [[614, "program-listing-for-file-c-plus-plus-cpp"]], "Program Listing for File invert_image.cpp": [[617, "program-listing-for-file-invert-image-cpp"]], "Program Listing for File invert_video.cpp": [[618, "program-listing-for-file-invert-video-cpp"]], "Program Listing for File migraphx.cpp": [[619, "program-listing-for-file-migraphx-cpp"]], "Program Listing for File pt_zendnn.cpp": [[620, "program-listing-for-file-pt-zendnn-cpp"]], "Program Listing for File resnet50.cpp": [[621, "program-listing-for-file-resnet50-cpp"]], "Program Listing for File resnet50_stream.cpp": [[622, "program-listing-for-file-resnet50-stream-cpp"]], "Program Listing for File tf_zendnn.cpp": [[623, "program-listing-for-file-tf-zendnn-cpp"]], "Program Listing for File worker.hpp": [[624, "program-listing-for-file-worker-hpp"]], "Program Listing for File xmodel.cpp": [[625, "program-listing-for-file-xmodel-cpp"]], "Struct AddDataToTensor": [[626, "struct-adddatatotensor"]], "Struct Documentation": [[626, "struct-documentation"], [627, "struct-documentation"], [628, "struct-documentation"], [629, "struct-documentation"], [630, "struct-documentation"], [631, "struct-documentation"], [632, "struct-documentation"], [633, "struct-documentation"], [634, "struct-documentation"], [635, "struct-documentation"], [636, "struct-documentation"], [637, "struct-documentation"], [638, "struct-documentation"], [639, "struct-documentation"], [640, "struct-documentation"], [641, "struct-documentation"], [642, "struct-documentation"], [643, "struct-documentation"], [644, "struct-documentation"], [645, "struct-documentation"], [646, "struct-documentation"]], "Struct InferenceRequestInputSizes": [[627, "struct-inferencerequestinputsizes"]], "Struct InferenceResponseOutputSizes": [[628, "struct-inferenceresponseoutputsizes"]], "Struct LogOptions": [[629, "struct-logoptions"]], "Struct MemoryHeader": [[630, "struct-memoryheader"]], "Struct NativeClient::NativeClientImpl": [[631, "struct-nativeclient-nativeclientimpl"]], "Struct Observer": [[632, "struct-observer"]], "Template Struct Overloaded": [[633, "template-struct-overloaded"]], "Struct RequestContainer": [[634, "struct-requestcontainer"]], "Struct ServerMetadata": [[635, "struct-servermetadata"]], "Struct Server::ServerImpl": [[636, "struct-server-serverimpl"]], "Struct SetInputData": [[637, "struct-setinputdata"]], "Struct SetOutputData": [[638, "struct-setoutputdata"]], "Struct TensorSizes": [[639, "struct-tensorsizes"]], "Struct UpdateCommand": [[640, "struct-updatecommand"]], "Struct WriteData": [[641, "struct-writedata"]], "Template Struct ImagePreprocessOptions": [[642, "template-struct-imagepreprocessoptions"]], "Template Struct is_any": [[643, "template-struct-is-any"]], "Struct DetectResponse": [[644, "struct-detectresponse"]], "Template Struct less< amdinfer::ParameterMap >": [[645, "template-struct-less-amdinfer-parametermap"]], "Template Struct less< amdinfer::RequestParameters >": [[646, "template-struct-less-amdinfer-requestparameters"]], "Typedef amdinfer::BatchPtr": [[647, "typedef-amdinfer-batchptr"], [648, "typedef-amdinfer-batchptr"]], "Typedef Documentation": [[647, "typedef-documentation"], [648, "typedef-documentation"], [649, "typedef-documentation"], [650, "typedef-documentation"], [651, "typedef-documentation"], [652, "typedef-documentation"], [653, "typedef-documentation"], [654, "typedef-documentation"], [655, "typedef-documentation"], [656, "typedef-documentation"], [657, "typedef-documentation"], [658, "typedef-documentation"], [659, "typedef-documentation"], [660, "typedef-documentation"], [661, "typedef-documentation"], [662, "typedef-documentation"], [663, "typedef-documentation"], [664, "typedef-documentation"], [665, "typedef-documentation"], [666, "typedef-documentation"], [667, "typedef-documentation"], [668, "typedef-documentation"], [669, "typedef-documentation"], [670, "typedef-documentation"], [671, "typedef-documentation"], [672, "typedef-documentation"], [673, "typedef-documentation"], [674, "typedef-documentation"], [675, "typedef-documentation"], [676, "typedef-documentation"], [677, "typedef-documentation"], [678, "typedef-documentation"], [679, "typedef-documentation"], [680, "typedef-documentation"], [681, "typedef-documentation"], [682, "typedef-documentation"], [683, "typedef-documentation"], [684, "typedef-documentation"], [685, "typedef-documentation"], [686, "typedef-documentation"], [687, "typedef-documentation"], [688, "typedef-documentation"], [689, "typedef-documentation"], [690, "typedef-documentation"], [691, "typedef-documentation"], [692, "typedef-documentation"]], "Typedef amdinfer::BatchPtrQueue": [[649, "typedef-amdinfer-batchptrqueue"]], "Typedef amdinfer::fp16": [[650, "typedef-amdinfer-fp16"]], "Typedef amdinfer::Callback": [[651, "typedef-amdinfer-callback"], [683, "typedef-amdinfer-callback"]], "Typedef amdinfer::InterfacePtr": [[652, "typedef-amdinfer-interfaceptr"]], "Typedef amdinfer::InferenceRequestPtr": [[653, "typedef-amdinfer-inferencerequestptr"]], "Typedef amdinfer::BufferRawPtrs": [[654, "typedef-amdinfer-bufferrawptrs"], [665, "typedef-amdinfer-bufferrawptrs"]], "Typedef amdinfer::RequestContainerPtr": [[655, "typedef-amdinfer-requestcontainerptr"]], "Typedef amdinfer::TracePtr": [[656, "typedef-amdinfer-traceptr"]], "Typedef amdinfer::InferenceResponseFuture": [[657, "typedef-amdinfer-inferenceresponsefuture"], [658, "typedef-amdinfer-inferenceresponsefuture"]], "Typedef amdinfer::StringMap": [[659, "typedef-amdinfer-stringmap"]], "Typedef amdinfer::InferenceResponsePromisePtr": [[660, "typedef-amdinfer-inferenceresponsepromiseptr"], [684, "typedef-amdinfer-inferenceresponsepromiseptr"]], "Typedef amdinfer::InferenceResponseOutput": [[661, "typedef-amdinfer-inferenceresponseoutput"]], "Typedef amdinfer::BufferPtrs": [[662, "typedef-amdinfer-bufferptrs"]], "Typedef amdinfer::Kernels": [[663, "typedef-amdinfer-kernels"]], "Typedef amdinfer::BufferPtr": [[664, "typedef-amdinfer-bufferptr"]], "Typedef amdinfer::UpdateCommandQueue": [[666, "typedef-amdinfer-updatecommandqueue"], [679, "typedef-amdinfer-updatecommandqueue"]], "Typedef ServerContext": [[667, "typedef-servercontext"]], "Typedef ServerBuilder": [[668, "typedef-serverbuilder"]], "Typedef ServerAsyncResponseWriter": [[669, "typedef-serverasyncresponsewriter"]], "Typedef ServerCompletionQueue": [[670, "typedef-servercompletionqueue"]], "Typedef amdinfer::AsyncService": [[671, "typedef-amdinfer-asyncservice"]], "Typedef Server": [[672, "typedef-server"]], "Typedef StatusCode": [[673, "typedef-statuscode"]], "Typedef amdinfer::InputBuilder": [[674, "typedef-amdinfer-inputbuilder"]], "Typedef amdinfer::RequestBuilder": [[675, "typedef-amdinfer-requestbuilder"]], "Typedef amdinfer::OutputBuilder": [[676, "typedef-amdinfer-outputbuilder"]], "Typedef amdinfer::DrogonCallback": [[677, "typedef-amdinfer-drogoncallback"], [678, "typedef-amdinfer-drogoncallback"]], "Typedef amdinfer::ModelMetadataTensor": [[680, "typedef-amdinfer-modelmetadatatensor"]], "Typedef amdinfer::ParameterMapPtr": [[681, "typedef-amdinfer-parametermapptr"]], "Typedef amdinfer::Parameter": [[682, "typedef-amdinfer-parameter"], [686, "typedef-amdinfer-parameter"]], "Typedef amdinfer::RequestParametersPtr": [[685, "typedef-amdinfer-requestparametersptr"]], "Typedef amdinfer::InferenceRequestPtrQueue": [[687, "typedef-amdinfer-inferencerequestptrqueue"]], "Typedef amdinfer::BlockingQueue": [[688, "typedef-amdinfer-blockingqueue"]], "Typedef amdinfer::BufferPtrsQueuePtr": [[689, "typedef-amdinfer-bufferptrsqueueptr"]], "Typedef amdinfer::BufferPtrsQueue": [[690, "typedef-amdinfer-bufferptrsqueue"]], "Typedef VidProps": [[691, "typedef-vidprops"]], "Typedef amdinfer::util::TimePoint": [[692, "typedef-amdinfer-util-timepoint"]], "Directories": [[694, "directories"]], "Variable amdinfer::workers::kImageChannels": [[695, "variable-amdinfer-workers-kimagechannels"]], "Variable Documentation": [[695, "variable-documentation"], [696, "variable-documentation"], [697, "variable-documentation"], [698, "variable-documentation"], [699, "variable-documentation"], [700, "variable-documentation"], [701, "variable-documentation"], [702, "variable-documentation"], [703, "variable-documentation"], [704, "variable-documentation"], [705, "variable-documentation"], [706, "variable-documentation"], [707, "variable-documentation"], [708, "variable-documentation"], [709, "variable-documentation"], [710, "variable-documentation"], [711, "variable-documentation"], [712, "variable-documentation"], [713, "variable-documentation"], [714, "variable-documentation"], [715, "variable-documentation"], [716, "variable-documentation"], [717, "variable-documentation"], [718, "variable-documentation"], [719, "variable-documentation"], [720, "variable-documentation"], [721, "variable-documentation"], [722, "variable-documentation"], [723, "variable-documentation"], [724, "variable-documentation"], [725, "variable-documentation"], [726, "variable-documentation"], [727, "variable-documentation"], [728, "variable-documentation"], [729, "variable-documentation"], [730, "variable-documentation"], [731, "variable-documentation"], [732, "variable-documentation"], [733, "variable-documentation"], [734, "variable-documentation"], [735, "variable-documentation"], [736, "variable-documentation"], [737, "variable-documentation"], [738, "variable-documentation"], [739, "variable-documentation"], [740, "variable-documentation"], [741, "variable-documentation"], [742, "variable-documentation"], [743, "variable-documentation"], [744, "variable-documentation"], [745, "variable-documentation"]], "Variable amdinfer::workers::kImageSize": [[696, "variable-amdinfer-workers-kimagesize"], [733, "variable-amdinfer-workers-kimagesize"]], "Variable amdinfer::workers::kImageHeight": [[697, "variable-amdinfer-workers-kimageheight"]], "Variable amdinfer::workers::kImageWidth": [[698, "variable-amdinfer-workers-kimagewidth"]], "Variable amdinfer::workers::kAkdDetectResponseSize": [[699, "variable-amdinfer-workers-kakddetectresponsesize"]], "Variable kDefaultHttpPort": [[700, "variable-kdefaulthttpport"]], "Variable kDefaultDrogonThreads": [[701, "variable-kdefaultdrogonthreads"]], "Variable kMaxModelNameSize": [[702, "variable-kmaxmodelnamesize"]], "Variable kDefaultGrpcPort": [[703, "variable-kdefaultgrpcport"]], "Variable kMaxGrpcMessageSize": [[704, "variable-kmaxgrpcmessagesize"]], "Variable kMaxClientBodySize": [[705, "variable-kmaxclientbodysize"]], "Variable amdinfer::kOutputLengths": [[706, "variable-amdinfer-koutputlengths"], [711, "variable-amdinfer-koutputlengths"]], "Variable amdinfer::kInputLengths": [[707, "variable-amdinfer-kinputlengths"], [714, "variable-amdinfer-kinputlengths"]], "Variable amdinfer::kInputTensors": [[708, "variable-amdinfer-kinputtensors"], [712, "variable-amdinfer-kinputtensors"]], "Variable amdinfer::kOutputTensors": [[709, "variable-amdinfer-koutputtensors"], [713, "variable-amdinfer-koutputtensors"]], "Variable amdinfer::util::kThreadPoolLength": [[710, "variable-amdinfer-util-kthreadpoollength"]], "Variable amdinfer::pre_post::kDefaultImageSize": [[715, "variable-amdinfer-pre-post-kdefaultimagesize"]], "Variable amdinfer::workers::kMaxImageHeight": [[716, "variable-amdinfer-workers-kmaximageheight"]], "Variable amdinfer::workers::kMaxImageChannels": [[717, "variable-amdinfer-workers-kmaximagechannels"]], "Variable amdinfer::workers::kMaxImageWidth": [[718, "variable-amdinfer-workers-kmaximagewidth"]], "Variable amdinfer::workers::kMaxUrlLength": [[719, "variable-amdinfer-workers-kmaxurllength"]], "Variable usr_interrupt": [[720, "variable-usr-interrupt"]], "Variable amdinfer::kPercentile90": [[721, "variable-amdinfer-kpercentile90"]], "Variable amdinfer::kPercentile99": [[722, "variable-amdinfer-kpercentile99"]], "Variable amdinfer::kPercentile50": [[723, "variable-amdinfer-kpercentile50"]], "Variable kOutputTensors": [[724, "variable-koutputtensors"]], "Variable kInputTensors": [[725, "variable-kinputtensors"]], "Variable kOutputLengths": [[726, "variable-koutputlengths"]], "Variable kInputLengths": [[727, "variable-kinputlengths"]], "Variable amdinfer::kNumTraceData": [[728, "variable-amdinfer-knumtracedata"]], "Variable amdinfer::kDefaultCpuBlockSize": [[729, "variable-amdinfer-kdefaultcpublocksize"]], "Variable amdinfer::workers::kResNetImageSize": [[730, "variable-amdinfer-workers-kresnetimagesize"]], "Variable amdinfer::workers::kResNetImageChannels": [[731, "variable-amdinfer-workers-kresnetimagechannels"]], "Variable amdinfer::workers::kResNetOutputClasses": [[732, "variable-amdinfer-workers-kresnetoutputclasses"]], "Variable amdinfer::workers::kImageWidthStr": [[734, "variable-amdinfer-workers-kimagewidthstr"]], "Variable amdinfer::workers::kBoxHeight": [[735, "variable-amdinfer-workers-kboxheight"]], "Variable amdinfer::workers::kBoxHeightStr": [[736, "variable-amdinfer-workers-kboxheightstr"]], "Variable amdinfer::workers::kResnetClassifications": [[737, "variable-amdinfer-workers-kresnetclassifications"]], "Variable kDefaultTimeout": [[738, "variable-kdefaulttimeout"]], "Variable amdinfer::util::is_any_v": [[739, "variable-amdinfer-util-is-any-v"]], "Variable kAmdinferVersionMajor": [[740, "variable-kamdinferversionmajor"]], "Variable kAmdinferVersionLabel": [[741, "variable-kamdinferversionlabel"]], "Variable kAmdinferVersionPatch": [[742, "variable-kamdinferversionpatch"]], "Variable kAmdinferVersionMinor": [[743, "variable-kamdinferversionminor"]], "Variable kAmdinferVersion": [[744, "variable-kamdinferversion"]], "Variable amdinfer::kNumBufferAuto": [[745, "variable-amdinfer-knumbufferauto"]], "C++": [[746, "c"]], "Clients": [[746, "clients"]], "HTTP": [[746, "http"]], "Native": [[746, "native"]], "WebSocket": [[746, "websocket"]], "Core": [[746, "core"]], "DataType": [[746, "datatype"]], "Exceptions": [[746, "exceptions"]], "Prediction": [[746, "prediction"]], "Servers": [[746, "servers"]], "Dependencies": [[747, "dependencies"]], "Docker Image": [[747, "docker-image"]], "Base Image": [[747, "base-image"]], "Ubuntu Focal Repositories": [[747, "ubuntu-focal-repositories"]], "Ubuntu PPAs": [[747, "ubuntu-ppas"]], "PyPI": [[747, "pypi"]], "Github": [[747, "github"]], "Others": [[747, "others"]], "Xilinx": [[747, "xilinx"]], "AMD": [[747, "amd"]], "Included": [[747, "included"]], "Downloaded Files": [[747, "downloaded-files"]], "Docker": [[748, "docker"]], "Build the deployment Docker image": [[748, "build-the-deployment-docker-image"]], "Push to a registry": [[748, "push-to-a-registry"]], "Prepare the image for Docker deployment": [[748, "prepare-the-image-for-docker-deployment"]], "Start the container": [[748, "start-the-container"]], "Make a request": [[748, "make-a-request"]], "Running ResNet50 - C++": [[749, "running-resnet50-c"]], "Include the header": [[749, "include-the-header"]], "Start the server": [[749, "start-the-server"], [750, "start-the-server"]], "Create the client object": [[749, "create-the-client-object"], [750, "create-the-client-object"]], "Load a worker": [[749, "load-a-worker"], [750, "load-a-worker"], [752, "load-a-worker"]], "Prepare images": [[749, "prepare-images"], [750, "prepare-images"]], "Construct requests": [[749, "construct-requests"], [750, "construct-requests"]], "Make an inference": [[749, "make-an-inference"], [750, "make-an-inference"]], "Running ResNet50 - Python": [[750, "running-resnet50-python"]], "Include the module": [[750, "include-the-module"]], "Glossary": [[751, "glossary"]], "Hello World - Python": [[752, "hello-world-python"]], "Import the library": [[752, "import-the-library"]], "Create our client and server objects": [[752, "create-our-client-and-server-objects"]], "Is AMD Inference Server already running?": [[752, "is-amd-inference-server-already-running"]], "Inference": [[752, "inference"]], "Validate the response": [[752, "validate-the-response"]], "Clean up": [[752, "clean-up"]], "Next steps": [[752, "next-steps"], [765, "next-steps"]], "AMD Inference Server": [[753, "amd-inference-server"]], "Introduction": [[754, "introduction"]], "Features": [[754, "features"]], "Documentation overview": [[754, "documentation-overview"]], "Support": [[754, "support"]], "KServe": [[755, "kserve"]], "Set up Kubernetes and KServe": [[755, "set-up-kubernetes-and-kserve"]], "Get or build the AMD Inference Server Image": [[755, "get-or-build-the-amd-inference-server-image"]], "Start an inference service": [[755, "start-an-inference-service"]], "Serving Runtime": [[755, "serving-runtime"]], "Custom container": [[755, "custom-container"]], "Making Requests": [[755, "making-requests"]], "Debugging": [[755, "debugging"]], "Logs": [[757, "logs"]], "AMD Inference Server Logs": [[757, "amd-inference-server-logs"]], "Drogon Logs": [[757, "drogon-logs"]], "Quickstart": [[758, "quickstart"], [769, "quickstart"]], "GPUs - MIGraphX": [[759, "gpus-migraphx"]], "Set up the host and GPUs": [[759, "set-up-the-host-and-gpus"]], "Build an image": [[759, "build-an-image"], [770, "build-an-image"], [771, "build-an-image"]], "Start an image": [[759, "start-an-image"], [770, "start-an-image"]], "Get assets and models": [[759, "get-assets-and-models"], [770, "get-assets-and-models"], [771, "get-assets-and-models"]], "Performance": [[760, "performance"]], "wrk Benchmarks": [[760, "wrk-benchmarks"]], "Performance Factors": [[761, "performance-factors"]], "Hardware": [[761, "hardware"]], "Compile the right version": [[761, "compile-the-right-version"]], "Parallelism": [[761, "parallelism"]], "REST threads": [[761, "rest-threads"]], "Sending requests": [[761, "sending-requests"]], "Duplicating workers": [[761, "duplicating-workers"]], "Platforms": [[762, "platforms"]], "Python": [[763, "python"]], "Install the Python library": [[763, "install-the-python-library"]], "Build wheels": [[763, "build-wheels"]], "Quickstart - Deployment": [[764, "quickstart-deployment"]], "Prerequisites": [[764, "prerequisites"], [765, "prerequisites"]], "Prepare the model repository": [[764, "prepare-the-model-repository"]], "Get the deployment image": [[764, "get-the-deployment-image"]], "Start the image": [[764, "start-the-image"]], "Quickstart - Development": [[765, "quickstart-development"]], "Set up the host": [[765, "set-up-the-host"]], "Get the code": [[765, "get-the-code"]], "Build or get the Docker image": [[765, "build-or-get-the-docker-image"]], "Compiling the AMD Inference Server": [[765, "compiling-the-amd-inference-server"]], "Get test artifacts": [[765, "get-test-artifacts"]], "Run the AMD Inference Server": [[765, "run-the-amd-inference-server"]], "Quickstart - Inference": [[766, "quickstart-inference"]], "Get the library": [[766, "get-the-library"]], "Running the examples": [[766, "running-the-examples"]], "Using the library": [[766, "using-the-library"]], "REST Endpoints": [[767, "rest-endpoints"]], "Roadmap": [[768, "roadmap"]], "2022": [[768, "id1"]], "2022 Q1": [[768, "q1"]], "2022 Q2": [[768, "q2"]], "2022 Q3": [[768, "q3"]], "2023": [[768, "id2"]], "2023 Q1": [[768, "id3"]], "2023 Q2": [[768, "id4"]], "2023 Q3": [[768, "id5"]], "2023 Q4": [[768, "q4"]], "Future": [[768, "future"]], "FPGAs - Vitis AI": [[770, "fpgas-vitis-ai"]], "Set up the host and FPGAs": [[770, "set-up-the-host-and-fpgas"]], "Software": [[770, "software"]], "Shell": [[770, "shell"]], "XCLBINs": [[770, "xclbins"]], "CPUs - ZenDNN": [[771, "cpus-zendnn"]], "Download the ZenDNN packages": [[771, "download-the-zendnn-packages"]], "Build the image": [[771, "build-the-image"]], "Freezing PyTorch models": [[771, "freezing-pytorch-models"]], "Run Tests": [[771, "run-tests"]], "Tune performance": [[771, "tune-performance"]]}, "indexentries": {"amdinfer::batch (c++ class)": [[7, "_CPPv4N8amdinfer5BatchE"]], "amdinfer::batch::addrequest (c++ function)": [[7, "_CPPv4N8amdinfer5Batch10addRequestE19InferenceRequestPtr"]], "amdinfer::batch::begin (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch5beginEv"]], "amdinfer::batch::empty (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch5emptyEv"]], "amdinfer::batch::end (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch3endEv"]], "amdinfer::batch::getinputbuffers (c++ function)": [[7, "_CPPv4N8amdinfer5Batch15getInputBuffersEv"]], "amdinfer::batch::getinputsize (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch12getInputSizeEv"]], "amdinfer::batch::getoutputbuffers (c++ function)": [[7, "_CPPv4N8amdinfer5Batch16getOutputBuffersEv"]], "amdinfer::batch::getoutputsize (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch13getOutputSizeEv"]], "amdinfer::batch::getrawinputbuffers (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch18getRawInputBuffersEv"]], "amdinfer::batch::getrawoutputbuffers (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch19getRawOutputBuffersEv"]], "amdinfer::batch::getrequest (c++ function)": [[7, "_CPPv4N8amdinfer5Batch10getRequestE6size_t"]], "amdinfer::batch::getrequests (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch11getRequestsEv"]], "amdinfer::batch::setbuffers (c++ function)": [[7, "_CPPv4N8amdinfer5Batch10setBuffersE10BufferPtrs10BufferPtrs"]], "amdinfer::batch::size (c++ function)": [[7, "_CPPv4NK8amdinfer5Batch4sizeEv"]], "amdinfer::batcher (c++ class)": [[8, "_CPPv4N8amdinfer7BatcherE"]], "amdinfer::batcher::batcher (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPool"], [8, "_CPPv4N8amdinfer7Batcher7BatcherEP10MemoryPoolP12ParameterMap"], [8, "_CPPv4N8amdinfer7Batcher7BatcherERK7Batcher"], [8, "_CPPv4N8amdinfer7Batcher7BatcherERR7Batcher"]], "amdinfer::batcher::batch_size_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher11batch_size_E"]], "amdinfer::batcher::end (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher3endEv"]], "amdinfer::batcher::enqueue (c++ function)": [[8, "_CPPv4NK8amdinfer7Batcher7enqueueE19RequestContainerPtr"]], "amdinfer::batcher::getinputqueue (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher13getInputQueueEv"]], "amdinfer::batcher::getname (c++ function)": [[8, "_CPPv4NK8amdinfer7Batcher7getNameEv"]], "amdinfer::batcher::getoutputqueue (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher14getOutputQueueEv"]], "amdinfer::batcher::getstatus (c++ function)": [[8, "_CPPv4NK8amdinfer7Batcher9getStatusEv"]], "amdinfer::batcher::input_queue_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher12input_queue_E"]], "amdinfer::batcher::model_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher6model_E"]], "amdinfer::batcher::operator= (c++ function)": [[8, "_CPPv4N8amdinfer7BatcheraSERK7Batcher"], [8, "_CPPv4N8amdinfer7BatcheraSERR7Batcher"]], "amdinfer::batcher::output_queue_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher13output_queue_E"]], "amdinfer::batcher::parameters_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher11parameters_E"]], "amdinfer::batcher::pool_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher5pool_E"]], "amdinfer::batcher::run (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher3runERKNSt6vectorI16MemoryAllocatorsEE"]], "amdinfer::batcher::setbatchsize (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher12setBatchSizeE6size_t"]], "amdinfer::batcher::setname (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher7setNameERKNSt6stringE"]], "amdinfer::batcher::start (c++ function)": [[8, "_CPPv4N8amdinfer7Batcher5startERKNSt6vectorI16MemoryAllocatorsEE"]], "amdinfer::batcher::thread_ (c++ member)": [[8, "_CPPv4N8amdinfer7Batcher7thread_E"]], "amdinfer::batcher::~batcher (c++ function)": [[8, "_CPPv4N8amdinfer7BatcherD0Ev"]], "amdinfer::buffer (c++ class)": [[9, "_CPPv4N8amdinfer6BufferE"]], "amdinfer::buffer::buffer (c++ function)": [[9, "_CPPv4N8amdinfer6Buffer6BufferE16MemoryAllocators"]], "amdinfer::buffer::data (c++ function)": [[9, "_CPPv4N8amdinfer6Buffer4dataE6size_t"]], "amdinfer::buffer::getallocator (c++ function)": [[9, "_CPPv4NK8amdinfer6Buffer12getAllocatorEv"]], "amdinfer::buffer::write (c++ function)": [[9, "_CPPv4I0EN8amdinfer6Buffer5writeE6size_t1T6size_t"], [9, "_CPPv4N8amdinfer6Buffer5writeEPv6size_t6size_t"]], "amdinfer::buffer::~buffer (c++ function)": [[9, "_CPPv4N8amdinfer6BufferD0Ev"]], "amdinfer::calldata (c++ class)": [[10, "_CPPv4I00EN8amdinfer8CallDataE"]], "amdinfer::calldata::calldata (c++ function)": [[10, "_CPPv4N8amdinfer8CallData8CallDataEP12AsyncServicePN4grpc21ServerCompletionQueueE"]], "amdinfer::calldata::callstatus (c++ enum)": [[10, "_CPPv4N8amdinfer8CallData10CallStatusE"]], "amdinfer::calldata::callstatus::create (c++ enumerator)": [[10, "_CPPv4N8amdinfer8CallData10CallStatus6CreateE"]], "amdinfer::calldata::callstatus::finish (c++ enumerator)": [[10, "_CPPv4N8amdinfer8CallData10CallStatus6FinishE"]], "amdinfer::calldata::callstatus::process (c++ enumerator)": [[10, "_CPPv4N8amdinfer8CallData10CallStatus7ProcessE"]], "amdinfer::calldata::callstatus::wait (c++ enumerator)": [[10, "_CPPv4N8amdinfer8CallData10CallStatus4WaitE"]], "amdinfer::calldata::addnewcalldata (c++ function)": [[10, "_CPPv4N8amdinfer8CallData14addNewCallDataEv"]], "amdinfer::calldata::cq_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData3cq_E"]], "amdinfer::calldata::ctx_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData4ctx_E"]], "amdinfer::calldata::finish (c++ function)": [[10, "_CPPv4N8amdinfer8CallData6finishERKN4grpc6StatusE"]], "amdinfer::calldata::handlerequest (c++ function)": [[10, "_CPPv4N8amdinfer8CallData13handleRequestEv"]], "amdinfer::calldata::proceed (c++ function)": [[10, "_CPPv4N8amdinfer8CallData7proceedEv"]], "amdinfer::calldata::reply_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData6reply_E"]], "amdinfer::calldata::request_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData8request_E"]], "amdinfer::calldata::service_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData8service_E"]], "amdinfer::calldata::status_ (c++ member)": [[10, "_CPPv4N8amdinfer8CallData7status_E"]], "amdinfer::calldata::waitforrequest (c++ function)": [[10, "_CPPv4N8amdinfer8CallData14waitForRequestEv"]], "amdinfer::calldata::~calldata (c++ function)": [[10, "_CPPv4N8amdinfer8CallDataD0Ev"]], "amdinfer::calldatabase (c++ class)": [[11, "_CPPv4N8amdinfer12CallDataBaseE"]], "amdinfer::calldatabase::proceed (c++ function)": [[11, "_CPPv4N8amdinfer12CallDataBase7proceedEv"]], "amdinfer::calldatahashardware (c++ class)": [[12, "_CPPv4N8amdinfer19CallDataHasHardwareE"]], "amdinfer::calldatahashardware::calldatahashardware (c++ function)": [[12, "_CPPv4N8amdinfer19CallDataHasHardware19CallDataHasHardwareEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatahashardware::addnewcalldata (c++ function)": [[12, "_CPPv4N8amdinfer19CallDataHasHardware14addNewCallDataEv"]], "amdinfer::calldatahashardware::handlerequest (c++ function)": [[12, "_CPPv4N8amdinfer19CallDataHasHardware13handleRequestEv"]], "amdinfer::calldatahashardware::waitforrequest (c++ function)": [[12, "_CPPv4N8amdinfer19CallDataHasHardware14waitForRequestEv"]], "amdinfer::calldatamodelinfer (c++ class)": [[13, "_CPPv4N8amdinfer18CallDataModelInferE"]], "amdinfer::calldatamodelinfer::calldatamodelinfer (c++ function)": [[13, "_CPPv4N8amdinfer18CallDataModelInfer18CallDataModelInferEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodelinfer::addnewcalldata (c++ function)": [[13, "_CPPv4N8amdinfer18CallDataModelInfer14addNewCallDataEv"]], "amdinfer::calldatamodelinfer::getreply (c++ function)": [[13, "_CPPv4N8amdinfer18CallDataModelInfer8getReplyEv"]], "amdinfer::calldatamodelinfer::getrequest (c++ function)": [[13, "_CPPv4NK8amdinfer18CallDataModelInfer10getRequestEv"]], "amdinfer::calldatamodelinfer::handlerequest (c++ function)": [[13, "_CPPv4N8amdinfer18CallDataModelInfer13handleRequestEv"]], "amdinfer::calldatamodelinfer::waitforrequest (c++ function)": [[13, "_CPPv4N8amdinfer18CallDataModelInfer14waitForRequestEv"]], "amdinfer::calldatamodellist (c++ class)": [[14, "_CPPv4N8amdinfer17CallDataModelListE"]], "amdinfer::calldatamodellist::calldatamodellist (c++ function)": [[14, "_CPPv4N8amdinfer17CallDataModelList17CallDataModelListEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodellist::addnewcalldata (c++ function)": [[14, "_CPPv4N8amdinfer17CallDataModelList14addNewCallDataEv"]], "amdinfer::calldatamodellist::handlerequest (c++ function)": [[14, "_CPPv4N8amdinfer17CallDataModelList13handleRequestEv"]], "amdinfer::calldatamodellist::waitforrequest (c++ function)": [[14, "_CPPv4N8amdinfer17CallDataModelList14waitForRequestEv"]], "amdinfer::calldatamodelload (c++ class)": [[15, "_CPPv4N8amdinfer17CallDataModelLoadE"]], "amdinfer::calldatamodelload::calldatamodelload (c++ function)": [[15, "_CPPv4N8amdinfer17CallDataModelLoad17CallDataModelLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodelload::addnewcalldata (c++ function)": [[15, "_CPPv4N8amdinfer17CallDataModelLoad14addNewCallDataEv"]], "amdinfer::calldatamodelload::handlerequest (c++ function)": [[15, "_CPPv4N8amdinfer17CallDataModelLoad13handleRequestEv"]], "amdinfer::calldatamodelload::waitforrequest (c++ function)": [[15, "_CPPv4N8amdinfer17CallDataModelLoad14waitForRequestEv"]], "amdinfer::calldatamodelmetadata (c++ class)": [[16, "_CPPv4N8amdinfer21CallDataModelMetadataE"]], "amdinfer::calldatamodelmetadata::calldatamodelmetadata (c++ function)": [[16, "_CPPv4N8amdinfer21CallDataModelMetadata21CallDataModelMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodelmetadata::addnewcalldata (c++ function)": [[16, "_CPPv4N8amdinfer21CallDataModelMetadata14addNewCallDataEv"]], "amdinfer::calldatamodelmetadata::handlerequest (c++ function)": [[16, "_CPPv4N8amdinfer21CallDataModelMetadata13handleRequestEv"]], "amdinfer::calldatamodelmetadata::waitforrequest (c++ function)": [[16, "_CPPv4N8amdinfer21CallDataModelMetadata14waitForRequestEv"]], "amdinfer::calldatamodelready (c++ class)": [[17, "_CPPv4N8amdinfer18CallDataModelReadyE"]], "amdinfer::calldatamodelready::calldatamodelready (c++ function)": [[17, "_CPPv4N8amdinfer18CallDataModelReady18CallDataModelReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodelready::addnewcalldata (c++ function)": [[17, "_CPPv4N8amdinfer18CallDataModelReady14addNewCallDataEv"]], "amdinfer::calldatamodelready::handlerequest (c++ function)": [[17, "_CPPv4N8amdinfer18CallDataModelReady13handleRequestEv"]], "amdinfer::calldatamodelready::waitforrequest (c++ function)": [[17, "_CPPv4N8amdinfer18CallDataModelReady14waitForRequestEv"]], "amdinfer::calldatamodelunload (c++ class)": [[18, "_CPPv4N8amdinfer19CallDataModelUnloadE"]], "amdinfer::calldatamodelunload::calldatamodelunload (c++ function)": [[18, "_CPPv4N8amdinfer19CallDataModelUnload19CallDataModelUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldatamodelunload::addnewcalldata (c++ function)": [[18, "_CPPv4N8amdinfer19CallDataModelUnload14addNewCallDataEv"]], "amdinfer::calldatamodelunload::handlerequest (c++ function)": [[18, "_CPPv4N8amdinfer19CallDataModelUnload13handleRequestEv"]], "amdinfer::calldatamodelunload::waitforrequest (c++ function)": [[18, "_CPPv4N8amdinfer19CallDataModelUnload14waitForRequestEv"]], "amdinfer::calldataserverlive (c++ class)": [[19, "_CPPv4N8amdinfer18CallDataServerLiveE"]], "amdinfer::calldataserverlive::calldataserverlive (c++ function)": [[19, "_CPPv4N8amdinfer18CallDataServerLive18CallDataServerLiveEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldataserverlive::addnewcalldata (c++ function)": [[19, "_CPPv4N8amdinfer18CallDataServerLive14addNewCallDataEv"]], "amdinfer::calldataserverlive::handlerequest (c++ function)": [[19, "_CPPv4N8amdinfer18CallDataServerLive13handleRequestEv"]], "amdinfer::calldataserverlive::waitforrequest (c++ function)": [[19, "_CPPv4N8amdinfer18CallDataServerLive14waitForRequestEv"]], "amdinfer::calldataservermetadata (c++ class)": [[20, "_CPPv4N8amdinfer22CallDataServerMetadataE"]], "amdinfer::calldataservermetadata::calldataservermetadata (c++ function)": [[20, "_CPPv4N8amdinfer22CallDataServerMetadata22CallDataServerMetadataEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldataservermetadata::addnewcalldata (c++ function)": [[20, "_CPPv4N8amdinfer22CallDataServerMetadata14addNewCallDataEv"]], "amdinfer::calldataservermetadata::handlerequest (c++ function)": [[20, "_CPPv4N8amdinfer22CallDataServerMetadata13handleRequestEv"]], "amdinfer::calldataservermetadata::waitforrequest (c++ function)": [[20, "_CPPv4N8amdinfer22CallDataServerMetadata14waitForRequestEv"]], "amdinfer::calldataserverready (c++ class)": [[21, "_CPPv4N8amdinfer19CallDataServerReadyE"]], "amdinfer::calldataserverready::calldataserverready (c++ function)": [[21, "_CPPv4N8amdinfer19CallDataServerReady19CallDataServerReadyEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldataserverready::addnewcalldata (c++ function)": [[21, "_CPPv4N8amdinfer19CallDataServerReady14addNewCallDataEv"]], "amdinfer::calldataserverready::handlerequest (c++ function)": [[21, "_CPPv4N8amdinfer19CallDataServerReady13handleRequestEv"]], "amdinfer::calldataserverready::waitforrequest (c++ function)": [[21, "_CPPv4N8amdinfer19CallDataServerReady14waitForRequestEv"]], "amdinfer::calldataserverstream (c++ class)": [[22, "_CPPv4I00EN8amdinfer20CallDataServerStreamE"]], "amdinfer::calldataserverstream::calldataserverstream (c++ function)": [[22, "_CPPv4N8amdinfer20CallDataServerStream20CallDataServerStreamEP12AsyncServicePN4grpc21ServerCompletionQueueE"]], "amdinfer::calldataserverstream::finish (c++ function)": [[22, "_CPPv4N8amdinfer20CallDataServerStream6finishERKN4grpc6StatusE"]], "amdinfer::calldataserverstream::responder_ (c++ member)": [[22, "_CPPv4N8amdinfer20CallDataServerStream10responder_E"]], "amdinfer::calldataserverstream::write (c++ function)": [[22, "_CPPv4N8amdinfer20CallDataServerStream5writeERK9ReplyType"]], "amdinfer::calldataunary (c++ class)": [[23, "_CPPv4I00EN8amdinfer13CallDataUnaryE"]], "amdinfer::calldataunary::calldataunary (c++ function)": [[23, "_CPPv4N8amdinfer13CallDataUnary13CallDataUnaryEP12AsyncServicePN4grpc21ServerCompletionQueueE"]], "amdinfer::calldataunary::finish (c++ function)": [[23, "_CPPv4N8amdinfer13CallDataUnary6finishERKN4grpc6StatusE"]], "amdinfer::calldataunary::responder_ (c++ member)": [[23, "_CPPv4N8amdinfer13CallDataUnary10responder_E"]], "amdinfer::calldataworkerload (c++ class)": [[24, "_CPPv4N8amdinfer18CallDataWorkerLoadE"]], "amdinfer::calldataworkerload::calldataworkerload (c++ function)": [[24, "_CPPv4N8amdinfer18CallDataWorkerLoad18CallDataWorkerLoadEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldataworkerload::addnewcalldata (c++ function)": [[24, "_CPPv4N8amdinfer18CallDataWorkerLoad14addNewCallDataEv"]], "amdinfer::calldataworkerload::handlerequest (c++ function)": [[24, "_CPPv4N8amdinfer18CallDataWorkerLoad13handleRequestEv"]], "amdinfer::calldataworkerload::waitforrequest (c++ function)": [[24, "_CPPv4N8amdinfer18CallDataWorkerLoad14waitForRequestEv"]], "amdinfer::calldataworkerunload (c++ class)": [[25, "_CPPv4N8amdinfer20CallDataWorkerUnloadE"]], "amdinfer::calldataworkerunload::calldataworkerunload (c++ function)": [[25, "_CPPv4N8amdinfer20CallDataWorkerUnload20CallDataWorkerUnloadEP12AsyncServiceP21ServerCompletionQueueP11SharedState"]], "amdinfer::calldataworkerunload::addnewcalldata (c++ function)": [[25, "_CPPv4N8amdinfer20CallDataWorkerUnload14addNewCallDataEv"]], "amdinfer::calldataworkerunload::handlerequest (c++ function)": [[25, "_CPPv4N8amdinfer20CallDataWorkerUnload13handleRequestEv"]], "amdinfer::calldataworkerunload::waitforrequest (c++ function)": [[25, "_CPPv4N8amdinfer20CallDataWorkerUnload14waitForRequestEv"]], "amdinfer::client (c++ class)": [[26, "_CPPv4N8amdinfer6ClientE"]], "amdinfer::client::client (c++ function)": [[26, "_CPPv4N8amdinfer6Client6ClientEv"]], "amdinfer::client::hashardware (c++ function)": [[26, "_CPPv4NK8amdinfer6Client11hasHardwareERKNSt6stringEi"]], "amdinfer::client::modelinfer (c++ function)": [[26, "_CPPv4NK8amdinfer6Client10modelInferERKNSt6stringERK16InferenceRequest"]], "amdinfer::client::modelinferasync (c++ function)": [[26, "_CPPv4NK8amdinfer6Client15modelInferAsyncERKNSt6stringERK16InferenceRequest"]], "amdinfer::client::modellist (c++ function)": [[26, "_CPPv4NK8amdinfer6Client9modelListEv"]], "amdinfer::client::modelload (c++ function)": [[26, "_CPPv4NK8amdinfer6Client9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::client::modelmetadata (c++ function)": [[26, "_CPPv4NK8amdinfer6Client13modelMetadataERKNSt6stringE"]], "amdinfer::client::modelready (c++ function)": [[26, "_CPPv4NK8amdinfer6Client10modelReadyERKNSt6stringE"]], "amdinfer::client::modelunload (c++ function)": [[26, "_CPPv4NK8amdinfer6Client11modelUnloadERKNSt6stringE"]], "amdinfer::client::serverlive (c++ function)": [[26, "_CPPv4NK8amdinfer6Client10serverLiveEv"]], "amdinfer::client::servermetadata (c++ function)": [[26, "_CPPv4NK8amdinfer6Client14serverMetadataEv"]], "amdinfer::client::serverready (c++ function)": [[26, "_CPPv4NK8amdinfer6Client11serverReadyEv"]], "amdinfer::client::workerload (c++ function)": [[26, "_CPPv4NK8amdinfer6Client10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::client::workerunload (c++ function)": [[26, "_CPPv4NK8amdinfer6Client12workerUnloadERKNSt6stringE"]], "amdinfer::client::~client (c++ function)": [[26, "_CPPv4N8amdinfer6ClientD0Ev"]], "amdinfer::cpuallocator (c++ class)": [[28, "_CPPv4N8amdinfer12CpuAllocatorE"]], "amdinfer::cpuallocator::cpuallocator (c++ function)": [[28, "_CPPv4N8amdinfer12CpuAllocator12CpuAllocatorE6size_t6size_t"]], "amdinfer::cpuallocator::get (c++ function)": [[28, "_CPPv4N8amdinfer12CpuAllocator3getERK6Tensor6size_t"]], "amdinfer::cpuallocator::put (c++ function)": [[28, "_CPPv4N8amdinfer12CpuAllocator3putEPKv"]], "amdinfer::cpubuffer (c++ class)": [[29, "_CPPv4N8amdinfer9CpuBufferE"]], "amdinfer::cpubuffer::cpubuffer (c++ function)": [[29, "_CPPv4N8amdinfer9CpuBuffer9CpuBufferEPv16MemoryAllocators"]], "amdinfer::cpubuffer::data (c++ function)": [[29, "_CPPv4N8amdinfer9CpuBuffer4dataE6size_t"]], "amdinfer::datatype (c++ class)": [[30, "_CPPv4N8amdinfer8DataTypeE"], [746, "_CPPv4N8amdinfer8DataTypeE"]], "amdinfer::datatype::datatype (c++ function)": [[30, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE"], [30, "_CPPv4N8amdinfer8DataType8DataTypeEPKc"], [30, "_CPPv4N8amdinfer8DataType8DataTypeEv"], [746, "_CPPv4N8amdinfer8DataType8DataTypeEN8DataType5ValueE"], [746, "_CPPv4N8amdinfer8DataType8DataTypeEPKc"], [746, "_CPPv4N8amdinfer8DataType8DataTypeEv"]], "amdinfer::datatype::value (c++ enum)": [[30, "_CPPv4N8amdinfer8DataType5ValueE"]], "amdinfer::datatype::value::bool (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value4BoolE"]], "amdinfer::datatype::value::fp16 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value4FP16E"], [30, "_CPPv4N8amdinfer8DataType5Value4Fp16E"]], "amdinfer::datatype::value::fp32 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value4FP32E"], [30, "_CPPv4N8amdinfer8DataType5Value4Fp32E"]], "amdinfer::datatype::value::fp64 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value4FP64E"], [30, "_CPPv4N8amdinfer8DataType5Value4Fp64E"]], "amdinfer::datatype::value::int16 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value5Int16E"]], "amdinfer::datatype::value::int32 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value5Int32E"]], "amdinfer::datatype::value::int64 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value5Int64E"]], "amdinfer::datatype::value::int8 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value4Int8E"]], "amdinfer::datatype::value::string (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value6StringE"]], "amdinfer::datatype::value::uint16 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value6Uint16E"]], "amdinfer::datatype::value::uint32 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value6Uint32E"]], "amdinfer::datatype::value::uint64 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value6Uint64E"]], "amdinfer::datatype::value::uint8 (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value5Uint8E"]], "amdinfer::datatype::value::unknown (c++ enumerator)": [[30, "_CPPv4N8amdinfer8DataType5Value7UnknownE"]], "amdinfer::datatype::operator value (c++ function)": [[30, "_CPPv4NK8amdinfer8DataTypecv5ValueEv"], [746, "_CPPv4NK8amdinfer8DataTypecv5ValueEv"]], "amdinfer::datatype::operator<< (c++ function)": [[30, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType"], [746, "_CPPv4N8amdinfer8DataTypelsERNSt7ostreamERK8DataType"]], "amdinfer::datatype::size (c++ function)": [[30, "_CPPv4NK8amdinfer8DataType4sizeEv"], [746, "_CPPv4NK8amdinfer8DataType4sizeEv"]], "amdinfer::datatype::str (c++ function)": [[30, "_CPPv4NK8amdinfer8DataType3strEv"], [746, "_CPPv4NK8amdinfer8DataType3strEv"]], "amdinfer::endpoints (c++ class)": [[32, "_CPPv4N8amdinfer9EndpointsE"]], "amdinfer::endpoints::endpoints (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints9EndpointsEv"]], "amdinfer::endpoints::exists (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints6existsERKNSt6stringE"]], "amdinfer::endpoints::getpool (c++ function)": [[32, "_CPPv4NK8amdinfer9Endpoints7getPoolEv"]], "amdinfer::endpoints::infer (c++ function)": [[32, "_CPPv4NK8amdinfer9Endpoints5inferERKNSt6stringENSt10unique_ptrI16RequestContainerEE"]], "amdinfer::endpoints::list (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints4listEv"]], "amdinfer::endpoints::load (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints4loadERKNSt6stringE12ParameterMap"]], "amdinfer::endpoints::metadata (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints8metadataERKNSt6stringE"]], "amdinfer::endpoints::ready (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints5readyERKNSt6stringE"]], "amdinfer::endpoints::shutdown (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints8shutdownEv"]], "amdinfer::endpoints::unload (c++ function)": [[32, "_CPPv4N8amdinfer9Endpoints6unloadERKNSt6stringE"]], "amdinfer::endpoints::~endpoints (c++ function)": [[32, "_CPPv4N8amdinfer9EndpointsD0Ev"]], "amdinfer::grpcclient (c++ class)": [[34, "_CPPv4N8amdinfer10GrpcClientE"], [746, "_CPPv4N8amdinfer10GrpcClientE"]], "amdinfer::grpcclient::grpcclient (c++ function)": [[34, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERK10GrpcClient"], [34, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE"], [34, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE"], [34, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient"], [746, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERK10GrpcClient"], [746, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt10shared_ptrIN4grpc7ChannelEEE"], [746, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERKNSt6stringE"], [746, "_CPPv4N8amdinfer10GrpcClient10GrpcClientERR10GrpcClient"]], "amdinfer::grpcclient::grpcclientimpl (c++ class)": [[34, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE"], [35, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE"], [746, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImplE"]], "amdinfer::grpcclient::grpcclientimpl::grpcclientimpl (c++ function)": [[34, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE"], [35, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl14GrpcClientImplERKNSt10shared_ptrIN4grpc7ChannelEEE"]], "amdinfer::grpcclient::grpcclientimpl::getstub (c++ function)": [[34, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl7getStubEv"], [35, "_CPPv4N8amdinfer10GrpcClient14GrpcClientImpl7getStubEv"]], "amdinfer::grpcclient::hashardware (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi"], [746, "_CPPv4NK8amdinfer10GrpcClient11hasHardwareERKNSt6stringEi"]], "amdinfer::grpcclient::modelinfer (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer10GrpcClient10modelInferERKNSt6stringERK16InferenceRequest"]], "amdinfer::grpcclient::modelinferasync (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer10GrpcClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"]], "amdinfer::grpcclient::modellist (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient9modelListEv"], [746, "_CPPv4NK8amdinfer10GrpcClient9modelListEv"]], "amdinfer::grpcclient::modelload (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer10GrpcClient9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::grpcclient::modelmetadata (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10GrpcClient13modelMetadataERKNSt6stringE"]], "amdinfer::grpcclient::modelready (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10GrpcClient10modelReadyERKNSt6stringE"]], "amdinfer::grpcclient::modelunload (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10GrpcClient11modelUnloadERKNSt6stringE"]], "amdinfer::grpcclient::operator= (c++ function)": [[34, "_CPPv4N8amdinfer10GrpcClientaSERK10GrpcClient"], [34, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient"], [746, "_CPPv4N8amdinfer10GrpcClientaSERK10GrpcClient"], [746, "_CPPv4N8amdinfer10GrpcClientaSERR10GrpcClient"]], "amdinfer::grpcclient::serverlive (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient10serverLiveEv"], [746, "_CPPv4NK8amdinfer10GrpcClient10serverLiveEv"]], "amdinfer::grpcclient::servermetadata (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient14serverMetadataEv"], [746, "_CPPv4NK8amdinfer10GrpcClient14serverMetadataEv"]], "amdinfer::grpcclient::serverready (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient11serverReadyEv"], [746, "_CPPv4NK8amdinfer10GrpcClient11serverReadyEv"]], "amdinfer::grpcclient::workerload (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer10GrpcClient10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::grpcclient::workerunload (c++ function)": [[34, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10GrpcClient12workerUnloadERKNSt6stringE"]], "amdinfer::grpcclient::~grpcclient (c++ function)": [[34, "_CPPv4N8amdinfer10GrpcClientD0Ev"], [746, "_CPPv4N8amdinfer10GrpcClientD0Ev"]], "amdinfer::grpcserver (c++ class)": [[36, "_CPPv4N8amdinfer10GrpcServerE"]], "amdinfer::grpcserver::grpcserver (c++ function)": [[36, "_CPPv4N8amdinfer10GrpcServer10GrpcServerERK10GrpcServer"], [36, "_CPPv4N8amdinfer10GrpcServer10GrpcServerERR10GrpcServer"]], "amdinfer::grpcserver::create (c++ function)": [[36, "_CPPv4N8amdinfer10GrpcServer6createERKNSt6stringEKiP11SharedState"]], "amdinfer::grpcserver::getinstance (c++ function)": [[36, "_CPPv4N8amdinfer10GrpcServer11getInstanceEv"]], "amdinfer::grpcserver::operator= (c++ function)": [[36, "_CPPv4N8amdinfer10GrpcServeraSERK10GrpcServer"], [36, "_CPPv4N8amdinfer10GrpcServeraSERR10GrpcServer"]], "amdinfer::grpcserver::~grpcserver (c++ function)": [[36, "_CPPv4N8amdinfer10GrpcServerD0Ev"]], "amdinfer::hardbatcher (c++ class)": [[37, "_CPPv4N8amdinfer11HardBatcherE"]], "amdinfer::hardbatcher::batcher (c++ function)": [[37, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPool"], [37, "_CPPv4N8amdinfer11HardBatcher7BatcherEP10MemoryPoolP12ParameterMap"], [37, "_CPPv4N8amdinfer11HardBatcher7BatcherERK7Batcher"], [37, "_CPPv4N8amdinfer11HardBatcher7BatcherERR7Batcher"]], "amdinfer::httpclient (c++ class)": [[38, "_CPPv4N8amdinfer10HttpClientE"], [746, "_CPPv4N8amdinfer10HttpClientE"]], "amdinfer::httpclient::httpclient (c++ function)": [[38, "_CPPv4N8amdinfer10HttpClient10HttpClientERK10HttpClient"], [38, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE"], [38, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi"], [38, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient"], [746, "_CPPv4N8amdinfer10HttpClient10HttpClientERK10HttpClient"], [746, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringE"], [746, "_CPPv4N8amdinfer10HttpClient10HttpClientERKNSt6stringERK9StringMapi"], [746, "_CPPv4N8amdinfer10HttpClient10HttpClientERR10HttpClient"]], "amdinfer::httpclient::httpclientimpl (c++ class)": [[38, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE"], [39, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE"], [746, "_CPPv4N8amdinfer10HttpClient14HttpClientImplE"]], "amdinfer::httpclient::httpclientimpl::httpclientimpl (c++ function)": [[38, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi"], [39, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl14HttpClientImplERKNSt6stringE9StringMapi"]], "amdinfer::httpclient::httpclientimpl::getclient (c++ function)": [[38, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl9getClientEv"], [39, "_CPPv4N8amdinfer10HttpClient14HttpClientImpl9getClientEv"]], "amdinfer::httpclient::httpclientimpl::getclientnum (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl12getClientNumEv"], [39, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl12getClientNumEv"]], "amdinfer::httpclient::httpclientimpl::getheaders (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl10getHeadersEv"], [39, "_CPPv4NK8amdinfer10HttpClient14HttpClientImpl10getHeadersEv"]], "amdinfer::httpclient::hashardware (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi"], [746, "_CPPv4NK8amdinfer10HttpClient11hasHardwareERKNSt6stringEi"]], "amdinfer::httpclient::modelinfer (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer10HttpClient10modelInferERKNSt6stringERK16InferenceRequest"]], "amdinfer::httpclient::modelinferasync (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer10HttpClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"]], "amdinfer::httpclient::modellist (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient9modelListEv"], [746, "_CPPv4NK8amdinfer10HttpClient9modelListEv"]], "amdinfer::httpclient::modelload (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer10HttpClient9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::httpclient::modelmetadata (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10HttpClient13modelMetadataERKNSt6stringE"]], "amdinfer::httpclient::modelready (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10HttpClient10modelReadyERKNSt6stringE"]], "amdinfer::httpclient::modelunload (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10HttpClient11modelUnloadERKNSt6stringE"]], "amdinfer::httpclient::operator= (c++ function)": [[38, "_CPPv4N8amdinfer10HttpClientaSERK10HttpClient"], [38, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient"], [746, "_CPPv4N8amdinfer10HttpClientaSERK10HttpClient"], [746, "_CPPv4N8amdinfer10HttpClientaSERR10HttpClient"]], "amdinfer::httpclient::serverlive (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient10serverLiveEv"], [746, "_CPPv4NK8amdinfer10HttpClient10serverLiveEv"]], "amdinfer::httpclient::servermetadata (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient14serverMetadataEv"], [746, "_CPPv4NK8amdinfer10HttpClient14serverMetadataEv"]], "amdinfer::httpclient::serverready (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient11serverReadyEv"], [746, "_CPPv4NK8amdinfer10HttpClient11serverReadyEv"]], "amdinfer::httpclient::workerload (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer10HttpClient10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::httpclient::workerunload (c++ function)": [[38, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer10HttpClient12workerUnloadERKNSt6stringE"]], "amdinfer::httpclient::~httpclient (c++ function)": [[38, "_CPPv4N8amdinfer10HttpClientD0Ev"], [746, "_CPPv4N8amdinfer10HttpClientD0Ev"]], "amdinfer::inferencerequest (c++ class)": [[40, "_CPPv4N8amdinfer16InferenceRequestE"], [746, "_CPPv4N8amdinfer16InferenceRequestE"]], "amdinfer::inferencerequest::inferencerequest (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest16InferenceRequestEv"]], "amdinfer::inferencerequest::addinputtensor (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput"], [40, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE"], [746, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorE21InferenceRequestInput"], [746, "_CPPv4N8amdinfer16InferenceRequest14addInputTensorEPvRKNSt6vectorI8uint64_tEE8DataTypeRKNSt6stringE"]], "amdinfer::inferencerequest::addoutputtensor (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput"], [746, "_CPPv4N8amdinfer16InferenceRequest15addOutputTensorERK22InferenceRequestOutput"]], "amdinfer::inferencerequest::getcallback (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest11getCallbackEv"], [746, "_CPPv4N8amdinfer16InferenceRequest11getCallbackEv"]], "amdinfer::inferencerequest::getid (c++ function)": [[40, "_CPPv4NK8amdinfer16InferenceRequest5getIDEv"], [746, "_CPPv4NK8amdinfer16InferenceRequest5getIDEv"]], "amdinfer::inferencerequest::getinputsize (c++ function)": [[40, "_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv"], [746, "_CPPv4NK8amdinfer16InferenceRequest12getInputSizeEv"]], "amdinfer::inferencerequest::getinputs (c++ function)": [[40, "_CPPv4NK8amdinfer16InferenceRequest9getInputsEv"], [746, "_CPPv4NK8amdinfer16InferenceRequest9getInputsEv"]], "amdinfer::inferencerequest::getoutputs (c++ function)": [[40, "_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv"], [746, "_CPPv4NK8amdinfer16InferenceRequest10getOutputsEv"]], "amdinfer::inferencerequest::getparameters (c++ function)": [[40, "_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv"], [40, "_CPPv4NO8amdinfer16InferenceRequest13getParametersEv"], [746, "_CPPv4NKR8amdinfer16InferenceRequest13getParametersEv"], [746, "_CPPv4NO8amdinfer16InferenceRequest13getParametersEv"]], "amdinfer::inferencerequest::runcallback (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse"], [746, "_CPPv4N8amdinfer16InferenceRequest11runCallbackERK17InferenceResponse"]], "amdinfer::inferencerequest::runcallbackerror (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE"], [746, "_CPPv4N8amdinfer16InferenceRequest16runCallbackErrorENSt11string_viewE"]], "amdinfer::inferencerequest::runcallbackonce (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse"], [746, "_CPPv4N8amdinfer16InferenceRequest15runCallbackOnceERK17InferenceResponse"]], "amdinfer::inferencerequest::setcallback (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback"], [746, "_CPPv4N8amdinfer16InferenceRequest11setCallbackERR8Callback"]], "amdinfer::inferencerequest::setid (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE"], [746, "_CPPv4N8amdinfer16InferenceRequest5setIDENSt11string_viewE"]], "amdinfer::inferencerequest::setinputtensordata (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv"], [746, "_CPPv4N8amdinfer16InferenceRequest18setInputTensorDataE6size_tPv"]], "amdinfer::inferencerequest::setparameters (c++ function)": [[40, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap"], [746, "_CPPv4N8amdinfer16InferenceRequest13setParametersE12ParameterMap"]], "amdinfer::inferencerequestinput (c++ class)": [[45, "_CPPv4N8amdinfer21InferenceRequestInputE"], [746, "_CPPv4N8amdinfer21InferenceRequestInputE"]], "amdinfer::inferencerequestinput::inferencerequestinput (c++ function)": [[45, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE"], [45, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor"], [45, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor"], [45, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEv"], [746, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEPvNSt6vectorI8uint64_tEE8DataTypeNSt6stringE"], [746, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK15InferenceTensor"], [746, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputERK6Tensor"], [746, "_CPPv4N8amdinfer21InferenceRequestInput21InferenceRequestInputEv"]], "amdinfer::inferencerequestinput::deserialize (c++ function)": [[45, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE"], [746, "_CPPv4N8amdinfer21InferenceRequestInput11deserializeEPKNSt4byteE"]], "amdinfer::inferencerequestinput::getdata (c++ function)": [[45, "_CPPv4NK8amdinfer21InferenceRequestInput7getDataEv"], [746, "_CPPv4NK8amdinfer21InferenceRequestInput7getDataEv"]], "amdinfer::inferencerequestinput::operator<< (c++ function)": [[45, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput"], [746, "_CPPv4N8amdinfer21InferenceRequestInputlsERNSt7ostreamERK21InferenceRequestInput"]], "amdinfer::inferencerequestinput::serialize (c++ function)": [[45, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE"], [746, "_CPPv4NK8amdinfer21InferenceRequestInput9serializeEPNSt4byteE"]], "amdinfer::inferencerequestinput::serializesize (c++ function)": [[45, "_CPPv4NK8amdinfer21InferenceRequestInput13serializeSizeEv"], [746, "_CPPv4NK8amdinfer21InferenceRequestInput13serializeSizeEv"]], "amdinfer::inferencerequestinput::setdata (c++ function)": [[45, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv"], [746, "_CPPv4N8amdinfer21InferenceRequestInput7setDataEPv"]], "amdinfer::inferencerequestoutput (c++ class)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutputE"], [746, "_CPPv4N8amdinfer22InferenceRequestOutputE"]], "amdinfer::inferencerequestoutput::inferencerequestoutput (c++ function)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutput22InferenceRequestOutputEv"], [746, "_CPPv4N8amdinfer22InferenceRequestOutput22InferenceRequestOutputEv"]], "amdinfer::inferencerequestoutput::getdata (c++ function)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutput7getDataEv"], [746, "_CPPv4N8amdinfer22InferenceRequestOutput7getDataEv"]], "amdinfer::inferencerequestoutput::getname (c++ function)": [[50, "_CPPv4NK8amdinfer22InferenceRequestOutput7getNameEv"], [746, "_CPPv4NK8amdinfer22InferenceRequestOutput7getNameEv"]], "amdinfer::inferencerequestoutput::getparameters (c++ function)": [[50, "_CPPv4NKR8amdinfer22InferenceRequestOutput13getParametersEv"], [50, "_CPPv4NO8amdinfer22InferenceRequestOutput13getParametersEv"], [746, "_CPPv4NKR8amdinfer22InferenceRequestOutput13getParametersEv"], [746, "_CPPv4NO8amdinfer22InferenceRequestOutput13getParametersEv"]], "amdinfer::inferencerequestoutput::setdata (c++ function)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv"], [746, "_CPPv4N8amdinfer22InferenceRequestOutput7setDataEPv"]], "amdinfer::inferencerequestoutput::setname (c++ function)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE"], [746, "_CPPv4N8amdinfer22InferenceRequestOutput7setNameERKNSt6stringE"]], "amdinfer::inferencerequestoutput::setparameters (c++ function)": [[50, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap"], [746, "_CPPv4N8amdinfer22InferenceRequestOutput13setParametersE12ParameterMap"]], "amdinfer::inferenceresponse (c++ class)": [[53, "_CPPv4N8amdinfer17InferenceResponseE"], [746, "_CPPv4N8amdinfer17InferenceResponseE"]], "amdinfer::inferenceresponse::inferenceresponse (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE"], [53, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseEv"], [746, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseERKNSt6stringE"], [746, "_CPPv4N8amdinfer17InferenceResponse17InferenceResponseEv"]], "amdinfer::inferenceresponse::addoutput (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput"], [746, "_CPPv4N8amdinfer17InferenceResponse9addOutputERK23InferenceResponseOutput"]], "amdinfer::inferenceresponse::geterror (c++ function)": [[53, "_CPPv4NK8amdinfer17InferenceResponse8getErrorEv"], [746, "_CPPv4NK8amdinfer17InferenceResponse8getErrorEv"]], "amdinfer::inferenceresponse::getid (c++ function)": [[53, "_CPPv4NK8amdinfer17InferenceResponse5getIDEv"], [746, "_CPPv4NK8amdinfer17InferenceResponse5getIDEv"]], "amdinfer::inferenceresponse::getmodel (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse8getModelEv"], [746, "_CPPv4N8amdinfer17InferenceResponse8getModelEv"]], "amdinfer::inferenceresponse::getoutputs (c++ function)": [[53, "_CPPv4NK8amdinfer17InferenceResponse10getOutputsEv"], [746, "_CPPv4NK8amdinfer17InferenceResponse10getOutputsEv"]], "amdinfer::inferenceresponse::getparameters (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse13getParametersEv"], [746, "_CPPv4N8amdinfer17InferenceResponse13getParametersEv"]], "amdinfer::inferenceresponse::iserror (c++ function)": [[53, "_CPPv4NK8amdinfer17InferenceResponse7isErrorEv"], [746, "_CPPv4NK8amdinfer17InferenceResponse7isErrorEv"]], "amdinfer::inferenceresponse::operator<< (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse"], [746, "_CPPv4N8amdinfer17InferenceResponselsERNSt7ostreamERK17InferenceResponse"]], "amdinfer::inferenceresponse::setid (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE"], [746, "_CPPv4N8amdinfer17InferenceResponse5setIDERKNSt6stringE"]], "amdinfer::inferenceresponse::setmodel (c++ function)": [[53, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE"], [746, "_CPPv4N8amdinfer17InferenceResponse8setModelERKNSt6stringE"]], "amdinfer::inferenceresponseoutput (c++ class)": [[54, "_CPPv4N8amdinfer23InferenceResponseOutputE"]], "amdinfer::inferenceresponseoutput::inferenceresponseoutput (c++ function)": [[54, "_CPPv4N8amdinfer23InferenceResponseOutput23InferenceResponseOutputEv"]], "amdinfer::inferenceresponseoutput::deserialize (c++ function)": [[54, "_CPPv4N8amdinfer23InferenceResponseOutput11deserializeEPKNSt4byteE"]], "amdinfer::inferenceresponseoutput::getdata (c++ function)": [[54, "_CPPv4NK8amdinfer23InferenceResponseOutput7getDataEv"]], "amdinfer::inferenceresponseoutput::operator<< (c++ function)": [[54, "_CPPv4N8amdinfer23InferenceResponseOutputlsERNSt7ostreamERK23InferenceResponseOutput"]], "amdinfer::inferenceresponseoutput::serialize (c++ function)": [[54, "_CPPv4NK8amdinfer23InferenceResponseOutput9serializeEPNSt4byteE"]], "amdinfer::inferenceresponseoutput::serializesize (c++ function)": [[54, "_CPPv4NK8amdinfer23InferenceResponseOutput13serializeSizeEv"]], "amdinfer::inferenceresponseoutput::setdata (c++ function)": [[54, "_CPPv4N8amdinfer23InferenceResponseOutput7setDataERRNSt6vectorINSt4byteEEE"]], "amdinfer::inferencetensor (c++ class)": [[55, "_CPPv4N8amdinfer15InferenceTensorE"]], "amdinfer::inferencetensor::inferencetensor (c++ function)": [[55, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorENSt6stringENSt6vectorI8uint64_tEE8DataType"], [55, "_CPPv4N8amdinfer15InferenceTensor15InferenceTensorERK6Tensor"]], "amdinfer::inferencetensor::deserialize (c++ function)": [[55, "_CPPv4N8amdinfer15InferenceTensor11deserializeEPKNSt4byteE"]], "amdinfer::inferencetensor::getparameters (c++ function)": [[55, "_CPPv4NKR8amdinfer15InferenceTensor13getParametersEv"], [55, "_CPPv4NO8amdinfer15InferenceTensor13getParametersEv"]], "amdinfer::inferencetensor::serialize (c++ function)": [[55, "_CPPv4NK8amdinfer15InferenceTensor9serializeEPNSt4byteE"]], "amdinfer::inferencetensor::serializesize (c++ function)": [[55, "_CPPv4NK8amdinfer15InferenceTensor13serializeSizeEv"]], "amdinfer::inferencetensor::setparameters (c++ function)": [[55, "_CPPv4N8amdinfer15InferenceTensor13setParametersE12ParameterMap"]], "amdinfer::memoryallocator (c++ class)": [[60, "_CPPv4N8amdinfer15MemoryAllocatorE"]], "amdinfer::memoryallocator::get (c++ function)": [[60, "_CPPv4N8amdinfer15MemoryAllocator3getERK6Tensor6size_t"]], "amdinfer::memoryallocator::put (c++ function)": [[60, "_CPPv4N8amdinfer15MemoryAllocator3putEPKv"]], "amdinfer::memoryallocator::~memoryallocator (c++ function)": [[60, "_CPPv4N8amdinfer15MemoryAllocatorD0Ev"]], "amdinfer::memorypool (c++ class)": [[61, "_CPPv4N8amdinfer10MemoryPoolE"]], "amdinfer::memorypool::memorypool (c++ function)": [[61, "_CPPv4N8amdinfer10MemoryPool10MemoryPoolEv"]], "amdinfer::memorypool::get (c++ function)": [[61, "_CPPv4NK8amdinfer10MemoryPool3getERKNSt6vectorI16MemoryAllocatorsEERK6Tensor6size_t"]], "amdinfer::memorypool::put (c++ function)": [[61, "_CPPv4NK8amdinfer10MemoryPool3putENSt10unique_ptrI6BufferEE"]], "amdinfer::modelmetadata (c++ class)": [[62, "_CPPv4N8amdinfer13ModelMetadataE"], [746, "_CPPv4N8amdinfer13ModelMetadataE"]], "amdinfer::modelmetadata::modelmetadata (c++ function)": [[62, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE"], [746, "_CPPv4N8amdinfer13ModelMetadata13ModelMetadataERKNSt6stringERKNSt6stringE"]], "amdinfer::modelmetadata::addinputtensor (c++ function)": [[62, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor"], [62, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType"], [62, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType"], [746, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERK6Tensor"], [746, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType"], [746, "_CPPv4N8amdinfer13ModelMetadata14addInputTensorERKNSt6stringENSt6vectorIiEE8DataType"]], "amdinfer::modelmetadata::addoutputtensor (c++ function)": [[62, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor"], [62, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType"], [62, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType"], [746, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERK6Tensor"], [746, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt16initializer_listI8uint64_tEE8DataType"], [746, "_CPPv4N8amdinfer13ModelMetadata15addOutputTensorERKNSt6stringENSt6vectorIiEE8DataType"]], "amdinfer::modelmetadata::getinputs (c++ function)": [[62, "_CPPv4NK8amdinfer13ModelMetadata9getInputsEv"], [746, "_CPPv4NK8amdinfer13ModelMetadata9getInputsEv"]], "amdinfer::modelmetadata::getname (c++ function)": [[62, "_CPPv4NK8amdinfer13ModelMetadata7getNameEv"], [746, "_CPPv4NK8amdinfer13ModelMetadata7getNameEv"]], "amdinfer::modelmetadata::getoutputs (c++ function)": [[62, "_CPPv4NK8amdinfer13ModelMetadata10getOutputsEv"], [746, "_CPPv4NK8amdinfer13ModelMetadata10getOutputsEv"]], "amdinfer::modelmetadata::getplatform (c++ function)": [[62, "_CPPv4NK8amdinfer13ModelMetadata11getPlatformEv"]], "amdinfer::modelmetadata::isready (c++ function)": [[62, "_CPPv4NK8amdinfer13ModelMetadata7isReadyEv"], [746, "_CPPv4NK8amdinfer13ModelMetadata7isReadyEv"]], "amdinfer::modelmetadata::setname (c++ function)": [[62, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE"], [746, "_CPPv4N8amdinfer13ModelMetadata7setNameERKNSt6stringE"]], "amdinfer::modelmetadata::setready (c++ function)": [[62, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb"], [746, "_CPPv4N8amdinfer13ModelMetadata8setReadyEb"]], "amdinfer::modelrepository (c++ class)": [[64, "_CPPv4N8amdinfer15ModelRepositoryE"]], "amdinfer::modelrepository::enablemonitoring (c++ function)": [[64, "_CPPv4N8amdinfer15ModelRepository16enableMonitoringEb"]], "amdinfer::modelrepository::getrepository (c++ function)": [[64, "_CPPv4NK8amdinfer15ModelRepository13getRepositoryEv"]], "amdinfer::modelrepository::setendpoints (c++ function)": [[64, "_CPPv4N8amdinfer15ModelRepository12setEndpointsEP9Endpoints"]], "amdinfer::modelrepository::setrepository (c++ function)": [[64, "_CPPv4N8amdinfer15ModelRepository13setRepositoryERKNSt10filesystem4pathEb"]], "amdinfer::nativeclient (c++ class)": [[66, "_CPPv4N8amdinfer12NativeClientE"], [746, "_CPPv4N8amdinfer12NativeClientE"]], "amdinfer::nativeclient::nativeclient (c++ function)": [[66, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server"], [66, "_CPPv4N8amdinfer12NativeClient12NativeClientERK12NativeClient"], [66, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient"], [746, "_CPPv4N8amdinfer12NativeClient12NativeClientEP6Server"], [746, "_CPPv4N8amdinfer12NativeClient12NativeClientERK12NativeClient"], [746, "_CPPv4N8amdinfer12NativeClient12NativeClientERR12NativeClient"]], "amdinfer::nativeclient::nativeclientimpl (c++ struct)": [[66, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE"], [631, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE"], [746, "_CPPv4N8amdinfer12NativeClient16NativeClientImplE"]], "amdinfer::nativeclient::nativeclientimpl::state (c++ member)": [[66, "_CPPv4N8amdinfer12NativeClient16NativeClientImpl5stateE"], [631, "_CPPv4N8amdinfer12NativeClient16NativeClientImpl5stateE"]], "amdinfer::nativeclient::hashardware (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi"], [746, "_CPPv4NK8amdinfer12NativeClient11hasHardwareERKNSt6stringEi"]], "amdinfer::nativeclient::modelinfer (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer12NativeClient10modelInferERKNSt6stringERK16InferenceRequest"]], "amdinfer::nativeclient::modelinferasync (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer12NativeClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"]], "amdinfer::nativeclient::modellist (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient9modelListEv"], [746, "_CPPv4NK8amdinfer12NativeClient9modelListEv"]], "amdinfer::nativeclient::modelload (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer12NativeClient9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::nativeclient::modelmetadata (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE"], [746, "_CPPv4NK8amdinfer12NativeClient13modelMetadataERKNSt6stringE"]], "amdinfer::nativeclient::modelready (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE"], [746, "_CPPv4NK8amdinfer12NativeClient10modelReadyERKNSt6stringE"]], "amdinfer::nativeclient::modelunload (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer12NativeClient11modelUnloadERKNSt6stringE"]], "amdinfer::nativeclient::operator= (c++ function)": [[66, "_CPPv4N8amdinfer12NativeClientaSERK12NativeClient"], [66, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient"], [746, "_CPPv4N8amdinfer12NativeClientaSERK12NativeClient"], [746, "_CPPv4N8amdinfer12NativeClientaSERR12NativeClient"]], "amdinfer::nativeclient::serverlive (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient10serverLiveEv"], [746, "_CPPv4NK8amdinfer12NativeClient10serverLiveEv"]], "amdinfer::nativeclient::servermetadata (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient14serverMetadataEv"], [746, "_CPPv4NK8amdinfer12NativeClient14serverMetadataEv"]], "amdinfer::nativeclient::serverready (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient11serverReadyEv"], [746, "_CPPv4NK8amdinfer12NativeClient11serverReadyEv"]], "amdinfer::nativeclient::workerload (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer12NativeClient10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::nativeclient::workerunload (c++ function)": [[66, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer12NativeClient12workerUnloadERKNSt6stringE"]], "amdinfer::nativeclient::~nativeclient (c++ function)": [[66, "_CPPv4N8amdinfer12NativeClientD0Ev"], [746, "_CPPv4N8amdinfer12NativeClientD0Ev"]], "amdinfer::parametermap (c++ class)": [[67, "_CPPv4N8amdinfer12ParameterMapE"], [746, "_CPPv4N8amdinfer12ParameterMapE"]], "amdinfer::parametermap::begin (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap5beginEv"], [67, "_CPPv4NK8amdinfer12ParameterMap5beginEv"], [746, "_CPPv4N8amdinfer12ParameterMap5beginEv"], [746, "_CPPv4NK8amdinfer12ParameterMap5beginEv"]], "amdinfer::parametermap::cbegin (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap6cbeginEv"], [746, "_CPPv4NK8amdinfer12ParameterMap6cbeginEv"]], "amdinfer::parametermap::cend (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap4cendEv"], [746, "_CPPv4NK8amdinfer12ParameterMap4cendEv"]], "amdinfer::parametermap::data (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap4dataEv"], [746, "_CPPv4NK8amdinfer12ParameterMap4dataEv"]], "amdinfer::parametermap::deserialize (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE"], [746, "_CPPv4N8amdinfer12ParameterMap11deserializeEPKNSt4byteE"]], "amdinfer::parametermap::empty (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap5emptyEv"], [746, "_CPPv4NK8amdinfer12ParameterMap5emptyEv"]], "amdinfer::parametermap::end (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap3endEv"], [67, "_CPPv4NK8amdinfer12ParameterMap3endEv"], [746, "_CPPv4N8amdinfer12ParameterMap3endEv"], [746, "_CPPv4NK8amdinfer12ParameterMap3endEv"]], "amdinfer::parametermap::erase (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE"], [746, "_CPPv4N8amdinfer12ParameterMap5eraseERKNSt6stringE"]], "amdinfer::parametermap::get (c++ function)": [[67, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE"], [746, "_CPPv4I0ENK8amdinfer12ParameterMap3getE1TRKNSt6stringE"]], "amdinfer::parametermap::has (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE"], [746, "_CPPv4NK8amdinfer12ParameterMap3hasERKNSt6stringE"]], "amdinfer::parametermap::operator<< (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap"], [746, "_CPPv4N8amdinfer12ParameterMaplsERNSt7ostreamERK12ParameterMap"]], "amdinfer::parametermap::put (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t"], [67, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc"], [67, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE"], [67, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb"], [67, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd"], [746, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringE7int32_t"], [746, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEPKc"], [746, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringERKNSt6stringE"], [746, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEb"], [746, "_CPPv4N8amdinfer12ParameterMap3putERKNSt6stringEd"]], "amdinfer::parametermap::rename (c++ function)": [[67, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE"], [746, "_CPPv4N8amdinfer12ParameterMap6renameERKNSt6stringERKNSt6stringE"]], "amdinfer::parametermap::serialize (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE"], [746, "_CPPv4NK8amdinfer12ParameterMap9serializeEPNSt4byteE"]], "amdinfer::parametermap::serializesize (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap13serializeSizeEv"], [746, "_CPPv4NK8amdinfer12ParameterMap13serializeSizeEv"]], "amdinfer::parametermap::size (c++ function)": [[67, "_CPPv4NK8amdinfer12ParameterMap4sizeEv"], [746, "_CPPv4NK8amdinfer12ParameterMap4sizeEv"]], "amdinfer::serializable (c++ class)": [[69, "_CPPv4N8amdinfer12SerializableE"]], "amdinfer::serializable::deserialize (c++ function)": [[69, "_CPPv4N8amdinfer12Serializable11deserializeEPKNSt4byteE"]], "amdinfer::serializable::serialize (c++ function)": [[69, "_CPPv4NK8amdinfer12Serializable9serializeEPNSt4byteE"]], "amdinfer::serializable::serializesize (c++ function)": [[69, "_CPPv4NK8amdinfer12Serializable13serializeSizeEv"]], "amdinfer::serializable::~serializable (c++ function)": [[69, "_CPPv4N8amdinfer12SerializableD0Ev"]], "amdinfer::server (c++ class)": [[70, "_CPPv4N8amdinfer6ServerE"], [746, "_CPPv4N8amdinfer6ServerE"]], "amdinfer::server::server (c++ function)": [[70, "_CPPv4N8amdinfer6Server6ServerERK6Server"], [70, "_CPPv4N8amdinfer6Server6ServerERR6Server"], [70, "_CPPv4N8amdinfer6Server6ServerEv"], [746, "_CPPv4N8amdinfer6Server6ServerERK6Server"], [746, "_CPPv4N8amdinfer6Server6ServerERR6Server"], [746, "_CPPv4N8amdinfer6Server6ServerEv"]], "amdinfer::server::serverimpl (c++ struct)": [[70, "_CPPv4N8amdinfer6Server10ServerImplE"], [636, "_CPPv4N8amdinfer6Server10ServerImplE"], [746, "_CPPv4N8amdinfer6Server10ServerImplE"]], "amdinfer::server::serverimpl::state (c++ member)": [[70, "_CPPv4N8amdinfer6Server10ServerImpl5stateE"], [636, "_CPPv4N8amdinfer6Server10ServerImpl5stateE"]], "amdinfer::server::enablerepositorymonitoring (c++ function)": [[70, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb"], [746, "_CPPv4N8amdinfer6Server26enableRepositoryMonitoringEb"]], "amdinfer::server::operator= (c++ function)": [[70, "_CPPv4N8amdinfer6ServeraSERK6Server"], [70, "_CPPv4N8amdinfer6ServeraSERR6Server"], [746, "_CPPv4N8amdinfer6ServeraSERK6Server"], [746, "_CPPv4N8amdinfer6ServeraSERR6Server"]], "amdinfer::server::setmodelrepository (c++ function)": [[70, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb"], [746, "_CPPv4N8amdinfer6Server18setModelRepositoryERKNSt10filesystem4pathEb"]], "amdinfer::server::startgrpc (c++ function)": [[70, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t"], [746, "_CPPv4NK8amdinfer6Server9startGrpcE8uint16_t"]], "amdinfer::server::starthttp (c++ function)": [[70, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t"], [746, "_CPPv4NK8amdinfer6Server9startHttpE8uint16_t"]], "amdinfer::server::stopgrpc (c++ function)": [[70, "_CPPv4NK8amdinfer6Server8stopGrpcEv"], [746, "_CPPv4NK8amdinfer6Server8stopGrpcEv"]], "amdinfer::server::stophttp (c++ function)": [[70, "_CPPv4NK8amdinfer6Server8stopHttpEv"], [746, "_CPPv4NK8amdinfer6Server8stopHttpEv"]], "amdinfer::server::~server (c++ function)": [[70, "_CPPv4N8amdinfer6ServerD0Ev"], [746, "_CPPv4N8amdinfer6ServerD0Ev"]], "amdinfer::sharedstate (c++ class)": [[71, "_CPPv4N8amdinfer11SharedStateE"]], "amdinfer::sharedstate::enablerepositorymonitoring (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState26enableRepositoryMonitoringEb"]], "amdinfer::sharedstate::gethardware (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState11getHardwareEv"]], "amdinfer::sharedstate::getpool (c++ function)": [[71, "_CPPv4NK8amdinfer11SharedState7getPoolEv"]], "amdinfer::sharedstate::hashardware (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState11hasHardwareERKNSt6stringEi"]], "amdinfer::sharedstate::modelinfer (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState10modelInferERKNSt6stringENSt10unique_ptrI16RequestContainerEE"]], "amdinfer::sharedstate::modellist (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState9modelListEv"]], "amdinfer::sharedstate::modelload (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::sharedstate::modelmetadata (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState13modelMetadataERKNSt6stringE"]], "amdinfer::sharedstate::modelready (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState10modelReadyERKNSt6stringE"]], "amdinfer::sharedstate::modelunload (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState11modelUnloadERKNSt6stringE"]], "amdinfer::sharedstate::servermetadata (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState14serverMetadataEv"]], "amdinfer::sharedstate::setrepository (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState13setRepositoryERKNSt10filesystem4pathEb"]], "amdinfer::sharedstate::workerload (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::sharedstate::workerunload (c++ function)": [[71, "_CPPv4N8amdinfer11SharedState12workerUnloadERKNSt6stringE"]], "amdinfer::softbatcher (c++ class)": [[72, "_CPPv4N8amdinfer11SoftBatcherE"]], "amdinfer::softbatcher::batcher (c++ function)": [[72, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPool"], [72, "_CPPv4N8amdinfer11SoftBatcher7BatcherEP10MemoryPoolP12ParameterMap"], [72, "_CPPv4N8amdinfer11SoftBatcher7BatcherERK7Batcher"], [72, "_CPPv4N8amdinfer11SoftBatcher7BatcherERR7Batcher"]], "amdinfer::tensor (c++ class)": [[73, "_CPPv4N8amdinfer6TensorE"]], "amdinfer::tensor::tensor (c++ function)": [[73, "_CPPv4N8amdinfer6Tensor6TensorENSt6stringENSt6vectorI8uint64_tEE8DataType"]], "amdinfer::tensor::deserialize (c++ function)": [[73, "_CPPv4N8amdinfer6Tensor11deserializeEPKNSt4byteE"]], "amdinfer::tensor::getdatatype (c++ function)": [[73, "_CPPv4NK8amdinfer6Tensor11getDatatypeEv"]], "amdinfer::tensor::getname (c++ function)": [[73, "_CPPv4NKR8amdinfer6Tensor7getNameEv"], [73, "_CPPv4NO8amdinfer6Tensor7getNameEv"]], "amdinfer::tensor::getshape (c++ function)": [[73, "_CPPv4NKR8amdinfer6Tensor8getShapeEv"], [73, "_CPPv4NO8amdinfer6Tensor8getShapeEv"]], "amdinfer::tensor::getsize (c++ function)": [[73, "_CPPv4NK8amdinfer6Tensor7getSizeEv"]], "amdinfer::tensor::serialize (c++ function)": [[73, "_CPPv4NK8amdinfer6Tensor9serializeEPNSt4byteE"]], "amdinfer::tensor::serializesize (c++ function)": [[73, "_CPPv4NK8amdinfer6Tensor13serializeSizeEv"]], "amdinfer::tensor::setdatatype (c++ function)": [[73, "_CPPv4N8amdinfer6Tensor11setDatatypeE8DataType"]], "amdinfer::tensor::setname (c++ function)": [[73, "_CPPv4N8amdinfer6Tensor7setNameENSt6stringE"]], "amdinfer::tensor::setshape (c++ function)": [[73, "_CPPv4N8amdinfer6Tensor8setShapeENSt6vectorI8uint64_tEE"]], "amdinfer::updatelistener (c++ class)": [[74, "_CPPv4N8amdinfer14UpdateListenerE"]], "amdinfer::updatelistener::updatelistener (c++ function)": [[74, "_CPPv4N8amdinfer14UpdateListener14UpdateListenerERKNSt10filesystem4pathEP9Endpoints"]], "amdinfer::updatelistener::handlefileaction (c++ function)": [[74, "_CPPv4N8amdinfer14UpdateListener16handleFileActionEN4efsw7WatchIDERKNSt6stringERKNSt6stringEN4efsw6ActionENSt6stringE"]], "amdinfer::varttensorbuffer (c++ class)": [[75, "_CPPv4N8amdinfer16VartTensorBufferE"]], "amdinfer::varttensorbuffer::varttensorbuffer (c++ function)": [[75, "_CPPv4N8amdinfer16VartTensorBuffer16VartTensorBufferEPv16MemoryAllocators"]], "amdinfer::varttensorbuffer::data (c++ function)": [[75, "_CPPv4N8amdinfer16VartTensorBuffer4dataE6size_t"]], "amdinfer::varttensorbuffer::gettensorbuffer (c++ function)": [[75, "_CPPv4N8amdinfer16VartTensorBuffer15getTensorBufferEv"]], "amdinfer::websocketclient (c++ class)": [[77, "_CPPv4N8amdinfer15WebSocketClientE"], [746, "_CPPv4N8amdinfer15WebSocketClientE"]], "amdinfer::websocketclient::websocketclient (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERK15WebSocketClient"], [77, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE"], [77, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient"], [746, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERK15WebSocketClient"], [746, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERKNSt6stringERKNSt6stringE"], [746, "_CPPv4N8amdinfer15WebSocketClient15WebSocketClientERR15WebSocketClient"]], "amdinfer::websocketclient::websocketclientimpl (c++ class)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE"], [746, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplE"]], "amdinfer::websocketclient::websocketclientimpl::websocketclientimpl (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl"], [77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE"], [77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERKNSt6stringERKNSt6stringE"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl"], [746, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERK19WebSocketClientImpl"], [746, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl19WebSocketClientImplERR19WebSocketClientImpl"]], "amdinfer::websocketclient::websocketclientimpl::connect (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl7connectEv"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl7connectEv"]], "amdinfer::websocketclient::websocketclientimpl::gethttpclient (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl13getHttpClientEv"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl13getHttpClientEv"]], "amdinfer::websocketclient::websocketclientimpl::getwsclient (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl11getWsClientEv"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl11getWsClientEv"]], "amdinfer::websocketclient::websocketclientimpl::operator= (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl"], [77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl"], [746, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERK19WebSocketClientImpl"], [746, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplaSERR19WebSocketClientImpl"]], "amdinfer::websocketclient::websocketclientimpl::recv (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl4recvEv"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImpl4recvEv"]], "amdinfer::websocketclient::websocketclientimpl::~websocketclientimpl (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplD0Ev"], [78, "_CPPv4N8amdinfer15WebSocketClient19WebSocketClientImplD0Ev"]], "amdinfer::websocketclient::close (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient5closeEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient5closeEv"]], "amdinfer::websocketclient::hashardware (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi"], [746, "_CPPv4NK8amdinfer15WebSocketClient11hasHardwareERKNSt6stringEi"]], "amdinfer::websocketclient::modelinfer (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer15WebSocketClient10modelInferERKNSt6stringERK16InferenceRequest"]], "amdinfer::websocketclient::modelinferasync (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer15WebSocketClient15modelInferAsyncERKNSt6stringERK16InferenceRequest"]], "amdinfer::websocketclient::modelinferws (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest"], [746, "_CPPv4NK8amdinfer15WebSocketClient12modelInferWsERKNSt6stringERK16InferenceRequest"]], "amdinfer::websocketclient::modellist (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient9modelListEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient9modelListEv"]], "amdinfer::websocketclient::modelload (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer15WebSocketClient9modelLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::websocketclient::modelmetadata (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE"], [746, "_CPPv4NK8amdinfer15WebSocketClient13modelMetadataERKNSt6stringE"]], "amdinfer::websocketclient::modelready (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE"], [746, "_CPPv4NK8amdinfer15WebSocketClient10modelReadyERKNSt6stringE"]], "amdinfer::websocketclient::modelrecv (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient9modelRecvEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient9modelRecvEv"]], "amdinfer::websocketclient::modelunload (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer15WebSocketClient11modelUnloadERKNSt6stringE"]], "amdinfer::websocketclient::operator= (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClientaSERK15WebSocketClient"], [77, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient"], [746, "_CPPv4N8amdinfer15WebSocketClientaSERK15WebSocketClient"], [746, "_CPPv4N8amdinfer15WebSocketClientaSERR15WebSocketClient"]], "amdinfer::websocketclient::serverlive (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient10serverLiveEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient10serverLiveEv"]], "amdinfer::websocketclient::servermetadata (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient14serverMetadataEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient14serverMetadataEv"]], "amdinfer::websocketclient::serverready (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient11serverReadyEv"], [746, "_CPPv4NK8amdinfer15WebSocketClient11serverReadyEv"]], "amdinfer::websocketclient::workerload (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap"], [746, "_CPPv4NK8amdinfer15WebSocketClient10workerLoadERKNSt6stringERK12ParameterMap"]], "amdinfer::websocketclient::workerunload (c++ function)": [[77, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE"], [746, "_CPPv4NK8amdinfer15WebSocketClient12workerUnloadERKNSt6stringE"]], "amdinfer::websocketclient::~websocketclient (c++ function)": [[77, "_CPPv4N8amdinfer15WebSocketClientD0Ev"], [746, "_CPPv4N8amdinfer15WebSocketClientD0Ev"]], "amdinfer::workerinfo (c++ class)": [[79, "_CPPv4N8amdinfer10WorkerInfoE"]], "amdinfer::workerinfo::workerinfo (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERK10WorkerInfo"], [79, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERKNSt6stringEP12ParameterMapP10MemoryPool"], [79, "_CPPv4N8amdinfer10WorkerInfo10WorkerInfoERR10WorkerInfo"]], "amdinfer::workerinfo::addandstartworker (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo17addAndStartWorkerERKNSt6stringEP12ParameterMapP10MemoryPool"]], "amdinfer::workerinfo::getbatchsize (c++ function)": [[79, "_CPPv4NK8amdinfer10WorkerInfo12getBatchSizeEv"]], "amdinfer::workerinfo::getbatcher (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo10getBatcherEv"]], "amdinfer::workerinfo::getgroupsize (c++ function)": [[79, "_CPPv4NK8amdinfer10WorkerInfo12getGroupSizeEv"]], "amdinfer::workerinfo::getmetadata (c++ function)": [[79, "_CPPv4NK8amdinfer10WorkerInfo11getMetadataEv"]], "amdinfer::workerinfo::join (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo4joinENSt6thread2idE"]], "amdinfer::workerinfo::joinall (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo7joinAllEv"]], "amdinfer::workerinfo::operator= (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfoaSERK10WorkerInfo"], [79, "_CPPv4N8amdinfer10WorkerInfoaSERR10WorkerInfo"]], "amdinfer::workerinfo::shutdown (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo8shutdownEv"]], "amdinfer::workerinfo::unload (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfo6unloadEv"]], "amdinfer::workerinfo::~workerinfo (c++ function)": [[79, "_CPPv4N8amdinfer10WorkerInfoD0Ev"]], "amdinfer::bad_status (c++ class)": [[80, "_CPPv4N8amdinfer10bad_statusE"], [746, "_CPPv4N8amdinfer10bad_statusE"]], "amdinfer::connection_error (c++ class)": [[81, "_CPPv4N8amdinfer16connection_errorE"], [746, "_CPPv4N8amdinfer16connection_errorE"]], "amdinfer::environment_not_set_error (c++ class)": [[82, "_CPPv4N8amdinfer25environment_not_set_errorE"], [746, "_CPPv4N8amdinfer25environment_not_set_errorE"]], "amdinfer::external_error (c++ class)": [[83, "_CPPv4N8amdinfer14external_errorE"], [746, "_CPPv4N8amdinfer14external_errorE"]], "amdinfer::file_not_found_error (c++ class)": [[84, "_CPPv4N8amdinfer20file_not_found_errorE"], [746, "_CPPv4N8amdinfer20file_not_found_errorE"]], "amdinfer::file_read_error (c++ class)": [[85, "_CPPv4N8amdinfer15file_read_errorE"], [746, "_CPPv4N8amdinfer15file_read_errorE"]], "amdinfer::http::websocketserver (c++ class)": [[87, "_CPPv4N8amdinfer4http15WebsocketServerE"]], "amdinfer::http::websocketserver::websocketserver (c++ function)": [[87, "_CPPv4N8amdinfer4http15WebsocketServer15WebsocketServerEP11SharedState"]], "amdinfer::http::websocketserver::handleconnectionclosed (c++ function)": [[87, "_CPPv4N8amdinfer4http15WebsocketServer22handleConnectionClosedERKN6drogon22WebSocketConnectionPtrE"]], "amdinfer::http::websocketserver::handlenewconnection (c++ function)": [[87, "_CPPv4N8amdinfer4http15WebsocketServer19handleNewConnectionERKN6drogon14HttpRequestPtrERKN6drogon22WebSocketConnectionPtrE"]], "amdinfer::http::websocketserver::handlenewmessage (c++ function)": [[87, "_CPPv4N8amdinfer4http15WebsocketServer16handleNewMessageERKN6drogon22WebSocketConnectionPtrERRNSt6stringERKN6drogon20WebSocketMessageTypeE"]], "amdinfer::invalid_argument (c++ class)": [[88, "_CPPv4N8amdinfer16invalid_argumentE"], [746, "_CPPv4N8amdinfer16invalid_argumentE"]], "amdinfer::runtime_error (c++ class)": [[89, "_CPPv4N8amdinfer13runtime_errorE"], [746, "_CPPv4N8amdinfer13runtime_errorE"]], "amdinfer::util::threadpool (c++ class)": [[90, "_CPPv4N8amdinfer4util10ThreadPoolE"]], "amdinfer::util::threadpool::threadpool (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolERK10ThreadPool"], [90, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolERR10ThreadPool"], [90, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEi"], [90, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEii"], [90, "_CPPv4N8amdinfer4util10ThreadPool10ThreadPoolEv"]], "amdinfer::util::threadpool::clearqueue (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool10clearQueueEv"]], "amdinfer::util::threadpool::getidle (c++ function)": [[90, "_CPPv4NK8amdinfer4util10ThreadPool7getIdleEv"]], "amdinfer::util::threadpool::getsize (c++ function)": [[90, "_CPPv4NK8amdinfer4util10ThreadPool7getSizeEv"]], "amdinfer::util::threadpool::getthread (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool9getThreadEi"]], "amdinfer::util::threadpool::operator= (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPoolaSERK10ThreadPool"], [90, "_CPPv4N8amdinfer4util10ThreadPoolaSERR10ThreadPool"]], "amdinfer::util::threadpool::pop (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool3popEv"]], "amdinfer::util::threadpool::push (c++ function)": [[90, "_CPPv4I0DpEN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0Esp4restEEEERR1FDpRR4Rest"], [90, "_CPPv4I0EN8amdinfer4util10ThreadPool4pushENSt6futureIDTcl1fL0EEEEERR1F"]], "amdinfer::util::threadpool::resize (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool6resizeEi"]], "amdinfer::util::threadpool::stop (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPool4stopEb"]], "amdinfer::util::threadpool::~threadpool (c++ function)": [[90, "_CPPv4N8amdinfer4util10ThreadPoolD0Ev"]], "amdinfer::util::timer (c++ class)": [[91, "_CPPv4N8amdinfer4util5TimerE"]], "amdinfer::util::timer::timer (c++ function)": [[91, "_CPPv4N8amdinfer4util5Timer5TimerE9TimePoint"], [91, "_CPPv4N8amdinfer4util5Timer5TimerEb"]], "amdinfer::util::timer::add (c++ function)": [[91, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE"], [91, "_CPPv4N8amdinfer4util5Timer3addERKNSt6stringE9TimePoint"]], "amdinfer::util::timer::clear (c++ function)": [[91, "_CPPv4N8amdinfer4util5Timer5clearEv"]], "amdinfer::util::timer::count (c++ function)": [[91, "_CPPv4I00EN8amdinfer4util5Timer5countE1TRKNSt6stringERKNSt6stringE"]], "amdinfer::util::timer::start (c++ function)": [[91, "_CPPv4N8amdinfer4util5Timer5startEv"]], "amdinfer::util::timer::stop (c++ function)": [[91, "_CPPv4N8amdinfer4util5Timer4stopEv"]], "amdinfer::workers::aks (c++ class)": [[92, "_CPPv4N8amdinfer7workers3AksE"]], "amdinfer::workers::aks::worker (c++ function)": [[92, "_CPPv4N8amdinfer7workers3Aks6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::aks::getallocators (c++ function)": [[92, "_CPPv4NK8amdinfer7workers3Aks13getAllocatorsEv"]], "amdinfer::workers::aks::spawn (c++ function)": [[92, "_CPPv4N8amdinfer7workers3Aks5spawnEP13BatchPtrQueue"]], "amdinfer::workers::aksdetect (c++ class)": [[93, "_CPPv4N8amdinfer7workers9AksDetectE"]], "amdinfer::workers::aksdetect::worker (c++ function)": [[93, "_CPPv4N8amdinfer7workers9AksDetect6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::aksdetect::getallocators (c++ function)": [[93, "_CPPv4NK8amdinfer7workers9AksDetect13getAllocatorsEv"]], "amdinfer::workers::aksdetect::spawn (c++ function)": [[93, "_CPPv4N8amdinfer7workers9AksDetect5spawnEP13BatchPtrQueue"]], "amdinfer::workers::aksdetectstream (c++ class)": [[94, "_CPPv4N8amdinfer7workers15AksDetectStreamE"]], "amdinfer::workers::aksdetectstream::worker (c++ function)": [[94, "_CPPv4N8amdinfer7workers15AksDetectStream6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::aksdetectstream::getallocators (c++ function)": [[94, "_CPPv4NK8amdinfer7workers15AksDetectStream13getAllocatorsEv"]], "amdinfer::workers::aksdetectstream::spawn (c++ function)": [[94, "_CPPv4N8amdinfer7workers15AksDetectStream5spawnEP13BatchPtrQueue"]], "amdinfer::workers::cplusplus (c++ class)": [[95, "_CPPv4N8amdinfer7workers9CPlusPlusE"]], "amdinfer::workers::cplusplus::worker (c++ function)": [[95, "_CPPv4N8amdinfer7workers9CPlusPlus6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::cplusplus::getallocators (c++ function)": [[95, "_CPPv4NK8amdinfer7workers9CPlusPlus13getAllocatorsEv"]], "amdinfer::workers::cplusplus::spawn (c++ function)": [[95, "_CPPv4N8amdinfer7workers9CPlusPlus5spawnEP13BatchPtrQueue"]], "amdinfer::workers::echo (c++ class)": [[96, "_CPPv4N8amdinfer7workers4EchoE"]], "amdinfer::workers::echo::worker (c++ function)": [[96, "_CPPv4N8amdinfer7workers4Echo6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::echo::getallocators (c++ function)": [[96, "_CPPv4NK8amdinfer7workers4Echo13getAllocatorsEv"]], "amdinfer::workers::echo::spawn (c++ function)": [[96, "_CPPv4N8amdinfer7workers4Echo5spawnEP13BatchPtrQueue"]], "amdinfer::workers::echomulti (c++ class)": [[97, "_CPPv4N8amdinfer7workers9EchoMultiE"]], "amdinfer::workers::echomulti::worker (c++ function)": [[97, "_CPPv4N8amdinfer7workers9EchoMulti6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::echomulti::getallocators (c++ function)": [[97, "_CPPv4NK8amdinfer7workers9EchoMulti13getAllocatorsEv"]], "amdinfer::workers::echomulti::spawn (c++ function)": [[97, "_CPPv4N8amdinfer7workers9EchoMulti5spawnEP13BatchPtrQueue"]], "amdinfer::workers::invertimage (c++ class)": [[98, "_CPPv4N8amdinfer7workers11InvertImageE"]], "amdinfer::workers::invertimage::worker (c++ function)": [[98, "_CPPv4N8amdinfer7workers11InvertImage6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::invertimage::getallocators (c++ function)": [[98, "_CPPv4NK8amdinfer7workers11InvertImage13getAllocatorsEv"]], "amdinfer::workers::invertimage::spawn (c++ function)": [[98, "_CPPv4N8amdinfer7workers11InvertImage5spawnEP13BatchPtrQueue"]], "amdinfer::workers::invertvideo (c++ class)": [[99, "_CPPv4N8amdinfer7workers11InvertVideoE"]], "amdinfer::workers::invertvideo::worker (c++ function)": [[99, "_CPPv4N8amdinfer7workers11InvertVideo6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::invertvideo::getallocators (c++ function)": [[99, "_CPPv4NK8amdinfer7workers11InvertVideo13getAllocatorsEv"]], "amdinfer::workers::invertvideo::spawn (c++ function)": [[99, "_CPPv4N8amdinfer7workers11InvertVideo5spawnEP13BatchPtrQueue"]], "amdinfer::workers::migraphxworker (c++ class)": [[100, "_CPPv4N8amdinfer7workers14MIGraphXWorkerE"]], "amdinfer::workers::migraphxworker::worker (c++ function)": [[100, "_CPPv4N8amdinfer7workers14MIGraphXWorker6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::migraphxworker::getallocators (c++ function)": [[100, "_CPPv4NK8amdinfer7workers14MIGraphXWorker13getAllocatorsEv"]], "amdinfer::workers::migraphxworker::spawn (c++ function)": [[100, "_CPPv4N8amdinfer7workers14MIGraphXWorker5spawnEP13BatchPtrQueue"]], "amdinfer::workers::ptzendnn (c++ class)": [[101, "_CPPv4N8amdinfer7workers8PtZendnnE"]], "amdinfer::workers::ptzendnn::worker (c++ function)": [[101, "_CPPv4N8amdinfer7workers8PtZendnn6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::ptzendnn::getallocators (c++ function)": [[101, "_CPPv4NK8amdinfer7workers8PtZendnn13getAllocatorsEv"]], "amdinfer::workers::ptzendnn::spawn (c++ function)": [[101, "_CPPv4N8amdinfer7workers8PtZendnn5spawnEP13BatchPtrQueue"]], "amdinfer::workers::resnet50 (c++ class)": [[102, "_CPPv4N8amdinfer7workers8ResNet50E"]], "amdinfer::workers::resnet50::worker (c++ function)": [[102, "_CPPv4N8amdinfer7workers8ResNet506WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::resnet50::getallocators (c++ function)": [[102, "_CPPv4NK8amdinfer7workers8ResNet5013getAllocatorsEv"]], "amdinfer::workers::resnet50::spawn (c++ function)": [[102, "_CPPv4N8amdinfer7workers8ResNet505spawnEP13BatchPtrQueue"]], "amdinfer::workers::resnet50stream (c++ class)": [[103, "_CPPv4N8amdinfer7workers14ResNet50StreamE"]], "amdinfer::workers::resnet50stream::worker (c++ function)": [[103, "_CPPv4N8amdinfer7workers14ResNet50Stream6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::resnet50stream::getallocators (c++ function)": [[103, "_CPPv4NK8amdinfer7workers14ResNet50Stream13getAllocatorsEv"]], "amdinfer::workers::resnet50stream::spawn (c++ function)": [[103, "_CPPv4N8amdinfer7workers14ResNet50Stream5spawnEP13BatchPtrQueue"]], "amdinfer::workers::tfzendnn (c++ class)": [[104, "_CPPv4N8amdinfer7workers8TfZendnnE"]], "amdinfer::workers::tfzendnn::worker (c++ function)": [[104, "_CPPv4N8amdinfer7workers8TfZendnn6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::tfzendnn::getallocators (c++ function)": [[104, "_CPPv4NK8amdinfer7workers8TfZendnn13getAllocatorsEv"]], "amdinfer::workers::tfzendnn::spawn (c++ function)": [[104, "_CPPv4N8amdinfer7workers8TfZendnn5spawnEP13BatchPtrQueue"]], "amdinfer::workers::worker (c++ class)": [[105, "_CPPv4N8amdinfer7workers6WorkerE"]], "amdinfer::workers::worker::worker (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker6WorkerERKNSt6stringERKNSt6stringE"]], "amdinfer::workers::worker::acquire (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker7acquireEP12ParameterMap"]], "amdinfer::workers::worker::batch_size_ (c++ member)": [[105, "_CPPv4N8amdinfer7workers6Worker11batch_size_E"]], "amdinfer::workers::worker::destroy (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker7destroyEv"]], "amdinfer::workers::worker::getallocators (c++ function)": [[105, "_CPPv4NK8amdinfer7workers6Worker13getAllocatorsEv"]], "amdinfer::workers::worker::getbatchsize (c++ function)": [[105, "_CPPv4NK8amdinfer7workers6Worker12getBatchSizeEv"]], "amdinfer::workers::worker::getmetadata (c++ function)": [[105, "_CPPv4NK8amdinfer7workers6Worker11getMetadataEv"]], "amdinfer::workers::worker::getstatus (c++ function)": [[105, "_CPPv4NK8amdinfer7workers6Worker9getStatusEv"]], "amdinfer::workers::worker::init (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker4initEP12ParameterMap"]], "amdinfer::workers::worker::makebatcher (c++ function)": [[105, "_CPPv4I0EN8amdinfer7workers6Worker11makeBatcherENSt6vectorINSt10unique_ptrI7BatcherEEEEiP12ParameterMapP10MemoryPool"], [105, "_CPPv4N8amdinfer7workers6Worker11makeBatcherEiP12ParameterMapP10MemoryPool"]], "amdinfer::workers::worker::metadata_ (c++ member)": [[105, "_CPPv4N8amdinfer7workers6Worker9metadata_E"]], "amdinfer::workers::worker::pool_ (c++ member)": [[105, "_CPPv4N8amdinfer7workers6Worker5pool_E"]], "amdinfer::workers::worker::release (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker7releaseEv"]], "amdinfer::workers::worker::returninputbuffers (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker18returnInputBuffersENSt10unique_ptrI5BatchEE"]], "amdinfer::workers::worker::run (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker3runEP13BatchPtrQueue"]], "amdinfer::workers::worker::setpool (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker7setPoolEP10MemoryPool"]], "amdinfer::workers::worker::spawn (c++ function)": [[105, "_CPPv4N8amdinfer7workers6Worker5spawnEP13BatchPtrQueue"]], "amdinfer::workers::worker::~worker (c++ function)": [[105, "_CPPv4N8amdinfer7workers6WorkerD0Ev"]], "amdinfer::workers::xmodel (c++ class)": [[106, "_CPPv4N8amdinfer7workers6XModelE"]], "amdinfer::workers::xmodel::xmodel (c++ function)": [[106, "_CPPv4N8amdinfer7workers6XModel6XModelEv"]], "amdinfer::workers::xmodel::getallocators (c++ function)": [[106, "_CPPv4NK8amdinfer7workers6XModel13getAllocatorsEv"]], "amdinfer::workers::xmodel::spawn (c++ function)": [[106, "_CPPv4N8amdinfer7workers6XModel5spawnEP13BatchPtrQueue"]], "google::protobuf::map (c++ class)": [[107, "_CPPv4I00EN6google8protobuf3MapE"]], "amdinfer_enable_migraphx (c macro)": [[110, "c.AMDINFER_ENABLE_MIGRAPHX"]], "amdinfer_build_testing (c macro)": [[111, "c.AMDINFER_BUILD_TESTING"]], "amdinfer_enable_tfzendnn (c macro)": [[112, "c.AMDINFER_ENABLE_TFZENDNN"]], "amdinfer_enable_metrics (c macro)": [[113, "c.AMDINFER_ENABLE_METRICS"]], "amdinfer_enable_ptzendnn (c macro)": [[114, "c.AMDINFER_ENABLE_PTZENDNN"]], "amdinfer_enable_logging (c macro)": [[116, "c.AMDINFER_ENABLE_LOGGING"]], "amdinfer_enable_tracing (c macro)": [[117, "c.AMDINFER_ENABLE_TRACING"]], "amdinfer_enable_aks (c macro)": [[118, "c.AMDINFER_ENABLE_AKS"]], "amdinfer_enable_http (c macro)": [[119, "c.AMDINFER_ENABLE_HTTP"]], "amdinfer_enable_grpc (c macro)": [[120, "c.AMDINFER_ENABLE_GRPC"]], "amdinfer_enable_vitis (c macro)": [[121, "c.AMDINFER_ENABLE_VITIS"]], "amdinfer_log_warn (c macro)": [[124, "c.AMDINFER_LOG_WARN"]], "amdinfer_log_info (c macro)": [[125, "c.AMDINFER_LOG_INFO"]], "amdinfer_log_trace (c macro)": [[126, "c.AMDINFER_LOG_TRACE"]], "amdinfer_if_logging (c macro)": [[127, "c.AMDINFER_IF_LOGGING"]], "amdinfer_log_error (c macro)": [[128, "c.AMDINFER_LOG_ERROR"]], "amdinfer_log_debug (c macro)": [[129, "c.AMDINFER_LOG_DEBUG"]], "guard_amdinfer_core_parameters (c macro)": [[130, "c.GUARD_AMDINFER_CORE_PARAMETERS"]], "amdinfer::batcherstatus (c++ enum)": [[149, "_CPPv4N8amdinfer13BatcherStatusE"]], "amdinfer::batcherstatus::dead (c++ enumerator)": [[149, "_CPPv4N8amdinfer13BatcherStatus4DeadE"]], "amdinfer::batcherstatus::inactive (c++ enumerator)": [[149, "_CPPv4N8amdinfer13BatcherStatus8InactiveE"]], "amdinfer::batcherstatus::new (c++ enumerator)": [[149, "_CPPv4N8amdinfer13BatcherStatus3NewE"]], "amdinfer::batcherstatus::run (c++ enumerator)": [[149, "_CPPv4N8amdinfer13BatcherStatus3RunE"]], "amdinfer::updatecommandtype (c++ enum)": [[150, "_CPPv4N8amdinfer17UpdateCommandTypeE"], [156, "_CPPv4N8amdinfer17UpdateCommandTypeE"]], "amdinfer::updatecommandtype::exists (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType6ExistsE"], [156, "_CPPv4N8amdinfer17UpdateCommandType6ExistsE"]], "amdinfer::updatecommandtype::list (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType4ListE"], [156, "_CPPv4N8amdinfer17UpdateCommandType4ListE"]], "amdinfer::updatecommandtype::load (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType4LoadE"], [156, "_CPPv4N8amdinfer17UpdateCommandType4LoadE"]], "amdinfer::updatecommandtype::metadata (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType8MetadataE"], [156, "_CPPv4N8amdinfer17UpdateCommandType8MetadataE"]], "amdinfer::updatecommandtype::ready (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType5ReadyE"], [156, "_CPPv4N8amdinfer17UpdateCommandType5ReadyE"]], "amdinfer::updatecommandtype::shutdown (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType8ShutdownE"], [156, "_CPPv4N8amdinfer17UpdateCommandType8ShutdownE"]], "amdinfer::updatecommandtype::unload (c++ enumerator)": [[150, "_CPPv4N8amdinfer17UpdateCommandType6UnloadE"], [156, "_CPPv4N8amdinfer17UpdateCommandType6UnloadE"]], "amdinfer::pre_post::imageorder (c++ enum)": [[151, "_CPPv4N8amdinfer8pre_post10ImageOrderE"]], "amdinfer::pre_post::imageorder::nchw (c++ enumerator)": [[151, "_CPPv4N8amdinfer8pre_post10ImageOrder4NCHWE"]], "amdinfer::pre_post::imageorder::nhwc (c++ enumerator)": [[151, "_CPPv4N8amdinfer8pre_post10ImageOrder4NHWCE"]], "amdinfer::pre_post::resizealgorithm (c++ enum)": [[152, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithmE"]], "amdinfer::pre_post::resizealgorithm::centercrop (c++ enumerator)": [[152, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm10CenterCropE"]], "amdinfer::pre_post::resizealgorithm::letterboxcrop (c++ enumerator)": [[152, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm13LetterBoxCropE"]], "amdinfer::pre_post::resizealgorithm::simple (c++ enumerator)": [[152, "_CPPv4N8amdinfer8pre_post15ResizeAlgorithm6SimpleE"]], "amdinfer::memoryallocators (c++ enum)": [[157, "_CPPv4N8amdinfer16MemoryAllocatorsE"]], "amdinfer::memoryallocators::cpu (c++ enumerator)": [[157, "_CPPv4N8amdinfer16MemoryAllocators3CpuE"]], "amdinfer::memoryallocators::varttensor (c++ enumerator)": [[157, "_CPPv4N8amdinfer16MemoryAllocators10VartTensorE"]], "amdinfer::status (c++ enum)": [[158, "_CPPv4N8amdinfer6StatusE"]], "amdinfer::status::notfound (c++ enumerator)": [[158, "_CPPv4N8amdinfer6Status8NotFoundE"]], "amdinfer::status::notimplemented (c++ enumerator)": [[158, "_CPPv4N8amdinfer6Status14NotImplementedE"]], "amdinfer::status::ok (c++ enumerator)": [[158, "_CPPv4N8amdinfer6Status2OKE"]], "amdinfer::workers::workerstatus (c++ enum)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatusE"]], "amdinfer::workers::workerstatus::acquire (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus7AcquireE"]], "amdinfer::workers::workerstatus::dead (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus4DeadE"]], "amdinfer::workers::workerstatus::destroy (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus7DestroyE"]], "amdinfer::workers::workerstatus::inactive (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus8InactiveE"]], "amdinfer::workers::workerstatus::init (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus4InitE"]], "amdinfer::workers::workerstatus::new (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus3NewE"]], "amdinfer::workers::workerstatus::release (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus7ReleaseE"]], "amdinfer::workers::workerstatus::run (c++ enumerator)": [[159, "_CPPv4N8amdinfer7workers12WorkerStatus3RunE"]], "amdinfer::constructmessage (c++ function)": [[307, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringERKNSt6stringE"], [408, "_CPPv4N8amdinfer16constructMessageERKNSt6stringERKNSt6stringE"]], "amdinfer::util::mindecodelength (c++ function)": [[319, "_CPPv4N8amdinfer4util15minDecodeLengthE6size_t"]], "amdinfer::util::base64decode (c++ function)": [[320, "_CPPv4N8amdinfer4util12base64DecodeENSt6stringE"], [322, "_CPPv4N8amdinfer4util12base64DecodeEPKc6size_t"]], "amdinfer::util::base64encode (c++ function)": [[321, "_CPPv4N8amdinfer4util12base64EncodeEPKc6size_t"], [323, "_CPPv4N8amdinfer4util12base64EncodeENSt6stringE"]], "amdinfer::util::minencodelength (c++ function)": [[324, "_CPPv4N8amdinfer4util15minEncodeLengthE6size_t"]], "amdinfer::openmodel (c++ function)": [[326, "_CPPv4N8amdinfer9openModelERKNSt6stringE"]], "amdinfer::getfunction (c++ function)": [[327, "_CPPv4N8amdinfer11getFunctionEPvRKNSt6stringE"]], "amdinfer::workers::respond (c++ function)": [[328, "_CPPv4N8amdinfer7workers7respondEP5Batch"]], "amdinfer::pre_post::centercrop (c++ function)": [[329, "_CPPv4N8amdinfer8pre_post10centerCropEN2cv3MatEii"]], "amdinfer::inferasyncorderedbatched (c++ function)": [[330, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t"], [746, "_CPPv4N8amdinfer24inferAsyncOrderedBatchedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE6size_t"]], "amdinfer::serverhasextension (c++ function)": [[331, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE"], [746, "_CPPv4N8amdinfer18serverHasExtensionEPK6ClientRKNSt6stringE"]], "amdinfer::initializeclientlogging (c++ function)": [[332, "_CPPv4N8amdinfer23initializeClientLoggingEv"]], "amdinfer::inferasyncordered (c++ function)": [[333, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE"], [746, "_CPPv4N8amdinfer17inferAsyncOrderedEP6ClientRKNSt6stringERKNSt6vectorI16InferenceRequestEE"]], "amdinfer::waituntilserverready (c++ function)": [[334, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client"], [746, "_CPPv4N8amdinfer20waitUntilServerReadyEPK6Client"]], "amdinfer::waituntilmodelready (c++ function)": [[335, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE"], [746, "_CPPv4N8amdinfer19waitUntilModelReadyEPK6ClientRKNSt6stringE"]], "amdinfer::util::zdecompress (c++ function)": [[336, "_CPPv4N8amdinfer4util11zDecompressEPKci"]], "amdinfer::util::containerproduct (c++ function)": [[337, "_CPPv4I0EN8amdinfer4util16containerProductEDa4Iter4Iter"], [340, "_CPPv4I0EN8amdinfer4util16containerProductEDaRK9Container"]], "amdinfer::util::containersum (c++ function)": [[338, "_CPPv4I0EN8amdinfer4util12containerSumEDaRK9Container"], [339, "_CPPv4I0EN8amdinfer4util12containerSumEDa4Iter4Iter"]], "amdinfer::operator<< (c++ function)": [[341, "_CPPv4N8amdinferlsERNSt7ostreamERK8DataType"], [403, "_CPPv4N8amdinferlsERNSt7ostreamERK21InferenceRequestInput"], [404, "_CPPv4N8amdinferlsERNSt7ostreamERK23InferenceResponseOutput"], [405, "_CPPv4N8amdinferlsERNSt7ostreamERK17InferenceResponse"]], "amdinfer::detail::hash (c++ function)": [[343, "_CPPv4N8amdinfer6detail4hashENSt11string_viewE"]], "amdinfer::util::exec (c++ function)": [[346, "_CPPv4N8amdinfer4util4execEPKc"]], "amdinfer::pre_post::gettopk (c++ function)": [[347, "_CPPv4N8amdinfer8pre_post7getTopKEPKd6size_ti"]], "amdinfer::runinference (c++ function)": [[348, "_CPPv4N8amdinfer12runInferenceEPN9inference20GRPCInferenceService4StubERKNSt6stringERK16InferenceRequest"]], "amdinfer::mapprototomodelmetadata (c++ function)": [[349, "_CPPv4N8amdinfer23mapProtoToModelMetadataERKN9inference21ModelMetadataResponseE"]], "amdinfer::mapparameterstoproto (c++ function)": [[350, "_CPPv4N8amdinfer20mapParametersToProtoERKNSt3mapINSt6stringEN8amdinfer9ParameterENSt4lessIEEEEPN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE"]], "amdinfer::mapprototoparameters (c++ function)": [[351, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE"], [354, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEER12ParameterMap"], [358, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE"], [359, "_CPPv4N8amdinfer20mapProtoToParametersERKN6google8protobuf3MapINSt6stringEN9inference14InferParameterEEE"]], "amdinfer::mapresponsetoproto (c++ function)": [[352, "_CPPv4N8amdinfer18mapResponseToProtoE17InferenceResponseRN9inference18ModelInferResponseE"]], "amdinfer::mapmodelmetadatatoproto (c++ function)": [[355, "_CPPv4N8amdinfer23mapModelMetadataToProtoERK13ModelMetadataRN9inference21ModelMetadataResponseE"]], "amdinfer::mapprototoresponse (c++ function)": [[357, "_CPPv4N8amdinfer18mapProtoToResponseERKN9inference18ModelInferResponseER17InferenceResponseRK8Observer"]], "amdinfer::overloaded (c++ function)": [[362, "_CPPv4IDpEN8amdinfer10OverloadedE10OverloadedIDp2TsEDp2Ts"]], "amdinfer::gettensorcontents (c++ function)": [[363, "_CPPv4I00EN8amdinfer17getTensorContentsEPDaP6Tensor"]], "amdinfer::maprequesttoproto (c++ function)": [[364, "_CPPv4N8amdinfer17mapRequestToProtoERK16InferenceRequestRN9inference17ModelInferRequestERK8Observer"]], "amdinfer::grpc::stop (c++ function)": [[365, "_CPPv4N8amdinfer4grpc4stopEv"]], "amdinfer::grpcunarycallback (c++ function)": [[366, "_CPPv4N8amdinfer17grpcUnaryCallbackEP18CallDataModelInferRK17InferenceResponse"]], "amdinfer::getoutput (c++ function)": [[367, "_CPPv4N8amdinfer9getOutputERKN9inference44ModelInferRequest_InferRequestedOutputTensorE"]], "amdinfer::getrequest (c++ function)": [[368, "_CPPv4N8amdinfer10getRequestERKN9inference17ModelInferRequestEPK10MemoryPool"], [429, "_CPPv4N8amdinfer10getRequestERK16InferenceRequestPK10MemoryPool"]], "amdinfer::grpc::start (c++ function)": [[369, "_CPPv4N8amdinfer4grpc5startEP11SharedStatei"]], "amdinfer::getinput (c++ function)": [[370, "_CPPv4N8amdinfer8getInputERKN9inference34ModelInferRequest_InferInputTensorEPK10MemoryPool"]], "amdinfer::setcallback (c++ function)": [[371, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequestP18CallDataModelInfer"], [430, "_CPPv4N8amdinfer11setCallbackEP16InferenceRequest"]], "amdinfer::createpostrequest (c++ function)": [[373, "_CPPv4N8amdinfer17createPostRequestERKN4Json5ValueERKNSt6stringERK9StringMap"]], "amdinfer::checkerror (c++ function)": [[374, "_CPPv4N8amdinfer10checkErrorEN6drogon9ReqResultE"]], "amdinfer::addheaders (c++ function)": [[375, "_CPPv4N8amdinfer10addHeadersERKN6drogon14HttpRequestPtrERK9StringMap"]], "amdinfer::creategetrequest (c++ function)": [[376, "_CPPv4N8amdinfer16createGetRequestERKNSt6stringERK9StringMap"]], "amdinfer::createinferencerequest (c++ function)": [[377, "_CPPv4N8amdinfer22createInferenceRequestERKNSt6stringERK16InferenceRequestRK9StringMap"]], "amdinfer::modelmetadatatojson (c++ function)": [[378, "_CPPv4N8amdinfer19modelMetadataToJsonERK13ModelMetadata"]], "amdinfer::modelmetadatatensortojson (c++ function)": [[379, "_CPPv4N8amdinfer25modelMetadataTensorToJsonERK19ModelMetadataTensor"]], "amdinfer::mapjsontoparameters (c++ function)": [[380, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE"], [386, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE"], [390, "_CPPv4N8amdinfer19mapJsonToParametersEN4Json5ValueE"]], "amdinfer::mapjsontomodelmetadata (c++ function)": [[381, "_CPPv4N8amdinfer22mapJsonToModelMetadataEPKN4Json5ValueE"]], "amdinfer::mapjsontoresponse (c++ function)": [[382, "_CPPv4N8amdinfer17mapJsonToResponseEPN4Json5ValueE"]], "amdinfer::errorhttpresponse (c++ function)": [[383, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi"], [396, "_CPPv4N8amdinfer17errorHttpResponseERKNSt6stringEi"]], "amdinfer::parsejson (c++ function)": [[385, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE"], [397, "_CPPv4N8amdinfer9parseJsonEPKN6drogon11HttpRequestE"]], "amdinfer::mapparameterstojson (c++ function)": [[387, "_CPPv4N8amdinfer19mapParametersToJsonERK12ParameterMap"]], "amdinfer::parseresponse (c++ function)": [[388, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse"], [399, "_CPPv4N8amdinfer13parseResponseE17InferenceResponse"]], "amdinfer::maprequesttojson (c++ function)": [[391, "_CPPv4N8amdinfer16mapRequestToJsonERK16InferenceRequest"]], "amdinfer::jsonvaluetotype (c++ function)": [[392, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE"], [393, "_CPPv4I0EN8amdinfer15jsonValueToTypeEDaRKN4Json5ValueE"]], "amdinfer::http::stop (c++ function)": [[394, "_CPPv4N8amdinfer4http4stopEv"]], "amdinfer::http::start (c++ function)": [[395, "_CPPv4N8amdinfer4http5startEP11SharedState8uint16_t"]], "amdinfer::pre_post::imagepreprocess (c++ function)": [[400, "_CPPv4I0EN8amdinfer8pre_post15imagePreprocessENSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6stringEEERK22ImagePreprocessOptionsI1TXL3EEE"]], "amdinfer::pre_post::detail::normalize (c++ function)": [[401, "_CPPv4I0_iEN8amdinfer8pre_post6detail9normalizeEvRKN2cv3MatE10ImageOrderP1TPK1TPK1T"]], "amdinfer::pre_post::detail::nestedloop (c++ function)": [[402, "_CPPv4I00EN8amdinfer8pre_post6detail10nestedLoopEviiiP1T1F"]], "amdinfer::initlogger (c++ function)": [[409, "_CPPv4N8amdinfer10initLoggerERK10LogOptions"]], "amdinfer::getlevel (c++ function)": [[410, "_CPPv4N8amdinfer8getLevelE8LogLevel"]], "amdinfer::getlogdirectory (c++ function)": [[411, "_CPPv4N8amdinfer15getLogDirectoryEv"]], "amdinfer::workers::todatatype (c++ function)": [[417, "_CPPv4N8amdinfer7workers10toDataTypeE25migraphx_shape_datatype_t"]], "amdinfer::parsemodel (c++ function)": [[419, "_CPPv4N8amdinfer10parseModelERKN2fs4pathERKNSt6stringEP12ParameterMap"], [422, "_CPPv4N8amdinfer10parseModelERKNSt10filesystem4pathERKNSt6stringEP12ParameterMap"]], "amdinfer::mapprototoparameters2 (c++ function)": [[420, "_CPPv4N8amdinfer21mapProtoToParameters2ERKN6google8protobuf3MapINSt6stringEN9inference15InferParameter2EEEP12ParameterMap"]], "amdinfer::expandtype (c++ function)": [[432, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE"], [434, "_CPPv4IDpEN8amdinfer10expandTypeENSt7variantIDp2TsEENSt6size_tE"]], "amdinfer::util::autoexpandenvironmentvariables (c++ function)": [[433, "_CPPv4N8amdinfer4util30autoExpandEnvironmentVariablesERNSt6stringE"]], "amdinfer::util::readnthline (c++ function)": [[437, "_CPPv4N8amdinfer4util11readNthLineERKNSt6stringEi"]], "amdinfer::pre_post::resnet50postprocess (c++ function)": [[439, "_CPPv4I0EN8amdinfer8pre_post19resnet50PostprocessENSt6vectorIiEEPK1T6size_ti"]], "amdinfer::terminate (c++ function)": [[441, "_CPPv4N8amdinfer9terminateEv"]], "amdinfer::initializeserverlogging (c++ function)": [[443, "_CPPv4N8amdinfer23initializeServerLoggingEv"]], "amdinfer::pre_post::calcsoftmax (c++ function)": [[444, "_CPPv4I0EN8amdinfer8pre_post11calcSoftmaxEvPK1T6size_tPd"]], "amdinfer::util::startswith (c++ function)": [[445, "_CPPv4N8amdinfer4util10startsWithENSt11string_viewENSt11string_viewE"]], "amdinfer::util::tolower (c++ function)": [[446, "_CPPv4N8amdinfer4util7toLowerEPNSt6stringE"], [447, "_CPPv4N8amdinfer4util7toLowerERKNSt6stringE"]], "amdinfer::util::endswith (c++ function)": [[448, "_CPPv4N8amdinfer4util8endsWithENSt11string_viewENSt11string_viewE"]], "amdinfer::util::addresstostring (c++ function)": [[449, "_CPPv4N8amdinfer4util15addressToStringEPKv"]], "amdinfer::util::split (c++ function)": [[450, "_CPPv4N8amdinfer4util5splitENSt11string_viewENSt11string_viewE"]], "amdinfer::util::islower (c++ function)": [[451, "_CPPv4N8amdinfer4util7isLowerENSt11string_viewE"]], "amdinfer::workers::openlibrary (c++ function)": [[453, "_CPPv4N8amdinfer7workers11openLibraryEPKci"]], "amdinfer::util::setthreadname (c++ function)": [[454, "_CPPv4N8amdinfer4util13setThreadNameEPKc"], [455, "_CPPv4N8amdinfer4util13setThreadNameERKNSt6stringE"]], "amdinfer::util::gettime (c++ function)": [[456, "_CPPv4N8amdinfer4util7getTimeEv"]], "amdinfer::http::setcallback (c++ function)": [[457, "_CPPv4N8amdinfer4http11setCallbackEP16InferenceRequestN6drogon22WebSocketConnectionPtrE"]], "amdinfer::findfunc (c++ function)": [[458, "_CPPv4N8amdinfer8findFuncERKNSt6stringERKNSt6stringE"]], "amdinfer::getworker (c++ function)": [[459, "_CPPv4N8amdinfer9getWorkerERKNSt6stringE"]], "amdinfer::adddatatotensor (c++ struct)": [[626, "_CPPv4N8amdinfer15AddDataToTensorE"]], "amdinfer::adddatatotensor::operator() (c++ function)": [[626, "_CPPv4I00ENK8amdinfer15AddDataToTensorclEvPKv6size_tP6TensorRK8Observer"]], "amdinfer::inferencerequestinputsizes (c++ struct)": [[627, "_CPPv4N8amdinfer26InferenceRequestInputSizesE"]], "amdinfer::inferencerequestinputsizes::data (c++ member)": [[627, "_CPPv4N8amdinfer26InferenceRequestInputSizes4dataE"]], "amdinfer::inferenceresponseoutputsizes (c++ struct)": [[628, "_CPPv4N8amdinfer28InferenceResponseOutputSizesE"]], "amdinfer::inferenceresponseoutputsizes::data (c++ member)": [[628, "_CPPv4N8amdinfer28InferenceResponseOutputSizes4dataE"]], "amdinfer::memoryheader (c++ struct)": [[630, "_CPPv4N8amdinfer12MemoryHeaderE"]], "amdinfer::memoryheader::memoryheader (c++ function)": [[630, "_CPPv4N8amdinfer12MemoryHeader12MemoryHeaderEPNSt4byteE6size_tb6size_t"]], "amdinfer::memoryheader::address (c++ member)": [[630, "_CPPv4N8amdinfer12MemoryHeader7addressE"]], "amdinfer::memoryheader::block_id (c++ member)": [[630, "_CPPv4N8amdinfer12MemoryHeader8block_idE"]], "amdinfer::memoryheader::free (c++ member)": [[630, "_CPPv4N8amdinfer12MemoryHeader4freeE"]], "amdinfer::memoryheader::size (c++ member)": [[630, "_CPPv4N8amdinfer12MemoryHeader4sizeE"]], "amdinfer::observer (c++ struct)": [[632, "_CPPv4N8amdinfer8ObserverE"]], "amdinfer::overloaded (c++ struct)": [[633, "_CPPv4IDpEN8amdinfer10OverloadedE"]], "amdinfer::requestcontainer (c++ struct)": [[634, "_CPPv4N8amdinfer16RequestContainerE"]], "amdinfer::requestcontainer::request (c++ member)": [[634, "_CPPv4N8amdinfer16RequestContainer7requestE"]], "amdinfer::servermetadata (c++ struct)": [[635, "_CPPv4N8amdinfer14ServerMetadataE"], [746, "_CPPv4N8amdinfer14ServerMetadataE"]], "amdinfer::servermetadata::extensions (c++ member)": [[635, "_CPPv4N8amdinfer14ServerMetadata10extensionsE"], [746, "_CPPv4N8amdinfer14ServerMetadata10extensionsE"]], "amdinfer::servermetadata::name (c++ member)": [[635, "_CPPv4N8amdinfer14ServerMetadata4nameE"], [746, "_CPPv4N8amdinfer14ServerMetadata4nameE"]], "amdinfer::servermetadata::version (c++ member)": [[635, "_CPPv4N8amdinfer14ServerMetadata7versionE"], [746, "_CPPv4N8amdinfer14ServerMetadata7versionE"]], "amdinfer::setinputdata (c++ struct)": [[637, "_CPPv4N8amdinfer12SetInputDataE"]], "amdinfer::setinputdata::operator() (c++ function)": [[637, "_CPPv4I0ENK8amdinfer12SetInputDataclEvPN4Json5ValueEPv6size_t"]], "amdinfer::setoutputdata (c++ struct)": [[638, "_CPPv4N8amdinfer13SetOutputDataE"]], "amdinfer::setoutputdata::operator() (c++ function)": [[638, "_CPPv4I00ENK8amdinfer13SetOutputDataclEvP23InferenceResponseOutput6size_tP6TensorRK8Observer"], [638, "_CPPv4I0ENK8amdinfer13SetOutputDataclEvRKN4Json5ValueEP23InferenceResponseOutput"]], "amdinfer::tensorsizes (c++ struct)": [[639, "_CPPv4N8amdinfer11TensorSizesE"]], "amdinfer::tensorsizes::data_type (c++ member)": [[639, "_CPPv4N8amdinfer11TensorSizes9data_typeE"]], "amdinfer::tensorsizes::name (c++ member)": [[639, "_CPPv4N8amdinfer11TensorSizes4nameE"]], "amdinfer::tensorsizes::shape (c++ member)": [[639, "_CPPv4N8amdinfer11TensorSizes5shapeE"]], "amdinfer::updatecommand (c++ struct)": [[640, "_CPPv4N8amdinfer13UpdateCommandE"]], "amdinfer::updatecommand::updatecommand (c++ function)": [[640, "_CPPv4N8amdinfer13UpdateCommand13UpdateCommandE17UpdateCommandTypeNSt6stringEPvPv"]], "amdinfer::updatecommand::cmd (c++ member)": [[640, "_CPPv4N8amdinfer13UpdateCommand3cmdE"]], "amdinfer::updatecommand::eptr (c++ member)": [[640, "_CPPv4N8amdinfer13UpdateCommand4eptrE"]], "amdinfer::updatecommand::key (c++ member)": [[640, "_CPPv4N8amdinfer13UpdateCommand3keyE"]], "amdinfer::updatecommand::object (c++ member)": [[640, "_CPPv4N8amdinfer13UpdateCommand6objectE"]], "amdinfer::updatecommand::retval (c++ member)": [[640, "_CPPv4N8amdinfer13UpdateCommand6retvalE"]], "amdinfer::writedata (c++ struct)": [[641, "_CPPv4N8amdinfer9WriteDataE"]], "amdinfer::writedata::operator() (c++ function)": [[641, "_CPPv4I00ENK8amdinfer9WriteDataclEvP6BufferP6Tensor6size_t6size_tRK8Observer"], [641, "_CPPv4I0ENK8amdinfer9WriteDataclE6size_tP6BufferRKN4Json5ValueE6size_t"]], "amdinfer::pre_post::imagepreprocessoptions (c++ struct)": [[642, "_CPPv4I0_iEN8amdinfer8pre_post22ImagePreprocessOptionsE"]], "amdinfer::pre_post::imagepreprocessoptions::assign (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6assignE"]], "amdinfer::pre_post::imagepreprocessoptions::channels (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions8channelsE"]], "amdinfer::pre_post::imagepreprocessoptions::color_code (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions10color_codeE"]], "amdinfer::pre_post::imagepreprocessoptions::convert_color (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions13convert_colorE"]], "amdinfer::pre_post::imagepreprocessoptions::convert_scale (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions13convert_scaleE"]], "amdinfer::pre_post::imagepreprocessoptions::convert_type (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions12convert_typeE"]], "amdinfer::pre_post::imagepreprocessoptions::height (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6heightE"]], "amdinfer::pre_post::imagepreprocessoptions::mean (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions4meanE"]], "amdinfer::pre_post::imagepreprocessoptions::normalize (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions9normalizeE"]], "amdinfer::pre_post::imagepreprocessoptions::order (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions5orderE"]], "amdinfer::pre_post::imagepreprocessoptions::resize (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions6resizeE"]], "amdinfer::pre_post::imagepreprocessoptions::resize_algorithm (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions16resize_algorithmE"]], "amdinfer::pre_post::imagepreprocessoptions::std (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptionsStE"]], "amdinfer::pre_post::imagepreprocessoptions::type (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions4typeE"]], "amdinfer::pre_post::imagepreprocessoptions::width (c++ member)": [[642, "_CPPv4N8amdinfer8pre_post22ImagePreprocessOptions5widthE"]], "amdinfer::util::is_any (c++ struct)": [[643, "_CPPv4I0DpEN8amdinfer4util6is_anyE"]], "amdinfer::workers::detectresponse (c++ struct)": [[644, "_CPPv4N8amdinfer7workers14DetectResponseE"]], "amdinfer::workers::detectresponse::class_id (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse8class_idE"]], "amdinfer::workers::detectresponse::h (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse1hE"]], "amdinfer::workers::detectresponse::score (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse5scoreE"]], "amdinfer::workers::detectresponse::w (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse1wE"]], "amdinfer::workers::detectresponse::x (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse1xE"]], "amdinfer::workers::detectresponse::y (c++ member)": [[644, "_CPPv4N8amdinfer7workers14DetectResponse1yE"]], "std::less<amdinfer::parametermap> (c++ struct)": [[645, "_CPPv4IENSt4lessIN8amdinfer12ParameterMapEEE"]], "std::less<amdinfer::parametermap>::operator() (c++ function)": [[645, "_CPPv4NKSt4lessIN8amdinfer12ParameterMapEEclERKN8amdinfer12ParameterMapERKN8amdinfer12ParameterMapE"]], "amdinfer::batchptr (c++ type)": [[647, "_CPPv4N8amdinfer8BatchPtrE"], [648, "_CPPv4N8amdinfer8BatchPtrE"]], "amdinfer::batchptrqueue (c++ type)": [[649, "_CPPv4N8amdinfer13BatchPtrQueueE"]], "amdinfer::fp16 (c++ type)": [[650, "_CPPv4N8amdinfer4fp16E"]], "amdinfer::callback (c++ type)": [[651, "_CPPv4N8amdinfer8CallbackE"], [683, "_CPPv4N8amdinfer8CallbackE"]], "amdinfer::inferencerequestptr (c++ type)": [[653, "_CPPv4N8amdinfer19InferenceRequestPtrE"]], "amdinfer::bufferrawptrs (c++ type)": [[654, "_CPPv4N8amdinfer13BufferRawPtrsE"], [665, "_CPPv4N8amdinfer13BufferRawPtrsE"]], "amdinfer::requestcontainerptr (c++ type)": [[655, "_CPPv4N8amdinfer19RequestContainerPtrE"]], "amdinfer::traceptr (c++ type)": [[656, "_CPPv4N8amdinfer8TracePtrE"]], "amdinfer::inferenceresponsefuture (c++ type)": [[657, "_CPPv4N8amdinfer23InferenceResponseFutureE"], [658, "_CPPv4N8amdinfer23InferenceResponseFutureE"]], "amdinfer::stringmap (c++ type)": [[659, "_CPPv4N8amdinfer9StringMapE"]], "amdinfer::inferenceresponsepromiseptr (c++ type)": [[660, "_CPPv4N8amdinfer27InferenceResponsePromisePtrE"], [684, "_CPPv4N8amdinfer27InferenceResponsePromisePtrE"]], "amdinfer::bufferptrs (c++ type)": [[662, "_CPPv4N8amdinfer10BufferPtrsE"]], "amdinfer::kernels (c++ type)": [[663, "_CPPv4N8amdinfer7KernelsE"]], "amdinfer::bufferptr (c++ type)": [[664, "_CPPv4N8amdinfer9BufferPtrE"]], "amdinfer::updatecommandqueue (c++ type)": [[666, "_CPPv4N8amdinfer18UpdateCommandQueueE"], [679, "_CPPv4N8amdinfer18UpdateCommandQueueE"]], "amdinfer::asyncservice (c++ type)": [[671, "_CPPv4N8amdinfer12AsyncServiceE"]], "amdinfer::drogoncallback (c++ type)": [[677, "_CPPv4N8amdinfer14DrogonCallbackE"], [678, "_CPPv4N8amdinfer14DrogonCallbackE"]], "amdinfer::modelmetadatatensor (c++ type)": [[680, "_CPPv4N8amdinfer19ModelMetadataTensorE"]], "amdinfer::parametermapptr (c++ type)": [[681, "_CPPv4N8amdinfer15ParameterMapPtrE"]], "amdinfer::parameter (c++ type)": [[682, "_CPPv4N8amdinfer9ParameterE"], [686, "_CPPv4N8amdinfer9ParameterE"]], "amdinfer::inferencerequestptrqueue (c++ type)": [[687, "_CPPv4N8amdinfer24InferenceRequestPtrQueueE"]], "amdinfer::blockingqueue (c++ type)": [[688, "_CPPv4I0EN8amdinfer13BlockingQueueE"]], "amdinfer::bufferptrsqueueptr (c++ type)": [[689, "_CPPv4N8amdinfer18BufferPtrsQueuePtrE"]], "amdinfer::bufferptrsqueue (c++ type)": [[690, "_CPPv4N8amdinfer15BufferPtrsQueueE"]], "amdinfer::util::timepoint (c++ type)": [[692, "_CPPv4N8amdinfer4util9TimePointE"]], "amdinfer::workers::kimagechannels (c++ member)": [[695, "_CPPv4N8amdinfer7workers14kImageChannelsE"]], "amdinfer::workers::kimagesize (c++ member)": [[696, "_CPPv4N8amdinfer7workers10kImageSizeE"], [733, "_CPPv4N8amdinfer7workers10kImageSizeE"]], "amdinfer::workers::kimageheight (c++ member)": [[697, "_CPPv4N8amdinfer7workers12kImageHeightE"]], "amdinfer::workers::kimagewidth (c++ member)": [[698, "_CPPv4N8amdinfer7workers11kImageWidthE"]], "amdinfer::workers::kakddetectresponsesize (c++ member)": [[699, "_CPPv4N8amdinfer7workers22kAkdDetectResponseSizeE"]], "kdefaulthttpport (c++ member)": [[700, "_CPPv416kDefaultHttpPort"]], "kdefaultdrogonthreads (c++ member)": [[701, "_CPPv421kDefaultDrogonThreads"]], "kmaxmodelnamesize (c++ member)": [[702, "_CPPv417kMaxModelNameSize"]], "kdefaultgrpcport (c++ member)": [[703, "_CPPv416kDefaultGrpcPort"]], "kmaxgrpcmessagesize (c++ member)": [[704, "_CPPv419kMaxGrpcMessageSize"]], "kmaxclientbodysize (c++ member)": [[705, "_CPPv418kMaxClientBodySize"]], "amdinfer::koutputlengths (c++ member)": [[706, "_CPPv4N8amdinfer14kOutputLengthsE"], [711, "_CPPv4N8amdinfer14kOutputLengthsE"], [726, "_CPPv4N8amdinfer14kOutputLengthsE"]], "amdinfer::kinputlengths (c++ member)": [[707, "_CPPv4N8amdinfer13kInputLengthsE"], [714, "_CPPv4N8amdinfer13kInputLengthsE"], [727, "_CPPv4N8amdinfer13kInputLengthsE"]], "amdinfer::kinputtensors (c++ member)": [[708, "_CPPv4N8amdinfer13kInputTensorsE"], [712, "_CPPv4N8amdinfer13kInputTensorsE"], [725, "_CPPv4N8amdinfer13kInputTensorsE"]], "amdinfer::koutputtensors (c++ member)": [[709, "_CPPv4N8amdinfer14kOutputTensorsE"], [713, "_CPPv4N8amdinfer14kOutputTensorsE"], [724, "_CPPv4N8amdinfer14kOutputTensorsE"]], "amdinfer::util::kthreadpoollength (c++ member)": [[710, "_CPPv4N8amdinfer4util17kThreadPoolLengthE"]], "amdinfer::pre_post::kdefaultimagesize (c++ member)": [[715, "_CPPv4N8amdinfer8pre_post17kDefaultImageSizeE"]], "amdinfer::workers::kmaximageheight (c++ member)": [[716, "_CPPv4N8amdinfer7workers15kMaxImageHeightE"]], "amdinfer::workers::kmaximagechannels (c++ member)": [[717, "_CPPv4N8amdinfer7workers17kMaxImageChannelsE"]], "amdinfer::workers::kmaximagewidth (c++ member)": [[718, "_CPPv4N8amdinfer7workers14kMaxImageWidthE"]], "amdinfer::workers::kmaxurllength (c++ member)": [[719, "_CPPv4N8amdinfer7workers13kMaxUrlLengthE"]], "amdinfer::kpercentile90 (c++ member)": [[721, "_CPPv4N8amdinfer13kPercentile90E"]], "amdinfer::kpercentile99 (c++ member)": [[722, "_CPPv4N8amdinfer13kPercentile99E"]], "amdinfer::kpercentile50 (c++ member)": [[723, "_CPPv4N8amdinfer13kPercentile50E"]], "amdinfer::knumtracedata (c++ member)": [[728, "_CPPv4N8amdinfer13kNumTraceDataE"]], "amdinfer::kdefaultcpublocksize (c++ member)": [[729, "_CPPv4N8amdinfer20kDefaultCpuBlockSizeE"]], "amdinfer::workers::kresnetimagesize (c++ member)": [[730, "_CPPv4N8amdinfer7workers16kResNetImageSizeE"]], "amdinfer::workers::kresnetimagechannels (c++ member)": [[731, "_CPPv4N8amdinfer7workers20kResNetImageChannelsE"]], "amdinfer::workers::kresnetoutputclasses (c++ member)": [[732, "_CPPv4N8amdinfer7workers20kResNetOutputClassesE"]], "amdinfer::workers::kimagewidthstr (c++ member)": [[734, "_CPPv4N8amdinfer7workers14kImageWidthStrE"]], "amdinfer::workers::kboxheight (c++ member)": [[735, "_CPPv4N8amdinfer7workers10kBoxHeightE"]], "amdinfer::workers::kboxheightstr (c++ member)": [[736, "_CPPv4N8amdinfer7workers13kBoxHeightStrE"]], "amdinfer::workers::kresnetclassifications (c++ member)": [[737, "_CPPv4N8amdinfer7workers22kResnetClassificationsE"]], "amdinfer::util::is_any_v (c++ member)": [[739, "_CPPv4I0DpEN8amdinfer4util8is_any_vE"]], "kamdinferversionmajor (c++ member)": [[740, "_CPPv421kAmdinferVersionMajor"]], "kamdinferversionlabel (c++ member)": [[741, "_CPPv421kAmdinferVersionLabel"]], "kamdinferversionpatch (c++ member)": [[742, "_CPPv421kAmdinferVersionPatch"]], "kamdinferversionminor (c++ member)": [[743, "_CPPv421kAmdinferVersionMinor"]], "kamdinferversion (c++ member)": [[744, "_CPPv416kAmdinferVersion"]], "amdinfer::knumbufferauto (c++ member)": [[745, "_CPPv4N8amdinfer14kNumBufferAutoE"]], "amdinfer (c++ type)": [[746, "_CPPv48amdinfer"]], "xrt": [[751, "term-XRT"]], "xilinx runtime": [[751, "term-Xilinx-Runtime"]], "bool (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.BOOL"]], "bool (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.BOOL"]], "badstatus": [[763, "amdinfer.BadStatus"]], "client (class in amdinfer)": [[763, "amdinfer.Client"]], "connectionerror": [[763, "amdinfer.ConnectionError"]], "datatype (class in amdinfer)": [[763, "amdinfer.DataType"]], "datatype.value (class in amdinfer)": [[763, "amdinfer.DataType.Value"]], "environmentnotseterror": [[763, "amdinfer.EnvironmentNotSetError"]], "externalerror": [[763, "amdinfer.ExternalError"]], "float32 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.FLOAT32"]], "float32 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.FLOAT32"]], "float64 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.FLOAT64"]], "float64 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.FLOAT64"]], "fp16 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.FP16"]], "fp16 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.FP16"]], "fp32 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.FP32"]], "fp32 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.FP32"]], "fp64 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.FP64"]], "fp64 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.FP64"]], "filenotfounderror": [[763, "amdinfer.FileNotFoundError"]], "filereaderror": [[763, "amdinfer.FileReadError"]], "grpcclient (class in amdinfer)": [[763, "amdinfer.GrpcClient"]], "httpclient (class in amdinfer)": [[763, "amdinfer.HttpClient"]], "int16 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.INT16"]], "int16 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.INT16"]], "int32 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.INT32"]], "int32 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.INT32"]], "int64 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.INT64"]], "int64 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.INT64"]], "int8 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.INT8"]], "int8 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.INT8"]], "imageinferencerequest() (in module amdinfer)": [[763, "amdinfer.ImageInferenceRequest"]], "inferencerequest (class in amdinfer)": [[763, "amdinfer.InferenceRequest"]], "inferencerequestinput (class in amdinfer)": [[763, "amdinfer.InferenceRequestInput"]], "inferencerequestoutput (class in amdinfer)": [[763, "amdinfer.InferenceRequestOutput"]], "inferenceresponse (class in amdinfer)": [[763, "amdinfer.InferenceResponse"]], "inferenceresponseoutput (class in amdinfer)": [[763, "amdinfer.InferenceResponseOutput"]], "inferencetensor (class in amdinfer)": [[763, "amdinfer.InferenceTensor"]], "invalidargumenterror": [[763, "amdinfer.InvalidArgumentError"]], "modelmetadata (class in amdinfer)": [[763, "amdinfer.ModelMetadata"]], "nativeclient (class in amdinfer)": [[763, "amdinfer.NativeClient"]], "parametermap (class in amdinfer)": [[763, "amdinfer.ParameterMap"]], "runtimeerror": [[763, "amdinfer.RuntimeError"]], "string (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.STRING"]], "string (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.STRING"]], "server (class in amdinfer)": [[763, "amdinfer.Server"]], "servermetadata (class in amdinfer)": [[763, "amdinfer.ServerMetadata"]], "tensor (class in amdinfer)": [[763, "amdinfer.Tensor"]], "uint16 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.UINT16"]], "uint16 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.UINT16"]], "uint32 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.UINT32"]], "uint32 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.UINT32"]], "uint64 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.UINT64"]], "uint64 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.UINT64"]], "uint8 (amdinfer.datatype attribute)": [[763, "amdinfer.DataType.UINT8"]], "uint8 (amdinfer.datatype.value attribute)": [[763, "amdinfer.DataType.Value.UINT8"]], "websocketclient (class in amdinfer)": [[763, "amdinfer.WebSocketClient"]], "__init__() (amdinfer.client method)": [[763, "amdinfer.Client.__init__"]], "__init__() (amdinfer.datatype method)": [[763, "amdinfer.DataType.__init__"]], "__init__() (amdinfer.datatype.value method)": [[763, "amdinfer.DataType.Value.__init__"]], "__init__() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.__init__"]], "__init__() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.__init__"]], "__init__() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.__init__"]], "__init__() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.__init__"]], "__init__() (amdinfer.inferencerequestoutput method)": [[763, "amdinfer.InferenceRequestOutput.__init__"]], "__init__() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.__init__"]], "__init__() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.__init__"]], "__init__() (amdinfer.inferencetensor method)": [[763, "amdinfer.InferenceTensor.__init__"]], "__init__() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.__init__"]], "__init__() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.__init__"]], "__init__() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.__init__"]], "__init__() (amdinfer.server method)": [[763, "amdinfer.Server.__init__"]], "__init__() (amdinfer.servermetadata method)": [[763, "amdinfer.ServerMetadata.__init__"]], "__init__() (amdinfer.tensor method)": [[763, "amdinfer.Tensor.__init__"]], "__init__() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.__init__"]], "addinputtensor() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.addInputTensor"]], "addinputtensor() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.addInputTensor"]], "addoutput() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.addOutput"]], "addoutputtensor() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.addOutputTensor"]], "addoutputtensor() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.addOutputTensor"]], "amdinfer": [[763, "module-amdinfer"]], "close() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.close"]], "data (amdinfer.inferencerequestoutput property)": [[763, "amdinfer.InferenceRequestOutput.data"]], "datatype (amdinfer.inferenceresponseoutput property)": [[763, "amdinfer.InferenceResponseOutput.datatype"]], "datatype (amdinfer.tensor property)": [[763, "amdinfer.Tensor.datatype"]], "empty() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.empty"]], "enablerepositorymonitoring() (amdinfer.server method)": [[763, "amdinfer.Server.enableRepositoryMonitoring"]], "erase() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.erase"]], "extensions (amdinfer.servermetadata property)": [[763, "amdinfer.ServerMetadata.extensions"]], "getbool() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.getBool"]], "getcontext() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.getContext"]], "geterror() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.getError"]], "getfloat() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.getFloat"]], "getfp16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getFp16Data"]], "getfp16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getFp16Data"]], "getfp32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getFp32Data"]], "getfp32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getFp32Data"]], "getfp64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getFp64Data"]], "getfp64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getFp64Data"]], "getinputsize() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.getInputSize"]], "getinputs() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.getInputs"]], "getint() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.getInt"]], "getint16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getInt16Data"]], "getint16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getInt16Data"]], "getint32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getInt32Data"]], "getint32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getInt32Data"]], "getint64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getInt64Data"]], "getint64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getInt64Data"]], "getint8data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getInt8Data"]], "getint8data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getInt8Data"]], "getoutputs() (amdinfer.inferencerequest method)": [[763, "amdinfer.InferenceRequest.getOutputs"]], "getoutputs() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.getOutputs"]], "getparameters() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.getParameters"]], "getplatform() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.getPlatform"]], "getsize() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getSize"]], "getsize() (amdinfer.tensor method)": [[763, "amdinfer.Tensor.getSize"]], "getstring() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.getString"]], "getstringdata() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getStringData"]], "getstringdata() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getStringData"]], "getuint16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getUint16Data"]], "getuint16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getUint16Data"]], "getuint32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getUint32Data"]], "getuint32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getUint32Data"]], "getuint64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getUint64Data"]], "getuint64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getUint64Data"]], "getuint8data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.getUint8Data"]], "getuint8data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.getUint8Data"]], "has() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.has"]], "hashardware() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.hasHardware"]], "hashardware() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.hasHardware"]], "hashardware() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.hasHardware"]], "hashardware() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.hasHardware"]], "id (amdinfer.inferencerequest property)": [[763, "amdinfer.InferenceRequest.id"]], "id (amdinfer.inferenceresponse property)": [[763, "amdinfer.InferenceResponse.id"]], "inferasyncordered() (in module amdinfer)": [[763, "amdinfer.inferAsyncOrdered"]], "inferasyncorderedbatched() (in module amdinfer)": [[763, "amdinfer.inferAsyncOrderedBatched"]], "inference_request_to_dict() (in module amdinfer)": [[763, "amdinfer.inference_request_to_dict"]], "iserror() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.isError"]], "isready() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.isReady"]], "model (amdinfer.inferenceresponse property)": [[763, "amdinfer.InferenceResponse.model"]], "modelinfer() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelInfer"]], "modelinfer() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelInfer"]], "modelinfer() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelInfer"]], "modelinfer() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelInfer"]], "modelinferws() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelInferWs"]], "modellist() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelList"]], "modellist() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelList"]], "modellist() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelList"]], "modellist() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelList"]], "modelload() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelLoad"]], "modelload() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelLoad"]], "modelload() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelLoad"]], "modelload() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelLoad"]], "modelmetadata() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelMetadata"]], "modelmetadata() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelMetadata"]], "modelmetadata() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelMetadata"]], "modelmetadata() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelMetadata"]], "modelready() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelReady"]], "modelready() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelReady"]], "modelready() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelReady"]], "modelready() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelReady"]], "modelrecv() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelRecv"]], "modelunload() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.modelUnload"]], "modelunload() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.modelUnload"]], "modelunload() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.modelUnload"]], "modelunload() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.modelUnload"]], "module": [[763, "module-amdinfer"]], "name (amdinfer.datatype.value property)": [[763, "amdinfer.DataType.Value.name"]], "name (amdinfer.inferencerequestoutput property)": [[763, "amdinfer.InferenceRequestOutput.name"]], "name (amdinfer.inferenceresponseoutput property)": [[763, "amdinfer.InferenceResponseOutput.name"]], "name (amdinfer.modelmetadata property)": [[763, "amdinfer.ModelMetadata.name"]], "name (amdinfer.servermetadata property)": [[763, "amdinfer.ServerMetadata.name"]], "name (amdinfer.tensor property)": [[763, "amdinfer.Tensor.name"]], "parallel_infer() (in module amdinfer)": [[763, "amdinfer.parallel_infer"]], "parameters (amdinfer.inferencerequest property)": [[763, "amdinfer.InferenceRequest.parameters"]], "parameters (amdinfer.inferencerequestoutput property)": [[763, "amdinfer.InferenceRequestOutput.parameters"]], "parameters (amdinfer.inferenceresponseoutput property)": [[763, "amdinfer.InferenceResponseOutput.parameters"]], "parameters (amdinfer.inferencetensor property)": [[763, "amdinfer.InferenceTensor.parameters"]], "put() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.put"]], "serverhasextension() (in module amdinfer)": [[763, "amdinfer.serverHasExtension"]], "serverlive() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.serverLive"]], "serverlive() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.serverLive"]], "serverlive() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.serverLive"]], "serverlive() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.serverLive"]], "servermetadata() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.serverMetadata"]], "servermetadata() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.serverMetadata"]], "servermetadata() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.serverMetadata"]], "servermetadata() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.serverMetadata"]], "serverready() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.serverReady"]], "serverready() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.serverReady"]], "serverready() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.serverReady"]], "serverready() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.serverReady"]], "setcontext() (amdinfer.inferenceresponse method)": [[763, "amdinfer.InferenceResponse.setContext"]], "setfp16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setFp16Data"]], "setfp16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setFp16Data"]], "setfp32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setFp32Data"]], "setfp32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setFp32Data"]], "setfp64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setFp64Data"]], "setfp64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setFp64Data"]], "setint16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setInt16Data"]], "setint16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setInt16Data"]], "setint32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setInt32Data"]], "setint32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setInt32Data"]], "setint64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setInt64Data"]], "setint64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setInt64Data"]], "setint8data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setInt8Data"]], "setint8data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setInt8Data"]], "setmodelrepository() (amdinfer.server method)": [[763, "amdinfer.Server.setModelRepository"]], "setready() (amdinfer.modelmetadata method)": [[763, "amdinfer.ModelMetadata.setReady"]], "setstringdata() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setStringData"]], "setstringdata() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setStringData"]], "setuint16data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setUint16Data"]], "setuint16data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setUint16Data"]], "setuint32data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setUint32Data"]], "setuint32data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setUint32Data"]], "setuint64data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setUint64Data"]], "setuint64data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setUint64Data"]], "setuint8data() (amdinfer.inferencerequestinput method)": [[763, "amdinfer.InferenceRequestInput.setUint8Data"]], "setuint8data() (amdinfer.inferenceresponseoutput method)": [[763, "amdinfer.InferenceResponseOutput.setUint8Data"]], "shape (amdinfer.inferenceresponseoutput property)": [[763, "amdinfer.InferenceResponseOutput.shape"]], "shape (amdinfer.tensor property)": [[763, "amdinfer.Tensor.shape"]], "size() (amdinfer.datatype method)": [[763, "amdinfer.DataType.size"]], "size() (amdinfer.parametermap method)": [[763, "amdinfer.ParameterMap.size"]], "startgrpc() (amdinfer.server method)": [[763, "amdinfer.Server.startGrpc"]], "starthttp() (amdinfer.server method)": [[763, "amdinfer.Server.startHttp"]], "start_http_client_server() (in module amdinfer)": [[763, "amdinfer.start_http_client_server"]], "stopgrpc() (amdinfer.server method)": [[763, "amdinfer.Server.stopGrpc"]], "stophttp() (amdinfer.server method)": [[763, "amdinfer.Server.stopHttp"]], "str() (amdinfer.datatype method)": [[763, "amdinfer.DataType.str"]], "stringtoarray() (in module amdinfer)": [[763, "amdinfer.stringToArray"]], "value (amdinfer.datatype.value property)": [[763, "amdinfer.DataType.Value.value"]], "version (amdinfer.servermetadata property)": [[763, "amdinfer.ServerMetadata.version"]], "waituntilmodelready() (in module amdinfer)": [[763, "amdinfer.waitUntilModelReady"]], "waituntilserverready() (in module amdinfer)": [[763, "amdinfer.waitUntilServerReady"]], "workerload() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.workerLoad"]], "workerload() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.workerLoad"]], "workerload() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.workerLoad"]], "workerload() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.workerLoad"]], "workerunload() (amdinfer.grpcclient method)": [[763, "amdinfer.GrpcClient.workerUnload"]], "workerunload() (amdinfer.httpclient method)": [[763, "amdinfer.HttpClient.workerUnload"]], "workerunload() (amdinfer.nativeclient method)": [[763, "amdinfer.NativeClient.workerUnload"]], "workerunload() (amdinfer.websocketclient method)": [[763, "amdinfer.WebSocketClient.workerUnload"]]}})