
.. _program_listing_file__workspace_amdinfer_src_amdinfer_bindings_python_amdinfer.cpp:

Program Listing for File amdinfer.cpp
=====================================

|exhale_lsh| :ref:`Return to documentation for file <file__workspace_amdinfer_src_amdinfer_bindings_python_amdinfer.cpp>` (``/workspace/amdinfer/src/amdinfer/bindings/python/amdinfer.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright 2022 Xilinx, Inc.
   // Copyright 2022 Advanced Micro Devices, Inc.
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //      http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   
   #include <pybind11/pybind11.h>
   
   #include "amdinfer/bindings/python/clients/clients.hpp"
   #include "amdinfer/bindings/python/core/core.hpp"
   #include "amdinfer/bindings/python/pre_post/pre_post.hpp"
   #include "amdinfer/bindings/python/servers/servers.hpp"
   #include "amdinfer/bindings/python/testing/testing.hpp"
   #include "amdinfer/build_options.hpp"
   
   namespace py = pybind11;
   
   namespace amdinfer {
   
   PYBIND11_MODULE(_amdinfer, m) {
     py::module t = m.def_submodule("testing", "testing documentation");
     py::module p = m.def_submodule("pre_post", "pre/post documentation");
     m.doc() = "amdinfer inference library";
   
     wrapCore(m);
     wrapClients(m);
     wrapServers(m);
   #ifdef AMDINFER_BUILD_TESTING
     wrapTesting(t);
   #endif
     wrapPrePost(p);
   }
   
   }  // namespace amdinfer
