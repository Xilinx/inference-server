
.. _program_listing_file_src_amdinfer_core_predict_api_internal.hpp:

Program Listing for File predict_api_internal.hpp
=================================================

|exhale_lsh| :ref:`Return to documentation for file <file_src_amdinfer_core_predict_api_internal.hpp>` (``src/amdinfer/core/predict_api_internal.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright 2021 Xilinx, Inc.
   // Copyright 2022 Advanced Micro Devices, Inc.
   //
   // Licensed under the Apache License, Version 2.0 (the "License");
   // you may not use this file except in compliance with the License.
   // You may obtain a copy of the License at
   //
   //      http://www.apache.org/licenses/LICENSE-2.0
   //
   // Unless required by applicable law or agreed to in writing, software
   // distributed under the License is distributed on an "AS IS" BASIS,
   // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   // See the License for the specific language governing permissions and
   // limitations under the License.
   
   #ifndef GUARD_AMDINFER_CORE_PREDICT_API_INTERNAL
   #define GUARD_AMDINFER_CORE_PREDICT_API_INTERNAL
   
   #include "amdinfer/core/predict_api.hpp"  // IWYU pragma: export
   
   namespace amdinfer {
   
   template <typename T>
   class InferenceRequestBuilder {
    public:
     static InferenceRequestPtr build(
       const T req, size_t &buffer_index,
       const std::vector<BufferRawPtrs> &input_buffers,
       std::vector<size_t> &input_offsets,
       const std::vector<BufferRawPtrs> &output_buffers,
       std::vector<size_t> &output_offsets, const size_t &batch_size,
       size_t &batch_offset);
   };
   
   template <typename T>
   class InferenceRequestInputBuilder {
    public:
     static InferenceRequestInput build(const T &req, Buffer *input_buffer,
                                        size_t offset);
   };
   
   template <typename T>
   class InferenceRequestOutputBuilder {
    public:
     static InferenceRequestOutput build(const T &req);
   };
   
   }  // namespace amdinfer
   
   #endif  // GUARD_AMDINFER_CORE_PREDICT_API_INTERNAL
